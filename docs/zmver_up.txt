□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

			Ｚ－ｍｕＳｉＣ  ＳＹＳＴＥＭ Version 2.08

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

				【おしらせ】

	  今回のVersion2.08を持ってZMUSIC Ver.2.0系のバージョンアップは終了

	いたします。今後は現在テストリリースされているZMUSIC Ver.3.0系を

	バージョンアップしていきます。

	  Ver.3.0はVer.2.0とでは演奏データ(ZMS)レベルでの互換性がありますが

	ZMD及び、アプリケーションインターフェースの互換はまったく有りません。

	よってVer.3.0ではVer.2.0以前用の支援ツールなどは(一部を除いて)一切

	使えません。御注意ください。

				【利用について】

	  本アーカイブに含まれるZMUSIC.Xおよびその関連ファイルの転載／配布は

	自由に行って構いません。特に報告もいりません。またライセンスを放棄して

	いますのでプログラムの全部、または一部を使用したものを販売しても結構です。

	改造に関しても自由としますが、そういった特殊バージョンは個人的な使用、

	または内輪の使用にとどめて下さい。

	  ディスクマガジンなどのメディアへの使用も歓迎いたします。

	  なお、ＺＭＵＳＩＣの使用法については別アーカイブのマニュアルを

	参照して下さい。


	★実行ファイルアーカイブ

	ZMUSIC.X		ZMUSIC.X本体
	ZMSC.X			TINY版ZMUSIC.X
	ZPCNV.R			ZPDデータ作成コンパイラ
	MUSICZ.FNC		X-BASIC用外部関数
	ZP.R			簡易プレイヤ
	ZVT.X			ADPCMデータツール
	ZPLK.R			PCMファイルリンカ
	ZMUSIC_RS232C.BFD	RS232C MIDI VERSIONへの差分(ZMUSIC.X用)
	ZMSC_RS232C.BFD		RS232C MIDI VERSIONへの差分(ZMSC.X用)
	ZMUSIC_POLYPHON.BFD	POLYPHON MIDI VERSIONへの差分(ZMUSIC.X用)
	ZMSC_POLYPHON.BFD	POLYPHON MIDI VERSIONへの差分(ZMSC.X用)
	ZMVER_UP.DOC		本ドキュメント

	※差分ファイルのアップデートにはBUP.X (C)K.HIGASHIDE が必要です。


	★ソースリストアーカイブ

	ZMSC.HAS	ZMUSIC.Xメインプログラム
	ZMSC2.HAS	割り込み処理プログラム
	ZMSC_.HAS	ZMSC.Xメインプログラム
	WORK.S		ZMUSIC.Xワーク1
	DMA.MAC		DMAアドレス・ラベル・ファイル
	LABEL.S		ZMUSIC.Xワーク2
	MACRO.S		マクロファイル
	ZPCNV.HAS	ZPCNV.Rソースリスト
	MUSICZ.HAS	MUSICZ.FNCソースリスト
	ZP.S		ZP.Rソースリスト
	ZVT.S		ZVT.Xソースリスト
	ZPLK.HAS	ZPLK.Rソースリスト
	AZ.BAT		ZMUSIC.X作成バッチファイル
	AM.BAT		MUSICZ.FNC作成バッチファイル

								西川善司

	バグ情報等は・・・			MIYA-NET(048-650-1234,24H,8回線)
						PCVAN X1CLUB(ジャンプコード:JX1CLUB)

						(MIYA-NETはゲストユーザーでも
						 最新のZMUSIC、曲データ、支援ツールなど
						 がダウンロードできますので、
						 ぜひ一度遊びにきてみて下さい。
						 ログイン後、トップメニューで
						  ;D;5
						 と打ち込むと「ZMUSIC-SIG」に入ることが
						 できます。)

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
				      ＺＭＵＳＩＣ．Ｘ
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
－－－－－－－－－－－－－－－－version 2.00 → version 2.01－－－－－－－－－－－－－－－－－
★.p16の拡張子を持つファイルは16ビットPCMデータとみなすようにしました。

★ワウワウ(@A)実行中にm_stop()してさらにm_cont()するとワウワウが解除されることがありました。

★ＦＭ音源でピッチモジュレーションをしながらオートベンドさせて、その音符をタイでつなぐと
V1.52以前の動作と多少の食い違いが起きていました。

★Ｍ１用コマンドで正常にパラメータが設定されないことがありました。

－－－－－－－－－－－－－－－－version 2.01 → version 2.02－－－－－－－－－－－－－－－－－
★.commentで最初の文字がセパレータ文字(" " "," ":" "=")だと文字列として扱われなかった。

★ポルタメント同士のタイを指定すると希に演奏が希望通りにならないことがあった。

－－－－－－－－－－－－－－－－version 2.02 → version 2.03－－－－－－－－－－－－－－－－－
★ＭＩＤＩ－ＡＲＣＣ機能を使用した場合、発音時にﾌﾟﾁというノイズを発生することが
あったのを抑えた。

★ＭＩＤＩ拡張ピッチモジュレーション機能を波形メモリで使用した場合、発音時にﾌﾟﾁという
ノイズを発生することがあったのを抑えた。

★臨時ベロシティの復元に失敗することが有った。

★効果音と音楽演奏を並行して実行中にフェードアウトを行うと以後フェードアウトが
効かなくなることがありました。

★あほみ氏(MIYA-NET:MIYA3304)のアイディア&コーディングの
ファンクションコール$58が新設されました。
--------------------------------------------------------------------------------
ファンクション$58       call_int_play_ope

機能:   音楽演奏処理へサブルーチンコール

引数:   a5.l=ユーザー自前で作成したseq_wk_tbl

戻り値: なし
	(d0.l,a0.l以外は全て保存)
--------------------------------------------------------------------------------
　このファンクションは外部のアプリケーションからZMDの演奏ルーチンを
直接サブルーチンコールできるものです。外部アプリケーションで用意したZMDを
ZMUSIC.Xの動作とは無関係に演奏出来ます。つまり別の割り込み源を発声させ
その割り込みルーチンでこのファンクションを用いればZMUSIC.Xの音楽演奏の
テンポとはまったく無関係の効果音演奏が行えることになります。
　a5.lで指し示されるseq_wk_tblとはトラック毎256バイトで構成されるワークです。
くわしい仕様はマニュアルドキュメントやソースアーカイヴのLABEL.Sという
ラベル定義ファイルを参照してください。初期化処理などはアプリケーション側で
自前で行う必要があります。音楽演奏用のトラックとして初期化するならば
ソースリストZMSC.HAS中のinit_wks:というサブルーチンを、効果音用の
トラックとして初期化するのならばどうソース中のinit_wks2:というサブルーチンを
参考にしてください。

★リピート指定で
|: ... |1 ... |2 ... |3 ... :|
を
|: ... |3 ... |2 ... |1 ... :|
のように逆順に記述すると演奏が正常に行われないことがありました。

－－－－－－－－－－－－－－－－version 2.03 → version 2.03+－－－－－－－－－－－－－－－－－
★拡張ピッチモジュレーションとスペシャルタイを併用した場合に、タイが希望どおりに
動作しないことがありました。

－－－－－－－－－－－－－－－－version 2.03+ → version 2.04－－－－－－－－－－－－－－－－－
★[COPY]キーのベクタを不当に書き換えることがありました。

★ZMSC.Xでファンクション$3bの動作が不安定になることがありました。

－－－－－－－－－－－－－－－－version 2.04 → version 2.05－－－－－－－－－－－－－－－－－
★.p16拡張子のファイルの音程変換を行った場合に動作が異常が発生することがありました。

－－－－－－－－－－－－－－－－version 2.05 → version 2.06－－－－－－－－－－－－－－－－－
★ARCCの初期化メッセージが不当に送信されることがあったのを訂正しました。

－－－－－－－－－－－－－－－－version 2.06 → version 2.07－－－－－－－－－－－－－－－－－
★マーキュリーユニットと呼ばれるPCM音源ボードは再生周波数パラメータを多くサポートしており
このPCMドライバに対応するために周波数パラメータの上限チェックを訂正した。
これによりMML「@F」は0-31を取ることができる。

－－－－－－－－－－－－－－－－version 2.07 → version 2.08－－－－－－－－－－－－－－－－－
★MML複数トラック書き込みを実行し、エラーを発生させるとエラー発生行を間違って
算出することがありました。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
					ＺＰＣＮＶ．Ｒ
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
－－－－－－－－－－－－－－－－version 2.00 → version 2.01－－－－－－－－－－－－－－－－－
★.p16の拡張子を持つファイルは16ビットPCMデータとみなすようにしました。

★漢字のファイルネームをうまく扱えないことがあるバグを修正しました。

－－－－－－－－－－－－－－－－version 2.01 → version 2.02－－－－－－－－－－－－－－－－－
★特に変更なし

－－－－－－－－－－－－－－－－version 2.02 → version 2.03－－－－－－－－－－－－－－－－－
★特に変更なし

－－－－－－－－－－－－－－－－version 2.03 → version 2.04－－－－－－－－－－－－－－－－－
★.p16拡張子のファイルの音程変換を行った場合に動作が異常が発生することがありました。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
					ＺＰ．Ｒ
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
－－－－－－－－－－－－－－－－version 2.00 → version 2.01－－－－－－－－－－－－－－－－－
★特に変更なし

－－－－－－－－－－－－－－－－version 2.01 → version 2.02－－－－－－－－－－－－－－－－－
★特に変更なし

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
				    ＭＵＳＩＣＺ．ＦＮＣ
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
－－－－－－－－－－－－－－－－version 2.00 → version 2.01－－－－－－－－－－－－－－－－－
★特に変更なし

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
					ＺＶＴ．Ｘ
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
－－－－－－－－－－－－－－－－version 2.00 → version 2.01－－－－－－－－－－－－－－－－－
★コマンドモードにてワイルドカードを使用した時、不当にOUT OF MEMORYエラーが発生することが
あった。

－－－－－－－－－－－－－－－－version 2.01 → version 2.02－－－－－－－－－－－－－－－－－
★コマンドモードでファイルネームに対して拡張子.p16を添付するとそのデータは16bit PCMデータと
してみなされるようになった。

★コマンドモードにおいてスイッチ'C'に値8を添付すると8bit符号付きPCMファイルで出力することが
できる

－－－－－－－－－－－－－－－－version 2.02 → version 2.03－－－－－－－－－－－－－－－－－
★ファイラーの日付表示に誤りがありました。

－－－－－－－－－－－－－－－－version 2.03 → version 2.04－－－－－－－－－－－－－－－－－
★ファイラーで一度準備の出来ていないデバイスを選択するとファイラーが使用不可能になることが
ありました。

－－－－－－－－－－－－－－－－version 2.04 → version 2.05－－－－－－－－－－－－－－－－－
★ファイルネームを入力して保存する場合、上書きとなる場合は確認をするようにしました。
（ただしファイラーモードでは従来通り確認なしで上書きします。）

★8バイト以下になったADPCMファイルのピッチを上げると暴走してしまいました。8バイト以下の
ADPCMファイルのピッチ上昇処理は行えないようにしました。

－－－－－－－－－－－－－－－－version 2.05 → version 2.06－－－－－－－－－－－－－－－－－
★波形表示を従来よりも精細にしました。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
					ＺＰＬＫ．Ｒ
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
－－－－－－－－－－－－－－－－version 1.02 → version 1.03－－－－－－－－－－－－－－－－－
★'Pn'方式ピッチ変換パラメータの解釈が不十分でした。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
				    ＺＭＳＣ．Ｘとは
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

★ＭＭＬコンパイル部分などを省いたZMDデータ再生専用のZMUSIC.XがZMSC.Xです。常駐サイズが
'ZMUSIC.X'の半分程度ですみます。

★常駐後は'$01 m_alloc' '$02 m_assign' '$03 m_vget' '$06 m_trk' '$07 m_free' 
'$3e set_fm_master_vol'以外のファンクションを'ZMUSIC.X'同様に使用できます。
'$3c get_play_work'は戻り値のd0.lが意味をなさなくなります。a0.lにはちゃんとした
戻り値を返します。

★ファイル名'OPM'によるコントロールも行なえますが、ＺＭＤデータまたはＺＰＤデータ以外を
'OPM'へコピーした場合は何も実行しません。ZMSコマンド(p)や(s)…は使用できません。

★IOCS	_OPMDRVによるコントロールはできません。TRAP #3でのみコントロールできます。

★ＺＭＤデータの演奏やＺＰＤデータの変更登録は'ZMUSIC.X'同様にZP.Rで行なえます。ただし、
ＺＭＳデータの再生は行なえません。

★ファイル名'MIDI'によるMIDI楽器のデータ吸い取り機能はそのまま使用できます。MDDデータの転送
も行なえます。

★MUSICZ.FNCは使用可能ですが'm_alloc' 'm_assign' 'm_vget' 'm_trk' 'm_free' 'fm_master'命令を
使用できません。

★デフォルトでトラックバッファを32kB、ワークエリアを0kB、ＡＤＰＣＭバッファを0kB
確保して常駐します。'ZMUSIC.X'の時とデフォルトが違うので注意して下さい。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
				ユニバーサルバージョンについて
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

★このバージョンは、Ｘ６８０３０、Ｘ６８０００、ＸＶＩすべてに対応し、
さらに２４ＭＨｚにクロックアップしたＸＶＩ(あるいは１０ＭＨｚ機をクロックアップしたものなど)
すべてに対応します。

★ＲＳ－ＭＩＤＩバージョン、ポリフォン対応バージョンも、Ｘ６８０３０、Ｘ６８０００、
ＸＶＩすべてに対応し、さらに２４ＭＨｚにクロックアップしたＸＶＩ(あるいは１０ＭＨｚ機を
クロックアップしたものなど)すべてに対応しています。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
				ＲＳ２３２Ｃ　ＭＩＤＩ対応版について
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

★ＭＩＤＩボード仕様版とは以下の点が違います。

・処理速度がＭＩＤＩ・Ｉ／Ｆボード仕様版と比べて少し遅い。

・ＭＩＤＩ・Ｉ／Ｆボードを差してあってもＲＳ－ＭＩＤＩを強制的に選択する。

・外部同期モード・オプション'-E'がない。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
				ポリフォンＭＩＤＩ対応版について
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

★ＭＩＤＩボード仕様版とは以下の点が違います。

・PCM8SB.X (C)H.ETOHの常駐が必要。

・処理速度がＭＩＤＩ・Ｉ／Ｆボード仕様版と比べて少し遅い。

・ＭＩＤＩ・Ｉ／Ｆボードを差してあってもポリフォン－ＭＩＤＩを強制的に選択する。

・バルクダンプ吸い取り機能がない(ポリフォン－ＭＩＤＩによるＭＩＤＩ－ＩＮはサポートされない)。

・外部同期モード・オプション'-E'がない。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
			ＺＭＳＣ．Ｘ，ＺＭＵＳＩＣ．Ｘ使用ガイド
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

★ゲームのＢＧＭドライバとしてＺＭＵＳＩＣを使う場合

  曲データを(ゲームなどの)メインプログラムなどで管理してしまえば、ZMUSIC側の

トラックバッファはまったく必要はありません。

  また、曲の切り替え時にADPCM音を加工したりするようなことはまず考えられないので

汎用ワークも最小でよいでしょう。よって以上のことを踏まえて

A>ZMUSIC -t0 -w0

あるいは

A>ZMSC -t0 -w0

の様にすればそれぞれ常駐サイズが94Kb,55Kb程度で済むことになります。もちろん

ADPCMバッファは必要分確保する必要はありますが、かなり省メモリになります。

  この場合、曲の演奏はfunc $11の高速応答モードで行なう必要があります。

  トラックバッファを０とした関係上、当然ですがZP.Rを用いてのZMS/ZMDファイルの

演奏は不可能です。

★複数のＸ６８による同期演奏

  ０．ＺＭＵＳＩＣを/Eオプションを設定して常駐する

  １．Ｘ６８－ＡのＭＩＤＩ　ＯＵＴからＸ６８－ＢのＭＩＤＩ　ＩＮへつなぐ

　２．Ｘ６８－ＢのＭＩＤＩ　ＯＵＴを楽器１へつなぐ

　３．Ｘ６８－ＢのＭＩＤＩ　ＴＨＲＵを楽器２へつなぐ

  ４．Ｘ６８－Ｂを

	A>ZP /W filename

　　　として演奏待機状態にする

　５．Ｘ６８－Ａを

        A>ZP filename

      で演奏開始する。

  ※２台以上の場合はＸ６８－ｘのＭＩＤＩ　ＯＵＴをＸ６８－(ｘ＋１)のＭＩＤＩ　ＩＮへ
　　つないでいくか、Ｘ６８－ｘのＭＩＤＩ　ＴＨＲＵをＸ６８－(ｘ＋１)のＭＩＤＩ　ＩＮへ
　　つないでく２通りが考えられるが実用的には４台までが限界と思われる。

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
					デバッグ協力
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

順不同、敬称略

  進藤慶到、瀧康史、高橋哲史、こーたろー、みね、ＮＯＶＡ、Ｔ．Ｍ、こさっく、POSSESSED、
けんと、まいむ、M.Okamoto、LastTear、Ｍ．ＯＤＡＫＩ、ＴＴＮ、さわもと
他

□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
					Information
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

★compact XVIではADPCM音源の回路に若干の変更が施されたため、ZMUSIC他、一部の
市販ソフトウェアが正常に動作しないことがあるようです。
  不都合が確認された場合は一度シャープへ相談されてみて下さい。無償で改造してもらえるはずです。
							      ~~~~
★現在、存在するZMUSIC支援ツール

MZP.X		NAGDRV、MXDRV、RCD、MLDなど、他の音源ドライバの演奏データをZMUSIC.Xで
		演奏させることのできるマルチプレイヤー。
		(C)NOVA

ZPDEX.X		ZPDデータを個々のADPCMデータに分離する
		(C)Ussy

PDX2ZPD.X	MXDRV用のADPCMブロックデータをZPD形式に変換する
		(C)wachoman

ZMSS.X		ビジュアル・モニタ
		(C)Clc-Tan

MDX2ZMS.X	MXDRV用のMDXデータをZMSデータにする
		(C)wachoman

ZMXC.X		MXDRV用のMDXやソースファイルをZMSにしたり演奏したりする
(MDS2ZMS.X)	(C)Y.TAKI

SXZMP.X		SX-WINDOW上でのプレイヤ。ランダム演奏機能などもある。MZP.Xと組み合わせると
		ほかのドライバの演奏データも即演奏可能
		(C)ｵﾀｯｷｰｺﾞｯﾄﾞ

SXZMLV.X	SX-WINDOW上で、演奏中の曲データのチャンネル状況をモニタする
		(C)ｵﾀｯｷｰｺﾞｯﾄﾞ

SXZMMIX.X	SX-WINDOW上で、演奏中の曲データのミキシングレベルをリアルタイムに変更する
		(C)ｵﾀｯｷｰｺﾞｯﾄﾞ

EMS.X		曲データのセレクタ。MZP.Xと組み合わせるとほかの音源ドライバの演奏データも
		即演奏可能
		(C)SID

DtoS.R		ZMDデータをZMSファイルへ逆変換する
		(C)Otohime

MS.X		曲データのセレクタ。さまざまな音源ドライバを曲データに合せて切り替えて
		演奏する。
		(C)PEANUT

MMDSP.X		ZMUSIC他数種類の音源ドライバに対応したビジュアルプレイヤー＆セレクタ
		(C)Miahmie. & Gao

SXZconductor.X	ＳＸ－ＷＩＮＤＯＷ上のビジュアルプレイヤー。MZP.Xと組み合わせれば
		他の音源ドライバの演奏データも即演奏可能。
		(C)けんと

ZELM.X		ビジュアルプレイヤー＆演奏データセレクタ。
		３２チャンネル分のキーボード表示、ＦＭ音源の音色パラメータや
		ＺＭＵＳＩＣ内部パラメータのモニタ機能を装備。
		(C)T.Ninomiya

ZPP.X		ＺＭＵＳＩＣの演奏データ作成を快適に行なうことができるマクロを搭載した
		データプリプロセッサ
		(C)M.Okamoto

LMZ.X		ビジュアルプレイヤー＆演奏データセレクタ。
		３２チャンネルのキーボード表示と内部パラメータのリアルタイム表示が可能。
		(C)DG-NUT

ZAM.R		MON.Rのビジュアル強化版。ZP.R /Dと同等のキーコントロールを内蔵。
		(C)AHOMI

MZLVL.X		常駐型のビジュアルモニタ。多種多彩なスペクトラム・アナライザが特徴。
		(C)みっちぃ

ZMEX.X		ＺＭＵＳＩＣのＭＭＬを使用拡張したプリプロセッサ。
		(C)NOVA

ZBC.R		ＺＭＵＳＩＣの管理するバッファを別のメモリ空間へ移す。
		(C)TED

ZMUSIC.L	ＺＭＵＳＩＣ用Ｃ言語ライブラリ
		(C)TED

ZPLK.R		ＰＣＭファイルリンカ。たたみ込みなどのエフェクト機能も装備。
		(C)TED

ZCALL		ＺＭＵＳＩＣの効果音モードを使うためのライブラリ
		(C)K-SUKE

ZMSCLIB.A	ZMUSIC用Ｃ言語ライブラリ
		(C)高橋 敦史

ZWRD.X		ZMUSIC他対応のカラオケ・システム
		(C)高橋 敦史

ここに挙げたのは私の知っているものだけです。作者の方々ご苦労さまです。

(この他にありましたら教えて下さい。)
[EOF]
