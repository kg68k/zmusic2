
	    ＭＥＡＳＵＲＥ  ５
		ＭＭＬ


  ここではＺＭＵＳＩＣのＭＭＬについて解説します。










５．１．  ＭＭＬの文法解説を読むにあたって


  ＺＭＵＳＩＣ．Ｘは基本的にシャープ／Ｈｕｄｓｏｎ製のＯＰＭＤＲＶ．Ｘに

上位コンパチである。つまりＯＰＭＤＲＶ．Ｘに存在したＭＭＬはほぼ共通に

使用することができ、ＯＰＭＤＲＶ．Ｘ用のデータをほとんど変更無しで演奏が

可能である。

  ＺＭＵＳＩＣ．ＸではＭＭＬの小文字、大文字の区別を一切していない。

よって状況、ユーザー各位の趣味に応じて自由に使いわけが可能である。ここでは

説明の都合上ＭＭＬを大文字で、パラメータを小文字で記述している。

  省略しても良いパラメータはその旨を記述してあるがそれ以外は

省略不可である。また、数値パラメータは頭に'$'をつければ16進数が、'%'を

つければ2進数を設定することができる。何もつけなければ10進数である。

  各コマンドの頭についている印は各音源の種類を表している。全てのコマンドが

全ての音源に対応しているわけではないので注意すること。対応していない

デバイスに対してそのコマンドを用いるとエラーになるケースと無視されるケースが

ある。
	
	○内蔵ＦＭ音源
	◎内蔵ＡＤＰＣＭ
	●ＭＩＤＩ音源


５．２．  ＭＭＬ


－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■音階、休符
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ａn～Ｇn

  音階。ＡＢＣ～Ｇはハ長調のラシド～ソに対応する。

後ろに＃，＋を付ければ半音上がり、－を付けると半音下がる。

nは音長を表し、1が全音符、2が２分音符…となる。

nはマスタークロック設定コマンド'm_count()'や(Ｚn)によって設定範囲が変動する。

具体的には

1≦n≦マスタークロックの値

が設定範囲となる。以下にデフォルトのマスタークロック＝192のときの

音楽的音長と絶対音長との対応を示す。

  音楽的音長  絶対音長    音楽的音長  絶対音長
	  １    １９２          １２      １６
	  ２      ９６          １６      １２
	  ３      ６４          ２４        ８
	  ４      ４８          ３２        ６
	  ６      ３２          ６４        ３
	  ８      ２４        １９２        １

  絶対音長＝int(マスタークロック／音楽的音長)。

nは省略可能で、省略時は後述のＬ／＠Ｌコマンドで設定したデフォルト音長で 

演奏される。

nの前に'＊'をつけると絶対音長指定になる。絶対音長とはＺＭＵＳＩＣが処理する

カウンタのことでデフォルトでは全音符が192になっている。このとき例えばC4と

C*48は同時間発音されるわけである。'＊'の後ろには0～65534までの数値を

書くことができる。

例
  a#4
  b*386
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｒn

  休符。nは音長を表す。nは音階と同様の指定が可能。

  n省略時はデフォルト音長が起用される。

例
  r8
  r*96
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｗn

  指定時間、前の状態を保存する。nは音長を表す。nは音階と同様の指定が可能。

  n省略時はデフォルト音長が起用される。

例
  @w*64
  @w4..
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■変化記号／調号
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＃
＋

  シャープ（♯，嬰記号）。音階ＭＭＬの直後につけると半音高く演奏する。

２つ以上記述することもできる。

例
  c#4 f+8 g##16
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
－

  フラット（♭，変記号）。音階ＭＭＬの直後につけると半音低く演奏する。

２つ以上記述することもできる。

例
  c-4 e-8 g--16
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
[K.SIGN ～]

  調号を設定する。どの音階にどの変化記号（♯，♭）がつくのかを設定できる。

～の部分は変化記号、音階の順に設定し、１個ずつ　, で区切る。

例
  [K.SIGN +c,+d,+f,+g]  (ホ長調)
			cdfgに自動的に＃(シャープ)がつく

  [K.SIGN -a,-b,-d,-e]  (変イ長調)
			abdeに自動的に－(フラット)がつく
  [K.SIGN -a,+b]
			aに－(フラット)が、bに＃(シャープ)が自動的につく
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
！

  ナチュラル（本位記号）。音階ＭＭＬの直後に設定することによって[K.SIGN ～]で設定した

調号を臨時に取り消す事ができる。

例
  [K.SIGN -a] a a!

  としたとき、１回目のaは a- で２回目のaはフラットなしで a で演奏される。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■オクターブ
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｏn

  オクターブを設定する。初期値は4。nは－1～9まで設定可能。

  実際の発音域は各操作デバイスによって異なる。

・ＦＭ音源
  オクターブ０のＤ＃からオクターブ８のＤまで。

・ＡＤＰＣＭ
  登録しなければ発音はしないが、セレクトバンク内の(＠コマンド、MEASURE6参照)
オクターブ－１のＣからオクターブ９のＧまで対応。

・ＭＩＤＩ
  オクターブ－１のＣからオクターブ９のＧまで。実際は各楽器によって違う。
各操作ＭＩＤＩ楽器のマニュアルのインプリメンテーション・チャートを参照。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＜
＞

  オクターブを相対的に変更する。＜はオクターブを＋1し、＞はオクターブを

－1する。設定範囲を越えた場合はエラーとなる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■音長制御
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｌn
＠Ｌn

  デフォルト音長を設定する(シーケンサでいうステップタイムに相当する)。

音長をパラメータに持つＭＭＬにおいて音長が省略された場合、このコマンドで

設定したものがパラメータとして与えられる。

  Ｌのパラメータnは音楽的音長、絶対音長のいずれかを書くことができる。

  音楽的音長の場合はn分音符といった意味をなす(設定範囲については音階ＭＭＬの

説明を参照)。符点も設定可能。絶対音長は音名の時と同じように数値の前に'＊'を

書いて設定できる。設定範囲は0≦n≦65534。

  ＠Ｌのパラメータnは絶対音長のみで設定範囲は0≦n≦65534。

  初期値はＬ4(＝＠Ｌ48)である。

例
  l16.
  @l96
  l*2000
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
．

  符点。音長を示す数値の後ろに付けると0.5倍されたものが加算される。

さらに続けると元の音長の0.25倍、0.125倍…といったものが加算されていく。

ただし加算結果が65534以下でなければならない。

  絶対音長指定の後ろに付けることも出来る。また、加算する音長カウントは整数で

処理されるため、算出された音長がアンダーフローするとエラーになる。

  音長を省略した時に符点がついた場合は、その時点でのデフォルト音長に対して

符点処理された音長が、その音符の音長となる。

例
  a4..
  r8.
  c*1000.   (c*1500と同じ)
  l4 c.     (c4.と同じ)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｑn

  1音中で実際に発音している時間を音長のn/8時間単位で設定する

(シーケンサでいうゲートタイムに相当する)。

  初期値 n＝8、設定範囲は1～8。1が発音時間がもっとも短く、8が最も長い(テヌート)。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｑn

  キーオフ（発音をやめること）を絶対音長でnカウント早める。

発音音長より大きい値の場合、＠Ｑは機能せずＱ8の状態で演奏される。

例えば  ＠Ｑ96  C＊16の場合は発音長が 16－96＜0 となるので

＠Ｑの処理はされず発音長は16カウントとなる。

  初期値は＠Ｑ0に相当し設定範囲は0～32768。

  ＠Ｑを設定した時はＱは機能せず、逆にＱを設定した時は＠Ｑは機能しない。

つまり後に設定したものが有効となる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■タイ／スラー
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＆

  前後の音をつなぐ。同音名の場合は全デバイスにおいてタイとなる。

例
  a4&a16.

  異音名の場合は、各デバイスによって対応が異なる。

・ＦＭ音源
  スラーとなる
例
  a4&a#4

・ＡＤＰＣＭ
  '＆'を除いた時のように処理される
例
  a4&a#4  →  a4a#4のように演奏される

・ＭＩＤＩ
  後述のタイ・モード(@Jコマンドにより設定)によって対応が異なる。

通常モード時(@J0)
  '＆'を除いた時のように処理される
例
  a4&a#4  →  a4a#4のように演奏される

ＦＭ音源部互換モード時(@J1)
　スラーとなる。
例
  a4&a#4
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＾n

  音符の直後に書くことによって、nで指定した音長分をその音符の音長に加算する。

nの後ろに符点を書けば、符点を考慮した音長が加算される。nには絶対音長を

書くこともできる。

例
  c4^16
  d^*1000
  'ceg4^16'
  (d2^8<d)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｊn

  ＭＩＤＩ部におけるタイの処理モードを設定する。

  n=0で通常モード(初期値)、n=1でＦＭ音源部互換モードになる。

  c&d

とした場合、通常(@J0時)はＭＩＤＩでは & のない

  c d

として処理される。

  しかし@J1時ではＦＭ音源部と同様に、ある音の発音後、その音の持続音(減衰音)で

つぎの音の音程へ変化してくれるようになる。よって、ＦＭ音源部の

  (c<d)&(d>c)

や、後のコラムで動作の相違があると書かれている

  (g,e)24&e

  @b0,683 c4&c+4

のような表記もＦＭ音源部と同様に機能するようになる(ただし、最初にキーオンした

音階から１オクターブを超えることはできない)。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■連符
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
｛～｝n

 ｛～｝で囲まれたＭＭＬ群を合計の音長がn分音符音長になるように演奏する。

nには符点を付けたり、'＊'を付けて絶対音長による指定も行なえる。

 ｛～｝の中には音長を操作するＭＭＬを書くことは出来ない。（符点,Ｌ,＠Ｌ,Ｑ,＠Ｑなど）

  n省略時はデフォルト音長が起用される。

例
  {cdef}2
  {abc}4..
  {cd&de}*192
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■和音
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
'MML…'nn,dly(&)

  和音を発音する。'～'間に書けるＭＭＬは以下の通りである。

	音階            c～b(8個まで) 
	調号            # + - !
	音長            1～(符点も可)
	絶対音長        *1～*65534
	ｵｸﾀｰﾌﾞｺﾏﾝﾄﾞ     O-1～O9
	ｵｸﾀｰﾌﾞｽｲｯﾁ      < >

  １度に８和音まで発音が可能。８音以上音階を書くとエラーとなる。

  オクターブスイッチは'～'(シングルコーテーション)内だけ有効。

'～'内に音長を書かずに外に数値を書くと、これは絶対音長の指定になる。

設定範囲は0≦nn≦65534で全音符以上の発音時間も設定できる。

  ディレイパラメータdlyを設定することによって、和音を一度に発音せず、各音を

絶対音長dlyずつ時間的にずらして１音ずつ発声する(アルペジオ奏法)。

ディレイは初期値0で、省略可能だが省略時は以前設定した値がそのまま起用される。

例    
  'c4eg'          

  ドミソを４分音符で演奏する。

  o4'gb<d'96      

  ソシレを絶対音長96で演奏する。和音発音後のデフォルトオクターブは４に

変わり無いことに注意。

  'c4eg<c',6

  まずcが発音され、その６カウント後にeが発音され、更に６カウント後ずつ

g, <cが発音される。

  ディレイ値は必ず全部の音が発声可能な値でなければエラーとなる。

例えば
	'c4eg',30

などはgが発音出来ないのでエラーとなる。

  同構成音の和音～和音間、異構成音の和音～和音間、単音～和音間、和音～単音間を

'＆'で結んでのタイ／スラーが可能。ただし処理の関係上、タイでつながれた和音の

ディレイは強制的に0に設定される。つまり

'c4eg',6&'e4gb-',6

は

'c4eg',6&'e4gb-',0

として処理される。

  また、オートベンドやモジュレーション、アフタータッチ・シーケンス、ＡＲＣＣなど

全ての特殊コマンドが和音においても有効である(当然のことながら

ＦＭ音源に対してのＡＲＣＣは無効だが)。もちろん同時にこれらを和音に対して使用出来る。

  ＦＭ音源部での和音を用いた場合、チャンネルがかちあうと正常に発音されないので

注意。例えば

(t1)'CEG'48
(t2)cde             ←正常に演奏されない
(t3)efg             ←正常に演奏されない

  以下のようにしなければならない。

(t1)'CEG'48
(t2)@w4
(t3)@w4

  この例の場合でトラック２や３が未使用の場合は問題はない。

(t1)'CEG'48        （トラック2，3はアサインも確保もしていない）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                                 絶対音長０と１			      ┃
┃                                                                            ┃
┃                                                                            ┃
┃  ＯＰＭＤＲＶ．Ｘでは絶対音長１の音符はキーオフしないというバグが          ┃
┃									      ┃
┃ありましたが、これを逆手に取ってピッチエンベロープなどを実現するテクニックが┃
┃									      ┃
┃いつのまにか一般的となってしまいました。ＺＭＵＳＩＣでもこのバグ技を	      ┃
┃									      ┃
┃使えるようにしてあります。つまり絶対音長１では			      ┃
┃									      ┃
┃	@l1 c&d&e&f&g			         			      ┃
┃									      ┃
┃と									      ┃
┃									      ┃
┃      @l1 cedfg							      ┃
┃									      ┃
┃は同じということになります。						      ┃
┃									      ┃
┃  また、ＺＭＵＳＩＣでは休符、ウェイト、和音とポルタメントを除いて          ┃
┃									      ┃
┃絶対音長０も使用可能になっています(音楽的音長０は使用不可)。音長がゼロの    ┃
┃									      ┃
┃音符は発音処理を行うだけです。操作対象デバイスによって多少の効果の相違が    ┃
┃									      ┃
┃ありますので注意して下さい。						      ┃
┃									      ┃
┃●ＭＩＤＩ								      ┃
┃									      ┃
┃	c*0e*0g*0							      ┃
┃									      ┃
┃ではcegの和音が鳴りっぱなしになります。				      ┃
┃									      ┃
┃　ＭＩＤＩ楽器の中にはリズムキットを持つものが多くあり、大抵、ノートオンの  ┃
┃									      ┃
┃メッセージのみで操作可能です(ノートオフの処理を省略してもかまわない)。      ┃
┃									      ┃
┃こういったリズムキットをシーケンスする場合に絶対音長０は有用です。	      ┃
┃									      ┃
┃  たとえばO2C＝バスドラム, O2D＝スネアドラム, O3C+＝クラッシュシンバルの    ┃
┃　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　          ┃
┃ような ローランド系リズムキットで				              ┃
┃									      ┃
┃ 	l4 O3C+*0 |:4 O2 CDCD :|					      ┃
┃									      ┃
┃とすると、最初の小節の頭だけシンバルが鳴り、２回目以降は鳴らないといった    ┃
┃									      ┃
┃シーケンスができます。						      ┃
┃									      ┃
┃  絶対音長０の音符は楽器の最大同時発声数内で１トラックにつきいくつでも      ┃
┃									      ┃
┃設定可能です。							      ┃
┃									      ┃
┃  絶対音長０の音符はそのままでは鳴りっぱなし状態になりますが、これを        ┃
┃									      ┃
┃('＆'をつけて)タイで通常音符へつなぐとその通常音符が鳴り終わった時点で      ┃
┃									      ┃
┃絶対音長０の音もノートオフすることができます。                              ┃
┃									      ┃
┃  	c*0&e*0&g4							      ┃
┃									      ┃
┃とするとcegの和音が４分音符長で鳴ります。専用和音コマンドでは和音の         ┃
┃									      ┃
┃各構成音に対してベロシティのバラツキを設定できませんが、この絶対音長０の    ┃
┃									      ┃
┃音符を用いて								      ┃
┃									      ┃
┃ 	@u110c*0& @u105e*0& @u88g4					      ┃
┃									      ┃
┃のようにして実現できます。						      ┃
┃									      ┃
┃  この'＆'で結ぶ書式では最大８和音までが記述できます。８和音の時は	      ┃
┃									      ┃
┃音長ゼロの音符が７つと通常音長の音符が１つという構成になることになります。  ┃
┃									      ┃
┃音長ゼロの音符を８つ以上記述した場合は古い順にノートオフされない音が出て    ┃
┃									      ┃
┃きます。また、従来の和音コマンドとの混在はもちろん可能で、状況状況に応じて  ┃
┃									      ┃
┃使い分けができます。また、この２つの書式間のタイ／スラーも可能です。	      ┃
┃									      ┃
┃●ＦＭ音源								      ┃
┃									      ┃
┃  基本的にモノフォニックですので					      ┃
┃									      ┃
┃	c*0e*0g*0							      ┃
┃									      ┃
┃のような表記で和音を発音させることはできません。しかし、ＭＩＤＩと同じように┃
┃									      ┃
┃絶対音長０の音符を'＆'で通常音符へつなぐことによって和音を発音させることは  ┃
┃									      ┃
┃できます。ですから、ＦＭ音源でも					      ┃
┃									      ┃
┃  	c*0&e*0&g4							      ┃
┃									      ┃
┃ 	v10c*0& v12e*0& v11g4						      ┃
┃									      ┃
┃のような記述で和音の発音が可能です。もちろん、従来の和音コマンドとの混在も  ┃
┃									      ┃
┃でき、この２つの書式間のタイ／スラーも可能です。    			      ┃
┃									      ┃
┃●ＡＤＰＣＭ								      ┃
┃									      ┃
┃  完全にモノフォニックであるため、絶対音長０による和音発音はできません。    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■音量／ベロシティ
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｖn

  音量の設定を行う。設定範囲は0≦n≦16。初期値は8。

ＡＤＰＣＭ音源部で使用可能となるのはＰＣＭ８独立チャンネルモードの時のみである。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｖn

  音量の設定を細かく行う(絶対音量と呼ぶ)。設定範囲は0≦n≦127。

ＡＤＰＣＭ音源部で使用可能となるのはＰＣＭ８独立チャンネルモードの時のみである。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＿n

￣n

  音量の相対指定を行う。~は音量増加を表し_は音量減少を表す。設定範囲は

0≦n≦127で、演算の結果、アンダーフローを起こした場合は０へ、オバーフローを

起こした場合は127へ修正される。また計算は＠Ｖnで表される絶対音量レベルで

行われる。

  nを省略した場合は以前に設定したものが起用される。nの初期値は1。

  なお、ＡＤＰＣＭ音源部で使用可能となるのはＰＣＭ８独立チャンネルモードの

時のみである。

例
  @v120 _10 c _ d ~ e  (cは@120－10＝@v110で、dは@v110－10＝@v100で、
			eは@v100＋10＝@v110で演奏される)
  |:10 _10 c :|        (段々と音量が下がりながらcが演奏される)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                                  Ｖと＠Ｖ				      ┃
┃									      ┃
┃									      ┃
┃  ＭＩＤＩ音源によっては音量をベロシティでのみ決定するものがあります　　　　┃
┃　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　┃
┃(RX-8など)。　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　┃
┃									      ┃
┃そういう楽器に対してのＶ／＠Ｖコマンド動作は全く保証されません。	      ┃
┃									      ┃
┃  ＦＭ音源、ＡＤＰＣＭ(ＰＣＭ８独立チャンネルモード時)／ＭＩＤＩ音源では    ┃
┃									      ┃
┃＠ＶとＶの対応値が異なります。これはＦＭ音源の出力音量が		      ┃
┃									      ┃
┃指数関数的に増減するのに対してＭＩＤＩ(＆ＡＤＰＣＭ)では線形に増減するから  ┃
┃									      ┃
┃です。以下に音源別にに＠ＶとＶの対応表を示します。			      ┃
┃									      ┃
┃        ＦＭ音源							      ┃
┃									      ┃
┃      Vn       0 1  2  3  4  5  6   7   8   9   10  11  12  13  14  15  16  ┃
┃      @Vn     85 87 90 93 95 98 101 103 106 109 111 114 117 119 122 125 127 ┃
┃									      ┃
┃									      ┃
┃									      ┃
┃        ＭＩＤＩ音源(＆ＡＤＰＣＭ)					      ┃
┃									      ┃
┃      Vn        0  1  2  3  4  5  6  7  8  9 10 11 12  13  14  15  16       ┃
┃      @Vn       0  7 15 23 31 39 47 55 63 71 79 87 95 103 111 119 127       ┃
┃									      ┃
┃									      ┃
┃  以上のことから相対ボリューム_n ~nの使用結果においても結果が異なります。   ┃
┃									      ┃
┃例えば								      ┃
┃									      ┃
┃        v8 _1								      ┃
┃									      ┃
┃とした場合ＦＭでは結果が@V105に相当しますがＭＩＤＩでは@V62になります。     ┃
┃									      ┃
┃  また、ＦＭ音源ではベロシティーとボリュームが全く同じ機能をします。例えば  ┃
┃									      ┃
┃    Ｖ8  ＠Ｕ106  ＠Ｖ106             				      ┃
┃									      ┃
┃は同じ機能を果たします。						      ┃
┃									      ┃
┃  なお、ＰＣＭ８独立チャンネルモード時のＡＤＰＣＭ音はＶ9が元音量です。     ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｕn
Ｕn

  ベロシティの設定を行う。ベロシティとは鍵盤を押す強さ、すなわち音量のこと。

  ＭＩＤＩ楽器によってはこれによって音のニュアンスを変えることが出来る。

設定範囲は 0≦n≦127で127が最強(大)に相当。またＦＭ音源では単純に音量として

扱われる。

  初期値は127である。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｕ＋n
＠Ｕ－n
Ｕ＋n
Ｕ－n

  ベロシティの相対指定を行う。設定範囲は－127≦n≦＋127。演算によって

アンダーフローを起こした場合は0、オーバーフローを起こした場合は127に

修正される。

  初期値は＋1。

例
  @u127c @u-10d @u+5e
  u127c  u-10d  u+5e
c, d, eはそれぞれベロシティ127, 117, 122でキーオンする。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｕ

  以前設定した相対ベロシティの値でもう一度相対ベロシティの指定を行う。

例
  @u127 @u-10 @u
最後の@uもまた@u-10で機能する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
Ｕ

  以前設定した＠Ｕの値を再設定する。

例
  @u127c u-10d ue
c, d, eがそれぞれベロシティ127, 117, 127でキーオンされる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                                  Ｕと＠Ｕ				      ┃
┃									      ┃
┃									      ┃
┃  機能的にはまったく同じですが、演奏時にリアルタイムに考慮されるか否かの    ┃
┃									      ┃
┃相違があります。							      ┃
┃									      ┃
┃  	@u100|:4 @u+5 c :|						      ┃
┃									      ┃
┃としたとき４回とも@u105でcが演奏されますが				      ┃
┃									      ┃
┃    	@u100|:4 u+5 c :|						      ┃
┃									      ┃
┃としたときは@u105, @u110, @u115, @u120でそれぞれ演奏されます。              ┃
┃									      ┃
┃  なお、管理は@uとuはまったく別です。ですから				      ┃
┃									      ┃
┃  	@u5  |:3 @u+50 c u-5:| d				              ┃
┃									      ┃
┃としたとき@u55で3回cが演奏され@u50でdが演奏されます。			      ┃
┃									      ┃
┃  uのみではそれまでに最後に設定した@uをもう１回設定するので		      ┃
┃									      ┃
┃  	@u110|:10 u+2 c :|u e						      ┃
┃									      ┃
┃のように、ループで変化してしまったベロシティを元に戻すことが出来ます。　    ┃
┃									      ┃
┃この例では、直前のベロシティ値によらずeは@u110で演奏されます。              ┃
┃									      ┃
┃  このようにU,@Uを使い分ければ、かなり複雑なシーケンスをすることが出来ます。┃
┃									      ┃
┃  @uは、ループの影響を受けないグローバルな存在、uはループ等の影響を         ┃
┃									      ┃
┃受ける局所的な存在というわけです。					      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
Ｚn1,…,n16

  ベロシティのばらつきを設定する。これをＺＭＵＳＩＣでは

ベロシティー・シーケンスと呼ぶ。各値の設定範囲は0≦ni≦127。

  これはこの先最大16個の音階ＭＭＬ、和音ＭＭＬ、ポルタメントＭＭＬの

ベロシティを先に設定するものである。

例えば
	z127,99,80      cdefg

とするとcはベロシティ127で、dはベロシティ99で、eはベロシティ80で、

ここでfは再びベロシティ127で、gはベロシティ99で発音される。

値は最大16個まで記述することができ、1個のみ指定した時は＠Ｕと全く同様に機能

する。数値の頭に±を記述すれば相対指定が可能である。

数値を全く書かずに'Ｚ'のみ記述するとベロシティ・シーケンスのＯＦＦと解釈される。

  ベロシティ・シーケンスはループコマンドを無視して処理されるので

	z99,100,127 |:100 c :| d e

とした場合cが100回ベロシティ99で、ループ外のdがベロシティ100で、

eがベロシティ127で演奏される。

  このコマンドを効果的に使えばピアノソロ等を極めて人間的にシーケンスすることが

できる。ＭＩＤＩ楽器によってはベロシティの変化にともなってニュアンスや

音色を変えることが出来るのでそういった機能と合わせて使えばかなり興味深い

効果を得ることが出来る。

注意
  ＦＭ音源にこれを用いた場合は単純にその値に対応した絶対音量で発音される。
  ベロシティコマンド＠Ｕ／Ｕを使用すると自動的にベロシティ・シーケンスは解除される。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ピッチシフト／ディチューン／オートベンド
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
Ｋn

  音程を半音単位で上下させる（キートランスポーズ）。nはn半音を意味し、

設定範囲は－128≦n≦127(±10オクターブ程度に相当)。

初期値は0、またニュートラル（中央値）も0である。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｋn

  キートランスポーズを1/64半音単位で行う(いわゆるディチューン)。

設定可能範囲は－768≦n≦768(±12半音程度に相当)。

初期値は0、またニュートラルも0である。

  Ｋと＠Ｋは全く管理が別である。例えば

	   @k10 cdefg

の頭に  k1  をつけて

	k1 @k10 cdefg

としたとすると1半音と10/64半音上にピッチシフトされてcdefgが演奏される。

  いちいちＭＭＬを書き直すこと無く各パートのＭＭＬの頭にＫコマンドを書くだけで

ディチューン等も考慮した転調が実現出来る。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｂn

  ベンド値(ディチューン)を設定する。＠Ｋと全く同じ機能をすると考えて良いが

１オクターブ≒8192で換算される点が違う。ユーザーがＭＩＤＩ音源に

慣れている場合は＠Ｂを、ＦＭ音源に慣れている場合は＠Ｋを使うと良いだろう。

設定範囲は－8192≦n≦8191で、初期値は0、ニュートラルも0である。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｋn1,n2,dly

  オートベンドの設定を行う。＠Ｋの後ろに２つ以上のパラメータを書くと

オートベンドの設定となる。この場合、n1はベンドスタート値、

n2はベンドエンド値、dlyはディレイ値を表す。それぞれ

	－768≦n1≦768, －768≦n2≦＋768, 0≦dly≦32767。

具体的な使用方法を示すとする。ベンドレンジが１オクターブになっている場合に

	@k0,-64,24     (64＝1半音)

とすると発音後、24絶対カウント後から音程が下がり始めキーオフまでに

半音下がる。

ディレイは省略可能で省略時は以前の設定値が起用される。初期値は

n1,n2,dlyともに0である。

ベンドレンジはＦＭは１オクターブに固定、ＭＩＤＩは後述の＠Ｇコマンドで  

変更可能である。

  ＠Ｋおよび＠Ｂにてディチューンを設定した場合はオートベンドは以降

強制的にＯＦＦとなる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｂn1,n2,dly

  オートベンドの設定を行う。＠Ｂの後ろに２つ以上のパラメータを書くと

オートベンドの設定となる。この場合、n1はベンドスタート値、

n2はベンドエンド値、dlyはディレイ値を表す。それぞれ

	－8192≦n1≦8191, －8192≦n2≦8191, 0≦dly≦32767。

具体的な使用方法を示すとする。ベンドレンジが１オクターブになっている場合に

	@b0,-683,24     (683≒8192/12≒1半音)

とすると発音後、24絶対カウント後から音程が下がり始めキーオフ時までに

半音下がる。

ディレイは省略可能で省略時は以前の設定値が起用される。初期値は

n1,n2,dlyともに0である。

ベンドレンジはＦＭは１オクターブに固定、ＭＩＤＩは後述の＠Ｇコマンドで

変更可能である。

  ＠Ｋおよび＠Ｂにてディチューンを設定した場合はオートベンドは以降

強制的にＯＦＦとなる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
(k1k2)n,dly

  ポルタメントを行う。k1はポルタメント・スタート・キー・ＭＭＬ、

k2はエンド・キー・ＭＭＬ。以下のＭＭＬコマンドを()内に記述できる。

	音階            c～b 
	調号            # + - !
	音長            1～(符点も可)
	絶対音長        *1～*32767
	ｵｸﾀｰﾌﾞｺﾏﾝﾄﾞ     O－1～O9
	ｵｸﾀｰﾌﾞｽｲｯﾁ      < >

和音コマンドとは違ってオクターブスイッチは(～)外へも影響する。

  音長は和音コマンド同様にキーの後ろに書くことも、(～)の外に書くこともできる。

外に書いた場合は絶対カウントとみなされる。絶対音長ではnは0≦n≦32767まで

設定可能なので全音符以上の発音時間を設定することも可能である。

  dlyはディレイで絶対カウント単位でポルタメントのかかり方を遅らせることが出来る。

設定可能範囲は0≦dly≦32767。dlyは省略すると以前の設定値が起用される。

  音長を省略するとデフォルトの音長(Ｌまたは＠Ｌコマンドで指定したもの)が起用される。

  ＭＩＤＩ楽器において、後述の＠Ｇコマンドでベンドレンジを12(1ｵｸﾀｰﾌﾞ)以外に

変更したとき、あるいはＭＩＤＩ楽器のベンドレンジが12に設定されていない時の

動作は表記通りにならない。

例
  o4(g2<g)
  オクターブ4のgでキーオンし、２分音符分鳴り終えるまでにオクターブ5のgまで
なめらかに音程をシフトしていく。
コマンド終了後はオクターブは5になっていることに注意。

  (o3d*96,e),48
  オクターブ3のdでキーオンし、このピッチで48カウント分演奏し、それ以降 
絶対音長96でキーオフするまでにオクターブ3のeまで音程をシフトしていく。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｇn

  ベンドレンジの設定を行う。nはＭＩＤＩ楽器によって設定範囲が異なる。

また、外部からベンドレンジを操作出来ないものや、プログラムチェンジ

(音色切り換え)時に初期化されてしまうものなどがあるので、楽器のマニュアルを

よく読んでから使用したほうが良い。また、ベンドレンジを変更するとポルタメントの

効果も変化してくるので注意。逆にベンドレンジを変更すればオートベンドコマンドを

用いて１オクターブ以上のベンドを実現したりすることも可能である。

初期値はn＝12を設定しているが楽器側がベンドレンジを変更出来ないものであれば

不定である。

  ＦＭ音源対象トラックにおいては無効(12に固定)である。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                         オートベンドとポルタメント			      ┃
┃									      ┃
┃									      ┃
┃  オートベンドとポルタメントの具体例と両コマンドの対象デバイスにおける      ┃
┃									      ┃
┃効果の相違点について少し解説します。					      ┃
┃									      ┃
┃        (c+4<<c+),8							      ┃
┃									      ┃
┃はc+をディレイで指定した8カウント分演奏した後、４分音符－8カウントの時間内に┃
┃									      ┃
┃２オクターブ上のc+まで上昇します。オクターブスイッチの影響で以降２オクターブ┃
┃									      ┃
┃上になることに注意してください。					      ┃
┃									      ┃
┃        (g,e)24&e							      ┃
┃									      ┃
┃は絶対カウント24の時間内にgからeへピッチダウンを行いキーオフせずeへ         ┃
┃									      ┃
┃つなぐことになります。						      ┃
┃									      ┃
┃  ここで注意が１つあります。以上２つの例はＦＭ音源においてのみ有効です。　　┃
┃									      ┃
┃  １つ目が実現不可能なのは、ＭＩＤＩでは楽器側のベンドレンジが１オクターブと┃
┃									      ┃
┃想定して処理しているため１オクターブを超えたポルタメントは不可能だからです。┃
┃									      ┃
┃  内蔵ＦＭ音源は音程がリニアな構造をしているため発音可能範囲内であれば      ┃
┃									      ┃
┃任意の音程を出力可能ですがＭＩＤＩにおいてはポルタメントは(オートベンドも)  ┃
┃									      ┃
┃ベンダーホイールの上げ下げでピッチをコントロールしているため２つ目の例を    ┃
┃									      ┃
┃ＭＩＤＩに対して行うとＦＭとは違った動作を示してしまいます。２つ目の例を    ┃
┃									      ┃
┃ＦＭと同じ効果をＭＩＤＩで実現したい場合は                                  ┃
┃									      ┃
┃        (g,e)24&g							      ┃
┃									      ┃
┃ということになります。つまりＭＩＤＩにおいてのタイはキーオフせず、	      ┃
┃									      ┃
┃ベンダー値を以前のまま保持する事を意味しているのです。同様に		      ┃
┃									      ┃
┃        o4 (c<c)&c							      ┃
┃									      ┃
┃はＦＭ音源ではo4のcから１オクターブ上のo5のcへポルタメントを実行し	      ┃
┃									      ┃
┃o5のcへ音をつなぐ事が出来ますがこれと同じ事をＭＩＤＩで実現するためには     ┃
┃									      ┃
┃        o4 (c<c)&>c							      ┃
┃									      ┃
┃あるいは								      ┃
┃									      ┃
┃        o4 (c<c)&o4c							      ┃
┃									      ┃
┃としなければなりません。ＭＩＤＩの場合は発音後どれくらいベンダーホイールを  ┃
┃									      ┃
┃動かしたかで音程をコントロールするのでタイの場合はポルタメントの開始音程を  ┃
┃									      ┃
┃書かなければならないのです。						      ┃
┃									      ┃
┃ このような相違点はオートベンドコマンドにも見られます。		      ┃
┃									      ┃
┃        @b0,683,0 c4            (683≒8192/12≒1半音)			      ┃
┃									      ┃
┃ではＦＭ音源ではc4がc+4へ向かって上昇しますがc+4を持続したい場合は	      ┃
┃									      ┃
┃ＦＭの場合は								      ┃
┃									      ┃
┃        @b0,683,0 c4&c+4						      ┃
┃									      ┃
┃とすれば良いのですがＭＩＤＩの場合は					      ┃
┃									      ┃
┃        @b0,683,0 c4&c4						      ┃
┃									      ┃
┃としなければならないわけです。					      ┃
┃									      ┃
┃  オートベンド、ホルタメント共にＱコマンドの影響を受ける点にも注意して      ┃
┃									      ┃
┃ください。例えば							      ┃
┃									      ┃
┃        q4 (b-<b-)							      ┃
┃									      ┃
┃とした場合は１オクターブ上のb-に達する前にキーオフしてしまいます。	      ┃
┃									      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■パンポット
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｐn

  パンポットの設定を行う。設定範囲は0≦n≦3である。初期値は3。

  0は出力停止、1は左、2は右、3は中央。

  ＦＭ音源ではＰ0はミュートに相当するがＭＩＤＩではこれに対応する機能がないので

便宜上＠Ｖ0 ＠Ｕ0を行う。通常はＭＩＤＩではＰ0は用いないこと。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｐn

  パンポットを多段階指定する。一応ＭＩＤＩ専用だがＦＭ／ＡＤＰＣＭに   

設定した場合は値に応じて３段階のL/M/Rに変換される。

  設定範囲は0≦n≦127であるがＭＩＤＩ楽器によっては無効となる場合がある

(Ｍ１,ＳＹ７７など)ため各ＭＩＤＩ楽器のマニュアルを参照のこと。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｐ＋n
＠Ｐ－n

  パンポット(＠Ｐ)を相対的に設定する。設定範囲は－127≦n≦＋127で、演算の結果、

アンダーフローを起こした場合は0へ、オーバーフローを起こした場合は127へ

修正される。

例
  @p64|:10 @p+5 c16 :|  (音がだんだん右から鳴るようになっていく)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                                 パンポット				      ┃
┃									      ┃
┃									      ┃
┃  ローランドＭＴ－３２系(ＣＭ３２Ｌ，ＣＭ３２Ｐ，ＣＭ６４Ｌ，ＣＭ５００)の  ┃
┃									      ┃
┃パンポットは実はＭＩＤＩ規格とは正反対の値で音場が切り換わります。	      ┃
┃									      ┃
┃よってＰ1,Ｐ2,Ｐ3はそれぞれＭＴ３２系においてはR,M,Lと音場が切り換わります。┃
┃									      ┃
┃  ＺＭＵＳＩＣ．ＸはＭＩＤＩ規格にのっとって左を＠Ｐ0、中央を＠Ｐ64、右を   ┃
┃									      ┃
┃＠Ｐ127としています。							      ┃
┃									      ┃
┃  ＦＭ音源やその他のＭＩＤＩ楽器と同じ音場を得るためにＭＴ３２系をご使用の　┃
┃									      ┃
┃方は背面のアウトプットを左右入れ換えて接続することをお勧めします。	      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■テンポ
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｔn

  テンポを設定する。nはタイマＢモード（デフォルト状態）では30～300、

タイマＡモード（MEASURE2参照）では77～300である。

  nは１分間の４分音符の数に相当する。

  初期値は120。１つのトラックで指定すれば全トラックに影響する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｔ＋n
Ｔ－n

  テンポを相対的に設定する。演算の結果有効範囲を超えてしまった場合は

設定可能範囲内に自動修正される。

  1つのトラックで指定すれば全トラックに影響する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｔn

  割り込み周期を割り込みタイマーへ直接設定する。

機能的にはＴコマンドと同じだがパラメータnが割り込み周期である点が違う。

  以下に各タイマーとテンポの相関を表す。

タイマＡ＝1024－(78125/テンポ)
タイマＢ＝256－(78125テンポ)/16

  １つのトラックで指定すれば全トラックに影響する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｔ＋n
＠Ｔ－n

  タイマー値を相対的に設定する。演算の結果有効範囲を超えてしまった場合は

設定可能範囲内に自動修正される。

  1つのトラックで指定すれば全トラックに影響する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■音色／バンク切り換え
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠n

・ＦＭ音源
    音色を音色番号nに設定する。1≦n≦200。初期値なし。

・ＭＩＤＩ
    音色を音色番号nに設定する。1≦n≦128。初期値なし。

・ＡＤＰＣＭ
    ４つあるＡＤＰＣＭのバンクのうちどれを使用するかを設定する。
  1≦n≦4。初期値＝１。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
Ｉn1,n2

  ＭＩＤＩ楽器の音色のバンク切り換えを行う。KORGのｳｪｰﾌﾞｽﾃｰｼｮﾝ、ROLANDのＳＣ５５など

では音色がバンクに分かれており、音色切り換えはこの命令でバンクを指定してから行う。

同一バンク内で切り換えを行う場合は一度設定すれば以降設定する必要はない。

n1はバンク番号上位、n2はバンク番号下位を表し設定範囲はn1,n2ともに0～127まで

である。パラメータは省略すると強制的に0になる。

  ＳＣ５５ではバンク切り換えパラメータの上位のみ有効としているので

	Ｉn1

のみでバンク(ＳＣ５５のマニュアルではバリエーションと呼んでいるが)n1へ切り換える

ことが出来る。

  ｳｪｰﾌﾞｽﾃｰｼｮﾝではバンク切り換えパラメータの下位のみ有効としているので

	Ｉ0,n2

でバンクn2へ切り換えることが出来る。

例
  i0 @128
  i0,12 @11
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■操作チャンネル変更
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｎn

  そのトラックの操作対象デバイスの変更を行う。設定範囲は1≦n≦32で各数値に

対応したチャンネル番号はＭＵＳＩＣＺ．ＦＮＣの'm_ch()'命令や

ＺＭＳファイルコマンド(Ｂn)命令によって違ってくる。

  m_ch("FM")、(B0)の時
	n＝     1～8    内蔵ＦＭ音源チャンネル1～8
		9       内蔵ＡＤＰＣＭ音源
		10～25  ＭＩＤＩチャンネル1～16
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)

  m_ch("MIDI")、(B1)の時
	n＝     1～16   ＭＩＤＩチャンネル1～16
		17～24  内蔵ＦＭ音源チャンネル1～8
		25      内蔵ＡＤＰＣＭ音源
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｎn

  Ｎコマンドと機能的には同じ。しかしＭＵＳＩＣＺ．ＦＮＣの'm_ch()'命令、

ＺＭＳファイルコマンドの(Ｂn)命令の状態に関わらず絶対的に指定が可能である。

nの設定範囲は
	n＝     1～8    内蔵ＦＭ音源チャンネル1～8
		9       内蔵ＡＤＰＣＭ音源
		10～25  ＭＩＤＩチャンネル1～16
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)

でm_ch("FM")、(B0)の時のＮコマンドとちょうど同じである。

  m_ch("MIDI")とするとN1～16はそのままＭＩＤＩチャンネル1～16に対応し、

＠Ｎ1～9は（当然だが）ＦＭ1～8そしてＡＤＰＣＭに対応するので概念的に分かりやすい。 
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                          突然のチャンネル切り換え			      ┃
┃									      ┃
┃									      ┃
┃  キーオフしないまま異種のデバイスへチャンネルを切り換えてしまった場合、    ┃
┃									      ┃
┃音が鳴り続けてしまう場合があります。たとえばＭＩＤＩ音源でタイを使って　    ┃
┃									      ┃
┃キーオフしないうちにＦＭ音源チャンネルに切り換えるとＭＩＤＩの音が          ┃
┃									      ┃
┃鳴り止まずに鳴り続けてしまいます。もしそうなってしまった場合は'm_stop()'で  ┃
┃									      ┃
┃音を止めるしかありません。						      ┃
┃									      ┃
┃例									      ┃
┃									      ┃
┃    @n10 c&@n1c     （ＭＩＤＩ楽器で発音されたcが鳴りっぱなしになります）   ┃
┃    ↑    ↑FM1ﾁｬﾝﾈﾙ							      ┃
┃    MIDI1ﾁｬﾝﾈﾙ							      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■アフタータッチ・シーケンス
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｚn1,…,n8

  アフタータッチを音長の1/8時間単位で設定する。これをＺＭＵＳＩＣ．Ｘでは

アフタータッチ・シーケンスと呼ぶ。各値の設定範囲は0≦ni≦127。

  発音後の音のニュアンスを細かく変化させることができる。

例えば

	@z127,120,110,127,80,60,50,10

として絶対音長192の音長でキーオンしたとすると192/8＝24で24カウント毎に

アフタータッチを変化させる。順を追って説明すると

発音はベロシティ127でキーオンされる。その24カウント後アフタータッチ120

の強さで鍵盤を押さえた(鍵盤を押し込む強さを弱めたというべきか?)ことになり、

以降も同様である。

  ＭＩＤＩ楽器によっては発音後の鍵盤を押す強さ(即ちアフタータッチ)によって

音のニュアンスを変えることができ、サンプラーなどでは全く別の音色を発音させる

ことも可能なので使用方法によってはかなり興味深い効果を得ることが出来る。

  ＦＭ音源でこのコマンドを使用した場合は発音後の絶対音量を設定値で

変化させることができる。ソフトエンベロープなどを実現したい場合に威力を発揮する。

(もちろんＭＩＤＩ楽器の設定でアフタータッチに対応する効果を音量に設定しておけば

ＦＭと同じようにソフトエンベロープ的な効果を得ることが出来る。)

  パラメータは任意の位置で省略可能で、数値の頭に±を付けることによって

相対的な値の指定も可能である。例えば

	@z127,,,10
	@z,,,,120,,1
	@z,,120,,-10,+5

といった記述が可能である。省略した部分は前の値を持続するということになり、

その間はアフタータッチの情報は送信されない。

  先頭パラメータを省略した場合には発音は以前に設定したベロシティ＠Ｕ／Ｕの値で

行われる。それ以外は先頭のパラメータの値のベロシティでキーオンされる。

  相対指定時にオーバーフロー/アンダーフローを起こした値は許容範囲内の

最大値最小値に修正される。

  値を全て省略した場合はアフタータッチ・シーケンス解除と解釈される。

例
  @z
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ピッチ・モジュレーション（音程モジュレーション／ＰＭ／ビブラート）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｍn1,…,n8 ...(1)
または
＠Ｍn ...(2)

  ピッチ・モジュレーション（音程を細かく震わせる）の振幅設定を行う。

(1)１／８モード  ピッチ・モジュレーション

  発音後、音長の1/8時間単位で振幅(モジュレーション・デプス)を変化させることが

出来る。設定可能範囲はＦＭ音源は－32768≦ni≦32767、ＭＩＤＩのノーマルモードは

0≦ni≦127、拡張モード時は－768≦ni≦768(－8192≦ni≦8191)。値は任意の位置で

省略可能、8個まで記述でき、相対指定も可能で

	@m60,,,50,127
	@m,,,,127
	@m,,120,-10,+5

といった記述が出来る。

  こちらのモードを指定した場合は後述のディレイ・コマンドで設定したディレイ値は

無視される。


(2)ディレイ・モード  ピッチ・モジュレーション

  振幅(モジュレーション・デプス)を１つだけ設定する。振幅の設定範囲は

－32768≦n≦32767。

  後述のディレイ・コマンドで設定したディレイの後nの深さで

ピッチ・モジュレーションを実行する。

  初期値はいずれのモードにおいても0。また全ての値を省略した場合は

モジュレーション解除のスイッチとなる。

例
  @m
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ＡＲＣＣ(Assignable real time control change)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｃn,r,m

  任意のコントロール・チェンジナンバーnを選び、これを本命令で登録しておき、

後述の＠Ａコマンドにて、そのコントロール・チェンジでＭＩＤＩ音源をリアルタイムに

コントロールすることができる。これをＺＭＵＳＩＣではアサイナブル・リアルタイム・

コントロール・チェンジ(Assignable realtime control change)と呼ぶ(以後ＡＲＣＣ)。

  コントロール・チェンジ番号の有効値はＭＩＤＩ楽器によって異なるので

各楽器のマニュアルのインプリメンテーション・チャートを参考のこと。

  ＡＲＣＣの実行を解除した時に登録したコントロール・チェンジnに対して

リセットという意味でなんらかの値を設定することができる。その設定する値

というのがパラメータrで、省略時は0となる。設定範囲は0≦r≦127

  後述の拡張ＡＲＣＣモード使用時にはプリセット波形やユーザー波形が使用可能となるが

その波形の基準値となるのがmである。詳しくは５．３．節で解説する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ａn1,…,n8 ...(1)
または
＠Ａn ...(2)

(1)１／８モード  ＡＲＣＣ

  発音後音長の1/8時間単位で先述の＠Ｃで登録したコントロール・チェンジへ値を

送信し音源を制御することが出来る。値の設定範囲は0≦ni≦127。

（拡張ＡＲＣＣモード時には設定範囲は－127≦ni≦127）

値は任意の位置で省略可能、8個まで記述でき、相対指定も可能で

	@a60,,,50,127
	@a,,,,127
	@a,,120,-10,+5

といった記述が出来る。

  こちらのモードを指定した場合は後述のディレイ・コマンドで設定したディレイ値は

無視される。


(2)ディレイモード  ＡＲＣＣ

  ＡＲＣＣの設定値を１つのみ設定する。設定範囲は0≦n≦127。

（拡張ＡＲＣＣモード時には設定範囲は－127≦n≦127）

後述のディレイ・コマンドで設定したディレイの後、nの値で＠Ｃ命令で登録した

コントロール・チェンジを実行する。

  初期値はいずれのケースにおいても0。また全ての値を省略した場合は

ＡＲＣＣ解除のスイッチとなる。

例
  @a
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■アンプリチュード・モジュレーション（音量モジュレーション／ＡＭ／トレモロ）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○
＠Ｃm

  Ｘ６８ｋのＦＭ音源は４つのオペレータ（発信器）によって構成されているが

その1～4の４つのオペレータのうちどのオペレータに対してアンプリチュード・

モジュレーションの処理を施すかを設定できる。特殊な効果(例えばワウワウ効果)を

狙いたい時など以外は特に設定する必要はない。

  パラメータのmはビット構成を取っており

	  d3d2d1d0
  □□□□■■■■
	  ↑↑↑↑
	  ｜｜｜オペレータ１
	  ｜｜オペレータ２
	  ｜オペレータ３
	  オペレータ４

ビット＝1に対応するオペレータに対してモジュレーション処理を施す。

  なお、このコマンドで設定した設定値は次回の音色切り換えまで有効である。

音色切り換え時にはその音色のキャリア・オペレータに対してモジュレーション処理を

施すような設定値が自動的に設定される。

  本命令はＦＭ音源に対して多少の知識を必要とする。

例
  @c%1001  (オペレータ１と４にモジュレーション処理をする）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○
＠Ａn1,…,n8 ...(1)
または
＠Ａn ...(2)

  アンプリチュード・モジュレーション（音量を細かく震わせる）の振幅設定を行う。

(1)１／８モード  アンプリチュード・モジュレーション

  発音後音長の1/8時間単位で振幅(モジュレーション・デプス)を変化させることが

出来る。値の設定範囲は－127≦ni≦127。値は任意の位置で省略可能、8個まで

記述でき、相対指定も可能で

	@a60,,,50,127
	@a,,,,127
	@a,,120,-10,+5

といった記述が出来る。

  こちらのモードを指定した場合は後述のディレイ・コマンドで設定したディレイ値は

無視される。


(2)ディレイモード  アンプリチュード・モジュレーション

  振幅を１つのみ設定する。設定範囲は－127≦n≦127。

後述のディレイ・コマンドで設定したディレイの後、nの振幅でモジュレーションを

開始する。

  初期値はいずれのケースにおいても0。また全ての値を省略した場合は

アンプリチュード・モジュレーションの解除スイッチとなる。

例
  @a
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■モジュレーション・サブ・パラメータ
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｈn1,n2

  ＦＭ音源のピッチ・モジュレーション、アンプリチュード・モジュレーション、

またはＭＩＤＩのピッチ・モジュレーション、ＡＲＣＣ、拡張ピッチ・モジュレーション、

拡張ＡＲＣＣのディレイモード用のディレイクロックを設定する。

n1はピッチ・モジュレーション用のディレイ。設定範囲は0≦n1≦65534。

n2はアンプリチュード・モジュレーション／ＡＲＣＣ用のディレイ。設定範囲は0≦n2≦65534。

値はどちらか一方の省略は可能。初期値は共に0。

例
  @h24,10  (両方同時に設定）
  @h,10    (アンプリチュード・モジュレーション／ＡＲＣＣ／拡張ＡＲＣＣの
	    ディレイのみ設定する)
  @h24     (ピッチ・モジュレーションのディレイのみ設定する)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＠Ｓn1,n2

  ＦＭ音源のピッチ・モジュレーション、アンプリチュード・モジュレーション

(またはＭＩＤＩの拡張ピッチ・モジュレーション、拡張ＡＲＣＣモード時)の

モジュレーション・スピードを設定する。設定範囲は1≦n1,n2≦16383。

  本命令はＭＩＤＩのノーマル・モジュレーション・モードでは全く

考慮されないもので、拡張モードの時のみ有効である。

  実際の波形にどう影響するかは５．３．節で解説するが、値が小さいほど高速で、

値が大きいほど低速で音が振動する。

値はどちらか一方の省略は可能。初期値は共に6。

例
  @s24,10  (両方同時に設定）
  @s,10    (アンプリチュード・モジュレーション／拡張ＡＲＣＣのスピードのみ設定する)
  @s24     (ピッチ・モジュレーションのスピードのみ設定する)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
Ｓn1,n2

  ＦＭ音源のピッチ・モジュレーション、アンプリチュード・モジュレーション

(またはＭＩＤＩの拡張ピッチ・モジュレーション、拡張ＡＲＣＣモード時)の

モジュレーション波形をセレクトする。

  n1がピッチ・モジュレーション用の波形、n2がアンプリチュード・モジュレーション用

(または拡張ＡＲＣＣ)の波形に対応する。

  波形は波形番号0～3がプリセット波形で、8～31がユーザー定義波形となる。

スピードや振幅パラメータの波形への影響については５．３．節を参照のこと。

プリセット波形

0:鋸歯波  1:矩形波  2:三角波  3:ワンショット鋸歯波

  値はどちらか一方の省略は可能。初期値は共に2の三角波。

例
  s1,1   (両方同時に設定）
  s,2    (アンプリチュード・モジュレーション／拡張ＡＲＣＣの波形のみ設定する)
  s3     (ピッチ・モジュレーションの波形のみ設定する)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
Ｈn1,n2

  ＦＭ音源のピッチ・モジュレーション、アンプリチュード・モジュレーション

(またはＭＩＤＩの拡張ピッチ・モジュレーション、拡張ＡＲＣＣモード時)の

モジュレーション波形を、キーオンと同期して初期化させるか(同期モード)、

キーオンと同期して初期化せずに波形タイプの切り換えが起こるまで

継続させるか(非同期モード)を設定する。

  n1がピッチ・モジュレーション用、n2がアンプリチュード・モジュレーション用

(または拡張ＡＲＣＣ)の同期／非同期設定パラメータとなる。

  値はどちらか一方の省略は可能。初期値は共に0の同期モードが設定されている。

例
  h1,1   (両方同時に設定）
  h,1    (アンプリチュード・モジュレーション／拡張ＡＲＣＣの波形を非同期モードに
	  設定する)
  h1     (ピッチ・モジュレーションの波形を非同期モードに設定する)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                        特殊効果機能の併用について			      ┃
┃									      ┃
┃									      ┃
┃  ＺＭＵＳＩＣではさまざまな特殊機能を合わせて使うことが出来ますが、	      ┃
┃									      ┃
┃オートベンドとポルタメントは同時に使用出来ません。万一、オートベンド時に    ┃
┃									      ┃
┃ポルタメントを実行した場合にはポルタメントのみ機能し、オートベンドは        ┃
┃									      ┃
┃実行されません。							      ┃
┃									      ┃
┃  しかし、これ以外の組み合わせは可能です。たとえばポルタメントする音に対して┃
┃									      ┃
┃ピッチ・モジュレーション、ＡＲＣＣ／アンプリチュード・モジュレーションをかけ┃
┃									      ┃
┃てさらにアフタータッチ・シーケンスを実行する・・・といった複数の効果を１つの音┃
┃									      ┃
┃に対して同時にかけることも出来るわけです。				      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■モジュレーション・モード
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
Ｍp,a

  ＭＩＤＩにはモジュレーションのモードが２つあり、ひとつは、ある指定された

タイミングにのみＭＩＤＩ楽器へ制御メッセージを送信するモードで、これを

ノーマルモードと呼ぶ。

  もうひとつはリアルタイムに絶えずＭＩＤＩ楽器へ制御メッセージを送るモードで

こちらを拡張モードと呼ぶ。

  ノーマルモードは楽器側のハードウェア的な処理によって特殊効果を実現するので

ＺＭＵＳＩＣの負荷は少ない。一方、拡張モードは絶えず制御メッセージを送るため

多少の負荷はあるものの、ＦＭ音源部のようにＳコマンドでセレクトされる波形に

従って制御できるためノーマルモードより多彩な表現が出来る。

  本命令はピッチ・モジュレーションとＡＲＣＣをどのモードで実行するかを

決定するもの。

p:0   ノーマルモードの設定。＠Ｍで設定された値を指定のタイミングで
      コントロール・チェンジ１番のピッチ・モジュレーションに書き込む。

p:1   拡張モード１の設定。設定された振幅の効用をＦＭ音源の＠Ｍと同じにして、
      (＠Ｍで指定される振幅は半音＝64ということになる)Ｓでセレクトした波形で
      ピッチ・モジュレーションを実現する。
      ＠Ｍで指定される振幅の範囲は－768≦@M≦768。

p:2   拡張モード２の設定。設定された振幅の値はそのまま14ビットのＭＩＤＩの
      ピッチベンダー直値に該当する。この振幅で、Ｓコマンドでセレクトした波形で
      ピッチ・モジュレーションを実現する（ベンドレンジ＝12のとき、
      半音≒683）。＠Ｍで指定される振幅の範囲は－8192≦@M≦8191。


a:0   ノーマルモードの設定。＠Ａで設定した値を指定されたタイミングで書き込む。

a:1   拡張モードの設定。＠Ａで－127～127までの振幅を設定すると、
      Ｓコマンドでセレクトした波形に従って生成される値を＠Ｃで登録した
      コントロールチェンジに対して出力出来る。

  パラメータはどちらか一方の省略は可能。初期値はともに0（ノーマルモード）。

例
  m2,1   (両方同時に設定）
  m,1    (ＡＲＣＣのモードのみ設定する)
  m1     (ピッチ・モジュレーションのモードのみ設定する)

※注意
	本命例を実行するとそれまで設定されていた振幅(＠Ｍ及び＠Ａの値)は
	無効となる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■特殊機能スイッチング
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○●
＝n

  ピッチ・モジュレーション、ＡＲＣＣ、オートベンド、アフタータッチ・シーケンス、

ベロシティ・シーケンスの各機能のスイッチングを行う。

  nは各ビット毎に意味を持ち、対応は以下の通りである。

	    d7d6d5d4d3d2d1d0
	    □□□■■■■■
		  ││││└ピッチ・モジュレーション
		  │││└─ARCC
		  ││└──オート・ベンド
		  │└───アフタータッチ・シーケンス
		  └────ベロシティ・シーケンス

  各ビットを0にするとオフ、1にするとオンとなる。

  初期値は0（全機能ＯＦＦ）である。

例
  =%00011  (ピッチ・モジュレーション／ＡＲＣＣをＯＮ。それ以外をＯＦＦ)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                         スイッチング・オフについて			      ┃
┃									      ┃
┃									      ┃
┃  各特殊機能の制御ＭＭＬにパラメータなしや０を設定するとその機能は停止する  ┃
┃									      ┃
┃ことになります。例えば ＠Ｍ または ＠Ｍ0 でピッチ・モジュレーション機能を   ┃
┃									      ┃
┃解除することが出来ます。またはスイッチング・コマンド'＝'を使って制御すること┃
┃									      ┃
┃も出来ます。この２つのスイッチングには微妙な違いがあるので注意して下さい。  ┃
┃									      ┃
┃  まず、前者の場合では機能停止時になんらかの初期化措置を音源／楽器側に対して┃
┃									      ┃
┃実行します。たとえばＭＩＤＩで＠Ｍ0とした場合はモジュレーション処理を終了　 ┃
┃									      ┃
┃するともに楽器側へモジュレーションデプス０を送信しています。		      ┃
┃									      ┃
┃  一方後者の場合は純粋にＺＭＵＳＩＣがモジュレーション処理を中断するだけで  ┃
┃									      ┃
┃楽器に対しては、なんら特殊な処置をしません。ですから例えばＭＩＤＩで    　  ┃
┃									      ┃
┃ @h40 @m127 c1 @m d1							      ┃
┃ @h40 @m127 c1 =0 d1							      ┃
┃									      ┃
┃とした場合、両者ともcがディレイ40クロックの後モジュレーションを             ┃
┃									      ┃
┃開始します。そして、次のdが前者と後者では食い違いが出てきます。	      ┃
┃									      ┃
┃  前者ではdはモジュレーションしないで普通に鳴ります。しかし、後者の方は     ┃
┃									      ┃
┃ＺＭＵＳＩＣが「ディレイ40クロックのあとモジュレーションを開始」という処理を┃
┃									      ┃
┃止めただけで前の音符のcのモジュレーションがそのまま残ることになりdは        ┃
┃									      ┃
┃モジュレーションがかかったまま鳴ります。				      ┃
┃									      ┃
┃  こうしたことから'＝'によるスイッチングは前の状態を保存しつつ、特殊機能を  ┃
┃									      ┃
┃停止したいという時に用いると便利です。				      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■発音制御
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｄn

  ダンパーペダルの状態の設定を行う。設定範囲は0がダンパーペダルオフ、

1≦n≦127がダンパーペダルオンである。

  ダンパーオンの状態では発音はされるがダンパーオフになるまでキーオフされない。

各楽器の最大同時発音数を超えた時には各楽器に処理が委ねられる。通常は

一番過去に発音された音がキーオフされそのボイスを用いて新たな音がキーオン

されることになる。

  ＡＤＰＣＭでは単に次の音が鳴るまで発音し続けるという動作をするだけである。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
＠Ｒn

  そのトラックは以後ノートオフ処理をしない。リズムマシンや一部の楽器の

リズムキットは発音すればキーオフを送らずともよいものがある（そういった楽器には

「ノートオフモード」とか「ノーサスティン」といったパラメータがあるはずである)。

  こういった楽器やチャンネルに対してこのコマンドを使えばドライバの

ノートオフ処理を省略でき、割り込み演奏処理が幾分軽くなる。

  このモードにはいるとＱコマンドの影響を受けず、エンベロープを最後まで

実行するため、音を細かく区切ったりなどというニュアンスは再現不可能になる。

  n=0でノートオフ処理をする、n=1でノートオフ処理をしない。

省略時、及び初期状態は＠Ｒ0、つまり「ノートオフをする」モードに設定されている。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
 `

  強制的にキーオフを行う。そのトラック内において発音中の音を全てミュートする。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                      ＦＭ音源トラックの最大同時発声数		      ┃
┃									      ┃
┃									      ┃
┃  内蔵ＦＭ音源では和音とダンパーにおいての同時発声数は各トラックがどの      ┃
┃									      ┃
┃チャンネルにアサインされているかで異なります。例えばあるトラックが	      ┃
┃									      ┃
┃ＦＭ音源の第１チャンネルにアサインされている場合はそのトラックの同時発音数は┃
┃									      ┃
┃８だが第２チャンネルにアサインされている場合は７となります。つまり	      ┃
┃									      ┃
┃そのチャンネルから第８チャンネルまで幾つチャンネルが残っているかがＦＭ音源に┃
┃									      ┃
┃アサインされたトラックの同時発音数になるわけです。			      ┃
┃									      ┃
┃  ＭＩＤＩの場合はもちろん楽器の最大発音数を超えるまで自由に発音させる事が  ┃
┃									      ┃
┃出来ます。								      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■フェードイン／フェードアウト
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
￥n

  フェードインまたは、フェードアウトを行う。nは音量増減スピードを表し

絶対値が大きいほど増減スピードが速くなる。

－85≦n≦－1  フェードイン
      n＝0    フェードイン／フェードアウトモード解除
   1≦n≦85   フェードアウト

各トラックごとに設定可能なので、各トラック違った速度でフェードインや

フェードアウトが実行可能。フェードアウトでは出力音量が0になった時点で

そのトラックの演奏を終了する。

  各音源の特性から均等な音量バランスではフェードアウトされないケースが出てくる。

  n＝0のフェードイン／フェードアウト解除は処理そのものを中止するだけなので

元の演奏状態に戻したい場合はボリュームコマンドなどを再設定する必要がある。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■繰り返し／反復記号
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
|:n … |r1 … |r2 … :| ...(1)
または
|:n … | … :| ...(2)

(1)のケース

  |:n～:|で囲まれたＭＭＬをn回演奏する(n省略時はn＝2が自動設定される)。

  |riを|:n～:|の中に挿入すると、|riから:|までの演奏データを繰り返しri回目に

演奏させることが出来る。|:～:|は８重まで括ることが可能で複雑なシーケンスも

可能である。

  各値の設定可能範囲は1≦n, ri≦255である。

例
  |:3 a |:2 b :| c:|    (abbc abbc abbcの様に演奏される)
  |:2 a |1 b :| |2 c:|  (ab ac の様に演奏される)


(2)のケース

  |riのriを省略した|を|:n～:|の中に挿入すると|以降に書かれた演奏データは

最後の繰り返し時には演奏はしないといった特殊例になる。

例
  |:5 a | b :|  (ab ab ab ab aの様に演奏される)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                          多重ループ構造について			      ┃
┃									      ┃
┃									      ┃
┃  ＺＭＵＳＩＣでは多重の繰り返し構造が設定可能ですが、必ずネスト構造に　    ┃
┃									      ┃
┃なっていなければ希望通りの繰り返しを得ることが出来ません。		      ┃
┃									      ┃
┃例えば								      ┃
┃									      ┃
┃        |: a |: b |1 c :||2 d e :|					      ┃
┃									      ┃
┃という記述では正常に演奏することが出来ません。			      ┃
┃									      ┃
┃これは								      ┃
┃									      ┃
┃        |: a |: b |1 c :||2 d e :| :|					      ┃
┃									      ┃
┃としなくてはなりません。						      ┃
┃									      ┃
┃  多重ループを使用する際は|:に対応した:|が絶対必要ということなのです。      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
[～]コマンド

[do]  ～  [loop]      囲まれた間を半永久的にループ演奏する。
[d.c.]                始めに飛ぶ(１回のみ有効)。
[d.s.]                [segno]または[$]へ飛ぶ(１回のみ有効)。
[segno](または[$])
[tocoda](または[*])   [coda]へ飛ぶ(１回以上有効)。
[coda]
[fine](または[^])     [d.c.],[d.s.]を実行した後にここで演奏終了する。

  この他に演奏データ作成を支援するコマンドがある。

　(これらのコマンドはm_debug(1)または(D1)の時のみ有効となる。
m_debug(0)または(D0)のときは無視される。MEASURE3 m_debug()コマンド、
MEASURE4 (Ｄn)コマンド参照)

[!]		次の[!]までジャンプする。ジャンプ後の音源やＺＭＵＳＩＣの
		内部パラメータはそこまで通常に演奏を行った時と同じに
		なっている。[!]が遇数個設定されなかった場合は、正常に
		動作しない。

[@]		次の[@]までジャンプする。ジャンプ後の音源やＺＭＵＳＩＣの
		内部パラメータはそこまで通常に演奏を行った時と同じに
		なっている。ほぼ[!]と同機能だが、あるひとつのトラックで
		設定すると他のトラックも同時にジャンプを開始する点が違う。
		[@]が遇数個設定されなかった場合は、正常に動作しない。

[end]		いかなる状態の時にもこれを発見するとそのトラックは
		演奏を終える。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                              [!]/[@]の動作				      ┃
┃									      ┃
┃									      ┃
┃        [!]/[@]の動作手順を以下に示します。				      ┃
┃									      ┃
┃        1. 音階／和音／ポルタメント以外の「発音しない」コマンドを実行	      ┃
┃        2. [!]/[@]を見付けるまで1. を繰り返す				      ┃
┃        3. [!]/[@]を発見						      ┃
┃        4. 通常演奏へ							      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ＭＩＤＩ楽器制御命令
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｉn1,n2,n3

  ＺＭＵＳＩＣにそのトラックの楽器のメーカーＩＤ、デバイスＩＤ、モデルＩＤを

設定する。各値はＭＩＤＩ楽器のマニュアルを参照のこと。これは特に設定しなくても

通常のコマンドの動作には全く影響しない。ただし、

	Ｘ命令

に関しては楽器個別の動作をするため、これらのコマンドを使用する前には必ず

設定しなければならない。

	n1＝メーカーＩＤ(例:ROLAND＝$41, KORG＝$42, YAMAHA＝$43)
	n2＝デバイスＩＤ(各ユーザーが楽器に設定した値。特に設定した覚えのない
		      場合はその楽器のデフォルトのデバイスＩＤを設定する)
	n3＝モデルＩＤ(例:ＭＴ３２＝$16, ＳＣ５５＝$42 or $45)

  初期値は不定。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
Ｘn1…,ni

  ローランド系の楽器にエクスクルーシブメッセージ送信を行う。

＠ＩコマンドでメーカーＩＤにローランドを設定しておくことが前提。

  現在ワン・ウェイ・コミュニケーションのデータセット(コマンドＩＤ＝＄12)のみ

対応。

  データはいくつでも記述可能。各値の設定範囲は0≦ni≦127であるが、これ以上の値を

設定した場合は7ビットずつに分割されて送信される。

  (例:8192→$00,40の様に下位、上位の順に送信される)

  もちろんチェックサムは自動的に送信してくれる。

  具体的な用途としてはリバーブパラメータの書き換えや音色のパラメータ単位の

書き換えを行うのに便利であるが、楽器のメモリーを直接操作するものなので、

各自の責任のもとで使用すること。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｘn1,…,xi

  ＭＩＤＩの生データの送信を行う。もちろんメーカーや楽器の種類には無関係で

チェックサム等も発信しない。

  楽器のメモリーを書き換える場合もあるので各自の責任のもとで使用すること。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｅr,c

  ＭＩＤＩ楽器のエフェクトをコントロールする。コントロールチェンジの

エフェクト１へrを、エフェクト３へcを出力する。ただし、楽器側が

対応していない場合は、コントロールできない。

  パラメータは片方のみ省略できる。パラメータの有効範囲は0≦r,c≦127。

初期値は不定。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●(ＭＴ３２系専用命令)
＠Ｅn1,n2

　＠ＩコマンドにてＩＤをローランドＭＴ３２に設定してある事が前提。

パートn1のエフェクトのスイッチを設定する。n1はパートナンバーを表し

設定範囲は1≦n1≦8。n2はスイッチを表しn2＝0がオフ、1がオンである。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
＠Ｙa1,a2,d1,d2

  ＭＩＤＩ楽器のＮＲＰＮを設定する。

  ＭＩＤＩ楽器には、ＭＩＤＩ規格には定められていないレジスタを持つことが

許されており、このコマンドはそのレジスタへの書き込みを行う。

  a1,a2はそれぞれアドレス上位下位を表し、d1,d2はそれぞれデータの上位下位を表す。

設定範囲は全て0～127でd2のみ省略可能。

  ＳＣ５５では音色のコントロールをここで行うことが出来る(SC55マニュアルp75参照)。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ＡＤＰＣＭ制御命令
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
◎
＠Ｆn

  内蔵ＡＤＰＣＭ音源の再生周波数を変更する。設定範囲は0≦n≦4で各値は

	n＝     0: 3.9kHz
		1: 5.2kHz
		2: 7.8kHz
		3:10.4kHz
		4:15.6kHz

  に対応する。初期値は4で値省略時は4に自動設定される。
ＰＣＭ８独立チャンネルモード時には
	n＝     5:16ビットＰＣＭデータ方式
		6: 8ビットＰＣＭデータ方式
の設定が可能となる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃　　　　　　　　　 　８，１６ビットＰＣＭデータ方式とは？		      ┃
┃									      ┃
┃									      ┃
┃　Ｘ６８ｋの扱うＡＤＰＣＭデータとはいわばサンプリングしてできた	      ┃
┃									      ┃
┃ＰＣＭデータが一種のアルゴリズムで圧縮されていると考えられます。	      ┃
┃									      ┃
┃音量の変更や周波数変換、合成処理を行うにはこのＡＤＰＣＭデータ方式から      ┃
┃									      ┃
┃ＰＣＭデータ方式へ変換しなければなりません。ＰＣＭ８ではこの変換処理を      ┃
┃									      ┃
┃割り込みでリアルタイムで行っていますが、もしこの処理を省けるならば          ┃
┃									      ┃
┃かなり割り込み処理を軽くすることが出来るはずです。そこでＰＣＭ８では	      ┃
┃									      ┃
┃無圧縮のＰＣＭデータを演奏出来るようになっています。			      ┃
┃									      ┃
┃　１６ビットＰＣＭデータ方式は符号付き１６ビット整数により表現された	      ┃
┃									      ┃
┃データです(－32768～32767)。同一音長のＡＤＰＣＭデータの４倍のデータ長に    ┃
┃									      ┃
┃なります。ちょうどＺＶＴ．Ｘで'－Ｃ'スイッチにより生成されるＰＣＭデータと  ┃
┃									      ┃
┃同じものです。１つのデータが２バイト構成であることから必ずデータ長は偶数で  ┃
┃									      ┃
┃なければ正常に鳴りません。						      ┃
┃									      ┃
┃　８ビットＰＣＭデータは方式は同様に符号付き８ビット整数により表現された    ┃
┃									      ┃
┃データです(－128～127)。同一音長のＡＤＰＣＭデータの２倍のデータ長に        ┃
┃									      ┃
┃なります。								      ┃
┃									      ┃
┃　８ビットＰＣＭデータ／１６ビットＰＣＭデータともに特別な設定もなしに      ┃
┃									      ┃
┃ＺＰＣＮＶでＺＰＤを作成出来ます(ただし、音量音程変更などの加工処理は実行で ┃
┃									      ┃
┃きません)。もちろんＡＤＰＣＭデータと混在させてＺＰＤにすることも出来ます。 ┃					      ┃
┃									      ┃
┃　再生周波数はどちらとも１５．６ｋＨｚ固定ですがＡＤＰＣＭ方式との混在が    ┃
┃									      ┃
┃可能でＡＤＰＣＭデータ側はこの時も５段階の周波数が使用可能です。	      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ＦＭ音源レジスタへの書き込み命令
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎
Ｙa,d

  ＦＭ音源のレジスタaへ値dの書き込みを行う。ＡＤＰＣＭ音源部で使用した場合も

ＦＭ音源のレジスタへの書き込みが行なわれる。使用にはＦＭ音源に関しての

知識と十分な理解が必要。

  またＯＰＭＤ．Ｘで有効だった特殊Ｙコマンドが使用可能となっている。

  y2,n    ノート番号n番のＡＤＰＣＭ音を鳴らす。0≦n≦511
  y3,n    ＡＤＰＣＭのパンを設定する。n＝0:OFF, 1:LEFT, 2:RIGHT, 3:MIDDLE
  y13,n   ＡＤＰＣＭの再生周波数を変更する(n:＠Ｆコマンドのパラメータと同じ)。
  y14,n   ＡＤＰＣＭ発音モードの設定。n＝0の時、後から発音要求があったものを
	  優先して発音していく。n＝1のとき、現在発音中のＡＤＰＣＭ音が
	  鳴り終えるまで後からくるＡＤＰＣＭの発音要求を無視する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■ノイズ発生
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○
＠Ｏn

  ＦＭ音源のチャンネル８のオペレータ４(スロット32)からノイズを発生する。

nとノイズの周波数とは

	n=4000/(32×ノイズ周波数[kHz])

の関係があり、設定範囲は0≦n≦31。値を省略した場合はノイズモード解除とみなす。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■コントロール・チェンジ
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●
Ｙa,d

  コントロールチェンジa番に値dを書き込む。パラメータa,dの設定範囲は

共に0≦a,d≦127。コントロールチェンジについての詳細はＭＩＤＩ楽器の

マニュアルのインプリメンテーション・チャートを参照。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■演奏制御
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｗ

  他のトラックから同期信号が来るまで演奏処理を中断する。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｗn

  同期待ちしているトラックに対して同期信号を送る。設定範囲は1≦n≦80。

例
  (t1)   @1 v15 o4 q8 cdef w2  ←トラック２へ同期送信
  (t2) w @1 v15 o4 q8 gab<c
    ↑どこからか同期信号が来るまで演奏を中断。
  この例では結果的にはcdefgab<cが演奏される。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
Ｊn

  トラックnを強制的に初めから演奏開始にする。演奏が終了していても、演奏中で

あっても演奏開始を命じられたトラックは最初から演奏を始める。設定範囲は

1≦n≦80。

例
  (t1)   @1 v15 o4 q8 j2r2j2
  (t2)   @1 v15 o4 q8 l8cdef
  この例では結果的にはcdef cdefが演奏される。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃              同期コマンドと強制演奏コマンド使用における注意		      ┃
┃									      ┃
┃									      ┃
┃  コンパイルによってＺＭＤを得た時、トラック番号が最適化されるため、        ┃
┃									      ┃
┃ＺＭＳ時で同期が取れていたものがＺＭＤだと希望通りに鳴らないことがあります。┃
┃									      ┃
┃例えば								      ┃
┃									      ┃
┃	(m1,1000)(a1,1)							      ┃
┃	(m2,1000)(a2,2)							      ┃
┃	(m3,1000)(a3,3)							      ┃
┃	(t1)   @1 v15 o4 q8 cdef w3					      ┃
┃	(t2)								      ┃
┃	(t3) w @1 v15 o4 q8 gab<c					      ┃
┃									      ┃
┃の場合、コンパイル時の最適化によってトラック２は消去されトラック３が	      ┃
┃									      ┃
┃トラック２になってしまうためトラック１の同期信号は意味をなさなくなります。  ┃
┃									      ┃
┃また、								      ┃
┃									      ┃
┃	(m1,1000)(a1,1)							      ┃
┃	(m2,1000)(a2,2)							      ┃
┃	(m3,1000)(a3,3)							      ┃
┃	(t1)								      ┃
┃	(t2)   @1 v15 o4 q8 cdef w3					      ┃
┃	(t3) w @1 v15 o4 q8 gab<c					      ┃
┃									      ┃
┃の場合も同様にトラック１が消去されトラック２が１、トラック３が２へと	      ┃
┃									      ┃
┃詰められるので同期コマンドは意味を持たなくなります。ですから、同期コマンドを┃
┃									      ┃
┃使用した曲をコンパイルしてＺＭＤを得る場合は無意味なトラックを確保しては    ┃
┃									      ┃
┃いけません。								      ┃
┃									      ┃
┃  同様に強制演奏コマンドの場合も、参照したトラックとの間にダミーのトラックが┃
┃									      ┃
┃存在すると、同様の症状が起きます。					      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
■特権命令
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
；n

  直接ＺＭＤコードnを埋め込む。使用にはＺＭＤの十分な理解を必要とする。

不当な与え方をした場合は最悪、暴走する。設定範囲は0≦n≦255。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
○◎●
？a,d

  そのトラックの演奏ワークのa番に値dを書き込む。使用にはＺＭＵＳＩＣの

ワークエリアについての十分な理解を必要とする。不当な与え方をした場合は最悪、

暴走する。値dは相対値の設定も可能。設定範囲は0≦a,d≦255。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                     ＯＰＭＤＲＶ．Ｘとの互換性について		      ┃
┃									      ┃
┃									      ┃
┃  ＺＭＵＳＩＣ．Ｘでは初代のＯＰＭＤＲＶ．Ｘと互換性がありますが以下の点に  ┃
┃									      ┃
┃注意して下さい（ＯＰＭＤＲＶ３．Ｘとは互換性はありません）。		      ┃
┃									      ┃
┃  レジスタ番号４８～５５を操作するＹコマンドは処理の都合上＠Ｋコマンドに    ┃
┃									      ┃
┃変換してしまうため、アサインされたチャンネル以外のチャンネルの	      ┃
┃									      ┃
┃キーフラクションを操作した場合は無効となります。			      ┃
┃									      ┃
┃  また、１つの命令における中間言語やそのサイズが（当然ながら）	      ┃
┃									      ┃
┃ＯＰＭＤＲＶ．Ｘとは違うのでｍ＿ａｌｌｏｃ命令や(Ｍtr,sz)コマンドで         ┃
┃									      ┃
┃トラックバッファをギリギリに確保してあるような曲は、場合によっては	      ┃
┃									      ┃
┃トラックバッファが不足してしまうことがあります。そういう場合は	      ┃
┃									      ┃
┃トラックバッファを大き目にとり直してください。			      ┃
┃									      ┃
┃例									      ┃
┃	M_ALLOC(1,1000)  →  M_ALLOC(1,5000)				      ┃
┃	(m1,1000)        →  (m1,5000)					      ┃
┃									      ┃
┃  ＯＰＭＤＲＶ．Ｘでは一度トラックヘッダを書けば以降同じトラックへＭＭＬを  ┃
┃									      ┃
┃セットする場合はトラックヘッダの省略が出来ました。もちろんＺＭＵＳＩＣでも  ┃
┃									      ┃
┃可能は可能なのですが一部制約があります。それはポルタメント命令です。	      ┃
┃									      ┃
┃ポルタメントは"（）"という記号を使うためトラックヘッダを省略してこの命令を  ┃
┃									      ┃
┃書いた場合、ＺＭＵＳＩＣのインタプリタはＭＭＬとは認識できずＺＭＳコマンドと┃
┃									      ┃
┃勘違いしてしまうのです。それ以外の命令ならばトラックヘッダを省略しても      ┃
┃									      ┃
┃大丈夫です。								      ┃
┃									      ┃
┃  さらにＯＰＭＤＲＶ．Ｘでは'm_play()'や'm_cont()'，'m_stop()'などのパラメー┃
┃									      ┃
┃タにチャンネル番号を指定するような仕様でしたがＺＭＵＳＩＣではトラック番号で┃
┃									      ┃
┃指定します。こちらの方が汎用性が高いと判断して採用しました。		      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛


５．３．　　モジュレーション波形について


●プリセット波形

  ＺＭＵＳＩＣにはピッチ・モジュレーション用(以下ＰＭ)、

アンプリチュード・モジュレーション用(以下ＡＭ)両方に４つのプリセット波形が

登録されている。この波形が振幅(＠Ｍ／＠Ａコマンド)、波長(＠Ｓコマンド)、

ディレイ(＠Ｈコマンド)などの各パラメータによってどう変化するかを図に示す。


●波形メモリについて

  ＺＭＵＳＩＣでは

ＺＭＳコマンド
.wave_form <wave number>,<loop type>[,loop point]＝{data.......}
ＭＵＳＩＣＺ．ＦＮＣ関数
m_wave_form(<wave number>,<loop type>[,loop point],<ary1:data>)

を用いて作成したユーザー波形を波形番号8～31に登録し使用することが出来る。

  この波形が振幅(＠Ｍ／＠Ａコマンド)、波長(＠Ｓコマンド)、

ディレイ(＠Ｈコマンド)などの各パラメータによってどう影響するかを図に示す。

  また以下にユーザー波形使用時の留意点を示す。

・波形データはピッチ・モジュレーション／音量モジュレーション／ＡＲＣＣ共用と

なる。登録した波形データはＭＭＬの'Ｓ'コマンドでプリセットの

ノコギリ波／矩形波／三角波同様に呼び出して使用する。

・MML'＠Ｓ'で指定されたクロックの間、１つの波形データを使用する。(下図)
・実際の波形実行のオン／オフは通常の特殊機能と同様。
・振幅は各ポイントにおける波形データが直値で使用されるが、各特殊機能コマンドの
振幅設定コマンドの正負に応じて各値の正負を逆転して使用させることも可能。(下図)
ただし振幅の絶対値は無関係。
・1/8モードは波形メモリに振幅という観念がないため無効。

------------------------------------------------------------------------------------
ピッチ・モジュレーション(ＦＭ音源部／ＭＩＤＩ音源部拡張ピッチ・モジュレーションモード時)
------------------------------------------------------------------------------------

波形番号0:鋸歯波  振幅パラメータ:＋
						   ＿
		 ／      ／      ／      ／      ／↑@M
   @K→＿＿＿＿／      ／      ／      ／      ／  ↓
       ←──→      ／      ／      ／      ／    ￣
	@Hの       ／      ／      ／      ／|
	第1ﾊﾟﾗﾒｰﾀ                          | |
					    @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号0:鋸歯波  振幅パラメータ:－

		   ＼      ＼      ＼      ＼
   @K→＿＿＿＿      ＼      ＼      ＼      ＼    ＿
       ←──→＼      ＼      ＼      ＼      ＼  ↑
	@Hの     ＼      ＼      ＼      ＼     |＼↓@M
	第1ﾊﾟﾗﾒｰﾀ                               | |￣
						 @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号1:矩形波  振幅バラメータ：＋

	      ￣￣    ￣￣    ￣￣    ￣￣
  @K→＿＿＿＿                                ＿
      ←──→                                ↑@M
	@Hの      ＿＿    ＿＿    ＿＿    ＿＿↓
	第1ﾊﾟﾗﾒｰﾀ                | |          ￣
				  @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号1:矩形波  振幅バラメータ：－
				      ＿
		  ￣￣    ￣￣    ￣￣↑@M
  @K→＿＿＿＿                        ↓
      ←──→                        ￣
	@Hの  ＿＿    ＿＿    ＿＿
	第1ﾊﾟﾗﾒｰﾀ            | |
			      @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号2:三角波  振幅パラメータ：＋
						   ＿
		 ／＼            ／＼            ／↑@M
   @K→＿＿＿＿／    ＼        ／    ＼        ／  ↓
       ←──→        ＼    ／        ＼    ／|   ￣
	@Hの             ＼／            ＼／  |
	第1ﾊﾟﾗﾒｰﾀ                          |   |
					    @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号2:三角波  振幅パラメータ：－

			 ／＼            ／＼
   @K→＿＿＿＿        ／    ＼        ／    ＼    ＿
       ←──→＼    ／        ＼    ／       |＼  ↑@M
	@Hの     ＼／            ＼／         |  ＼↓
	第1ﾊﾟﾗﾒｰﾀ                             |   |￣
					       @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号3:鋸歯波シングル  振幅パラメータ:＋
		   ＿＿＿＿＿＿＿＿＿＿＿＿＿
		 ／↑@M
   @K→＿＿＿＿／| ↓
       ←──→| | ￣
	 @Hの   @Sの第1ﾊﾟﾗﾒｰﾀ
	第1ﾊﾟﾗﾒｰﾀ


波形番号3:鋸歯波シングル  振幅パラメータ:－

   @K→＿＿＿＿    ＿
       ←──→＼  ↑
	 @Hの   |＼↓@M
       第1ﾊﾟﾗﾒｰﾀ| |￣￣￣￣￣￣￣￣￣￣￣￣￣
		 @Sの第1ﾊﾟﾗﾒｰﾀ

波形番号8～31:ユーザー波形  振幅パラメータ：＋

波形データ列が＋5,－5,＋10,＋3,0の場合・・・

		     +10
	     +5      ￣￣
	    ￣￣         ＿＿  0
@K→────              +3 ──
    ←──→     ＿＿
      @Hの        -5
    第1ﾊﾟﾗﾒｰﾀ    ←→
		  @S第1ﾊﾟﾗﾒｰﾀ

波形番号8～31:ユーザー波形  振幅パラメータ：－

波形データ列が＋5,－5,＋10,＋3,0の場合・・・

		 +5 
		￣￣          0
@K→────             -3 ──
    ←──→＿＿        ￣￣
      @Hの   -5     ＿＿
    第1ﾊﾟﾗﾒｰﾀ       -10
		    ←→
		     @S第1ﾊﾟﾗﾒｰﾀ


------------------------------------------------------------------------------
音量モジュレーション(ＦＭ音源部)
------------------------------------------------------------------------------

波形番号0:鋸歯波  振幅パラメータ:＋

   @V→＿＿＿＿                                ＿
       ←──→＼      ＼      ＼      ＼      ↑
	 @Hの    ＼      ＼      ＼      ＼    ｜
       第2ﾊﾟﾗﾒｰﾀ   ＼      ＼      ＼      ＼  ｜@A
		     ＼      ＼      ＼     |＼↓
					    | |￣
					     @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号0:鋸歯波  振幅パラメータ:－

   @V→＿＿＿＿                                 ＿
       ←──→       ／      ／      ／      ／↑
	 @Hの       ／      ／      ／      ／  ｜@A
       第2ﾊﾟﾗﾒｰﾀ  ／      ／      ／      ／    ｜
		／      ／      ／      ／|     ↓
					| |     ￣
					 @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号1:矩形波  振幅バラメータ：＋

   @V→＿＿＿＿                                ＿
       ←──→￣￣    ￣￣    ￣￣    ￣￣    ↑
	 @Hの                                  ｜
       第2ﾊﾟﾗﾒｰﾀ                               ｜@A
		   ＿＿    ＿＿    ＿＿    ＿＿↓
				  | |          ￣
				   @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号1:矩形波  振幅バラメータ：－

   @V→＿＿＿＿                                 ＿
       ←──→    ￣￣    ￣￣    ￣￣    ￣￣ ↑
	 @Hの                                   ｜@A
       第2ﾊﾟﾗﾒｰﾀ                                ｜
	       ＿＿    ＿＿    ＿＿    ＿＿     ↓
			      | |               ￣
			       @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号2:三角波  振幅バラメータ：＋

   @V→＿＿＿＿                                 ＿
       ←──→＼            ／＼            ／ ↑
	 @Hの    ＼        ／    ＼        ／   ｜
       第2ﾊﾟﾗﾒｰﾀ  |＼    ／        ＼    ／     ｜@Aのパラメータ
		  |  ＼／            ＼／       ↓
		   ←→                         ￣
		    @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号2:三角波  振幅バラメータ：－

   @V→＿＿＿＿                                 ＿
       ←──→      ／＼            ／＼       ↑
	 @Hの      ／    ＼        ／    ＼     ｜
       第2ﾊﾟﾗﾒｰﾀ ／|       ＼    ／        ＼   ｜@Aのパラメータ
	       ／  |         ＼／            ＼ ↓
	       ←→                             ￣
		@Sの第2ﾊﾟﾗﾒｰﾀ

波形番号3:鋸歯波シングル  振幅パラメータ:＋

   @V→＿＿＿＿        ＿
       ←──→＼      ↑
	 @Hの    ＼    ｜
       第2ﾊﾟﾗﾒｰﾀ   ＼  ｜@A
		    |＼↓
		    | |￣￣￣￣￣￣￣￣￣￣￣￣￣
		     @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号3:鋸歯波シングル  振幅パラメータ:－

   @V→＿＿＿＿        ＿＿＿＿＿＿＿＿＿＿＿＿＿
       ←──→      ／↑
	 @Hの      ／  ｜@A
       第2ﾊﾟﾗﾒｰﾀ ／    ｜
	       ／|     ↓
	       | |     ￣
		@Sの第2ﾊﾟﾗﾒｰﾀ

波形番号8～31:ユーザー波形  振幅パラメータ：＋

波形データ列が＋5,－5,＋10,＋3,0の場合・・・


		     +10
	     +5      ￣￣
	    ￣￣         ＿＿  0
@V→────              +3 ──
    ←──→     ＿＿
      @Hの        -5
    第2ﾊﾟﾗﾒｰﾀ    ←→
		  @S第2ﾊﾟﾗﾒｰﾀ

波形番号8～31:ユーザー波形  振幅パラメータ：－

波形データ列が＋5,－5,＋10,＋3,0の場合・・・

		 +5 
		￣￣          0
@V→────             -3 ──
    ←──→＿＿        ￣￣
      @Hの   -5     ＿＿
    第2ﾊﾟﾗﾒｰﾀ       -10
		    ←→
		     @S第2ﾊﾟﾗﾒｰﾀ

------------------------------------------------------------------------------
拡張ＡＲＣＣ
------------------------------------------------------------------------------
波形番号0:鋸歯波  振幅パラメータ:＋

  @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿                                ＿
	   ←──→＼      ＼      ＼      ＼      ↑
	     @Hの    ＼      ＼      ＼      ＼    ｜
	   第2ﾊﾟﾗﾒｰﾀ   ＼      ＼      ＼      ＼  ｜@A
			 ＼      ＼      ＼     |＼↓
						| |￣
						 @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号0:鋸歯波  振幅パラメータ:－

  @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿                                 ＿
	   ←──→       ／      ／      ／      ／↑
	     @Hの       ／      ／      ／      ／  ｜@A
	   第2ﾊﾟﾗﾒｰﾀ  ／      ／      ／      ／    ｜
		    ／      ／      ／      ／|     ↓
					    | |     ￣
					     @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号1:矩形波  振幅バラメータ：＋

   @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿                                ＿
	   ←──→￣￣    ￣￣    ￣￣    ￣￣    ↑
	     @Hの                                  ｜
	   第2ﾊﾟﾗﾒｰﾀ                               ｜@A
		       ＿＿    ＿＿    ＿＿    ＿＿↓
				      | |          ￣
				       @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号1:矩形波  振幅バラメータ：－

   @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿                                 ＿
	   ←──→    ￣￣    ￣￣    ￣￣    ￣￣ ↑
	     @Hの                                   ｜@A
	   第2ﾊﾟﾗﾒｰﾀ                                ｜
		   ＿＿    ＿＿    ＿＿    ＿＿     ↓
				  | |               ￣
				   @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号2:三角波  振幅バラメータ：＋

   @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿                                 ＿
	   ←──→＼            ／＼            ／ ↑
	     @Hの    ＼        ／    ＼        ／   ｜
	   第2ﾊﾟﾗﾒｰﾀ  |＼    ／        ＼    ／     ｜@Aのパラメータ
		      |  ＼／            ＼／       ↓
		       ←→                         ￣
			@Sの第2ﾊﾟﾗﾒｰﾀ

波形番号2:三角波  振幅バラメータ：－

   @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿                                 ＿
	   ←──→      ／＼            ／＼       ↑
	     @Hの      ／    ＼        ／    ＼     ｜
	   第2ﾊﾟﾗﾒｰﾀ ／|       ＼    ／        ＼   ｜@Aのパラメータ
		   ／  |         ＼／            ＼ ↓
		   ←→                             ￣
		    @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号3:鋸歯波シングル  振幅パラメータ:＋

   @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿        ＿
	   ←──→＼      ↑
	     @Hの    ＼    ｜
	   第2ﾊﾟﾗﾒｰﾀ   ＼  ｜@A
			|＼↓
			| |￣￣￣￣￣￣￣￣￣￣￣￣￣
			 @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号3:鋸歯波シングル  振幅パラメータ:－

   @Cの
第3ﾊﾟﾗﾒｰﾀ→＿＿＿＿        ＿＿＿＿＿＿＿＿＿＿＿＿＿
	   ←──→      ／↑
	     @Hの      ／  ｜@A
	   第2ﾊﾟﾗﾒｰﾀ ／    ｜
		   ／|     ↓
		   | |     ￣
		    @Sの第2ﾊﾟﾗﾒｰﾀ

波形番号8～31:ユーザー波形  振幅パラメータ：＋

波形データ列が＋5,－5,＋10,＋3,0の場合・・・

			    +10
		    +5      ￣￣
@Cの               ￣￣         ＿＿  0
第3ﾊﾟﾗﾒｰﾀ→────              +3 ──
	   ←──→     ＿＿
	     @Hの        -5
	   第2ﾊﾟﾗﾒｰﾀ    ←→
			 @S第2ﾊﾟﾗﾒｰﾀ

波形番号8～31:ユーザー波形  振幅パラメータ：－

波形データ列が＋5,－5,＋10,＋3,0の場合・・・

			+5 
@Cの                   ￣￣          0
第3ﾊﾟﾗﾒｰﾀ→────             -3 ──
	   ←──→＿＿        ￣￣
	     @Hの   -5     ＿＿
	   第2ﾊﾟﾗﾒｰﾀ       -10
			   ←→
			    @S第2ﾊﾟﾗﾒｰﾀ

┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                             波形メモリの応用例			      ┃
┃									      ┃
┃									      ┃
┃・ＦＭ音源のピッチ・モジュレーションで使う場合		　　　　　　  ┃
┃									      ┃
┃  波形データは半音を64とした値で処理されます。各値がそのチャンネルの        ┃
┃									      ┃
┃ディチューンと加算されて、それがその瞬間のピッチとして決定されます。        ┃
┃									      ┃
┃例えばディチューンが10の時に波形メモリのデータが0,5,－5の時は	              ┃
┃									      ┃
┃10＋0＝10, 10＋5＝15, 10－5＝5がそれぞれその瞬間のピッチになります。	      ┃
┃									      ┃
┃例									      ┃
┃  (t1) @m1 @s6 s8 @h40            順位相で波形メモリ８番をFM･PMで実行　     ┃
┃  (t1) @m-1 @s6 s8 @h40           逆位相で波形メモリ８番をFM･PMで実行       ┃
┃									      ┃
┃									      ┃
┃・ＦＭ音源のアンプリチュード・モジュレーションで使う場合		      ┃
┃									      ┃
┃  波形データはそのチャンネルのボリューム値に加算され、その和がその瞬間の    ┃
┃									      ┃
┃音量として決定されます。音量の範囲は0～127ですがこの範囲を越えた場合は      ┃
┃									      ┃
┃この範囲内に修正されます。例えば音量が＠Ｖ125のとき波形メモリのデータが     ┃
┃									      ┃
┃0,5,－5の時は125＋0＝125, 125＋5＝127(130), 125－5＝120がそれぞれその瞬間の ┃
┃									      ┃
┃音量になります。							      ┃
┃									      ┃
┃例									      ┃
┃									      ┃
┃  (t1) @a1 @s,6 s,8 @h,40         順位相で波形メモリ８番をFM･PMで実行       ┃
┃  (t1) @a-1 @s,6 s,8 @h,40        逆位相で波形メモリ８番をFM･PMで実行       ┃
┃									      ┃
┃									      ┃
┃・ＭＩＤＩ音源のピッチ・モジュレーションで使う場合			      ┃
┃									      ┃
┃  拡張モジュレーション・モード時のみ有効です。効果はＦＭ音源と同じです。    ┃
┃									      ┃
┃拡張モジュレーション・モードには振幅を半音＝64にするか半音≒683(ベンドレンジ┃
┃									      ┃
┃＝12の時)にするかの２つのモードがありますが波形データはこの影響を受けます。 ┃
┃									      ┃
┃たとえば波形データが683であったとすると半音＝64モード時には683/64≒10半音分 ┃
┃									      ┃
┃の変化量になりますが半音≒683モード時には1半音分の変化量となります。	      ┃
┃									      ┃
┃用途や趣味に合わせて使い分けて下さい。				      ┃
┃									      ┃
┃例									      ┃
┃  (t1) m1 @m1 @s6 s8 @h40         順位相で波形メモリ８番をMIDI･拡張PMで実行 ┃
┃  (t1) m1 @m-1 @s6 s8 @h40        逆位相で波形メモリ８番をMIDI･拡張PMで実行 ┃
┃									      ┃
┃									      ┃
┃・ＭＩＤＩ音源の拡張ＡＲＣＣで使う場合				      ┃
┃									      ┃
┃  波形メモリは拡張ＡＲＣＣモード時にのみ有効です。各波形データは	      ┃
┃									      ┃
┃ＡＲＣＣニュートラル値(＠Ｃの第3パラメータ)と加算して、その和が	      ┃
┃									      ┃
┃コントロールチェンジへ出力されます。応用次第で			      ┃
┃									      ┃
┃疑似ランダム・オート・パンポットやＦＭ音源の様な自由波形による	      ┃
┃									      ┃
┃音量モジュレーションなども実現できます。				      ┃
┃									      ┃
┃例									      ┃
┃ (t1) m,1 @a1 @s,6 s,8 @h,40     順位相で波形メモリ８番をMIDI･拡張ARCCで実行┃
┃ (t1) m,1 @a-1 @s,6 s,8 @h,40    逆位相で波形メモリ８番をMIDI･拡張ARCCで実行┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
