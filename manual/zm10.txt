
	    ＭＥＡＳＵＲＥ１０
  	ＺＭＵＳＩＣのファンクションコール


  ここではＺＭＵＳＩＣ．Ｘが常駐した後に

使用出来るファンクションコールについて

説明します。使用にはＭＰＵ６８０００の

機械語の知識が必要です。

  一般的な使用をする限り読み飛ばして

構いません。








１０．１．  ファンクションコールのコール法


コール方法その１(ＯＰＭＤＲＶ．Ｘコンパチモード)

	moveq.l #n,d1           *n＝ファンクションナンバー
	lea     ～,a1           *パラメータが必要であれば設定
	moveq.l #m,d2           *パラメータが必要であれば設定
	IOCS    _OPMDRV

コール方法その２(高速応答モード)

	moveq.l #n,d1           *n＝ファンクションナンバー
	lea     ～,a1           *パラメータが必要であれば設定
	moveq.l #m,d2           *パラメータが必要であれば設定
	trap    #3

  戻り値はd0.lとa0.lのみで、その他のレジスタは全部保存されます。

  ファンクション内でエラーが発生すればd0にそのエラーコード(MEASURE12参照)が

代入されています。

  d0.l＝0は正常終了を表します。戻り値にd0を使用している場合は別です。

  ファンクション$00～$0FまではＯＰＭＤＲＶ．Ｘとコンパチでほぼ同等の機能を

果たします。「その１」はあくまで「ＯＰＭＤＲＶ．Ｘ」との互換性を

保つために設けたコール方法で「その２」の方法の方が応答が高速です。

  ドライバの常駐チェックは具体的にはリスト１の様にします。原理はTRAP #3

のベクタが指し示すアドレス－8から"ZmuSiC"があるかどうかを調べているだけです。

　さらに"ZmuSiC"の後ろにはバージョンコード２バイトが格納されています。

上位バイト	バージョン整数部, バージョン少数第１桁
下位バイト	対応バージョンコード, バージョン少数第２桁

対応バージョンコード
		UNIVERSAL VERSION	0
		16bit VERSION		1
		RS-MIDI VERSION		2
		POLYPHON VERSION	3

例
	POLYPHON VERSION 1.52 → "ZmuSiC",$15(.b),$32(.b)


	      リスト１

chk_drv:
	* > eq＝常駐確認
	* > mi＝常駐していない
	move.l  $8c.w,a0
	subq.w  #8,a0
	cmpi.l  #'ZmuS',(a0)+
	bne     chk_drv_err
	cmpi.w  #'iC',(a0)+
	bne     chk_drv_err
	rts
chk_drv_err:
	moveq.l #-1,d0
	rts

--------------------------------------------------------------------------------
ファンクション$00       m_init

機能:   音源、ドライバの初期化

引数:   なし

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$01       m_alloc

機能:   トラックバッファの確保

引数:   d2の上位16ビット＝トラックナンバー(1～80)
	d2の下位16ビット＝バッファサイズ($00A0～$ffff)

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$02       m_assign

機能:   確保したトラックバッファをどの音源に割り当てるかを設定する

引数:   d2の上位16ビット＝チャンネル番号（1～25，ただし
	        	  ＰＣＭ８独立チャンネルモード時は1～32となる）
	d2の下位16ビット＝トラック番号（1～80）

戻り値: なし
	d0.l＝エラーコード

備考:   チャンネル番号とその対応デバイスはベースチャンネルモードによって
	変動する。
m_ch("FM")、(B0)の時
チャンネル番号  1～8    内蔵ＦＭ音源チャンネル1～8
		9       内蔵ＡＤＰＣＭ音源
		10～25  ＭＩＤＩチャンネル1～16
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)

m_ch("MIDI")、(B1)の時
チャンネル番号  1～16   ＭＩＤＩチャンネル1～16
		17～24  内蔵ＦＭ音源チャンネル1～8
		25      内蔵ＡＤＰＣＭ音源
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)
--------------------------------------------------------------------------------
ファンクション$03       m_vget

機能:   ＦＭ音源音色データの取り出し

引数:   d2.l＝音色番号(1～200)
	a1.l＝データ格納領域のアドレス(55バイト分)

戻り値: 0(a1)～54(a1):音色データ
	d0.l＝エラーコード

備考    0(a1)～54(a1)とパラメータの対応
０:AF(ﾌｨｰﾄﾞﾊﾞｯｸ/ｱﾙｺﾞﾘｽﾞﾑ) (0～63)  
１:OM(ｽﾛｯﾄﾏｽｸ)            (0～15)  
２:WF(ｳｪｰｳﾞﾌｫｰﾑ)          (0～3)   
３:SYC(ｼﾝｸﾛ)              (0,1)    
４:SPD(ｽﾋﾟｰﾄﾞ)            (0～255) 
５:PMD                    (0～127) 
６:AMD                    (0～127) 
７:PMS                    (0～7)   
８:AMS                    (0～3)   
９:PAN                    (0～3)   
10:DUMMY
11(OP1),22(OP2),33(OP3),44(OP4):AR(ｱﾀｯｸﾚｰﾄ)        (0～31)
12(OP1),23(OP2),34(OP3),45(OP4):1DR(1stﾃﾞｨｹｲﾚｰﾄ)   (0～31)
13(OP1),24(OP2),35(OP3),46(OP4):2DR(2ndﾃﾞｨｹｲﾚｰﾄ)   (0～31)
14(OP1),25(OP2),36(OP3),47(OP4):RR(ﾘﾘｰｽﾚｰﾄ)        (0～15)
15(OP1),26(OP2),37(OP3),48(OP4):1DL(1stﾃﾞｨｹｲﾚﾍﾞﾙ)  (0～15)
16(OP1),27(OP2),38(OP3),49(OP4):TL(ﾄｰﾀﾙﾚﾍﾞﾙ)       (0～127)
17(OP1),28(OP2),39(OP3),50(OP4):KS(ｷｰｽｹｰﾘﾝｸﾞ)      (0～3)
18(OP1),29(OP2),40(OP3),51(OP4):MUL(ﾌｪｰｽﾞﾏﾙﾁﾌﾟﾗｲ)  (0～15)
19(OP1),30(OP2),41(OP3),52(OP4):DT1(ﾃﾞｨﾁｭｰﾝ1)      (0～7)
20(OP1),31(OP2),42(OP3),53(OP4):DT2(ﾃﾞｨﾁｭｰﾝ2)      (0～3)
21(OP1),32(OP2),43(OP3),54(OP4):AME(AMSｲﾈｰﾌﾞﾙ)     (0,1)

  パラメータの機能や詳しい解説は専門書や「ＢＡＳＩＣマニュアル」の
M_VSET()やM_VGET()の項を参照のこと。
--------------------------------------------------------------------------------
ファンクション$04       m_vset

機能:   ＦＭ音源音色の設定

引数:   d2.l＝音色番号(1～200)
	a1.l＝データ格納領域のアドレス(55バイト分)

戻り値: なし
	d0.l＝エラーコード

備考:   パラメータフォーマットについてはファンクション$03の備考を参照。
--------------------------------------------------------------------------------
ファンクション$05       m_tempo

機能:   テンポの設定／取り出し

引数:   20≦d2.l≦300:音楽的テンポ値(１分間に4分音符を何個演奏するか)
	d2.l＝－1:d0.lに現在のテンポ値、a0.lに現在のタイマー値を返す

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$06       m_trk

機能:   ＭＭＬデータのバッファへの書き込み

引数:   d2.l＝トラック番号（1～80）
	a1.l＝ＭＭＬ文字列データ格納アドレス

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$07       m_free

機能:   トラックバッファの空き容量

引数:   d2.l＝トラック番号（1～80）

戻り値: d0.l＝空き容量値

備考:   ＺＭＤ演奏中の場合は戻り値の内容は保証されない。
--------------------------------------------------------------------------------
ファンクション$08       m_play

機能:   演奏開始

引数:   トラック1～32がd2.lのビット0～31
	トラック33～64がd3.lのビット0～31
	トラック65～80がd4.wのビット0～15
	に対応し、ビット＝1で指定されたトラックの演奏を開始する。
	ただし、d2.l＝d3.l＝d4.w＝0の場合は全トラック演奏開始する。

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$09       m_stat

機能:   演奏状態の検査

引数:   チャンネル1～32がd2.lのビット0～31に対応し、
	ビット＝1のチャンネルに対して検査を行う。
	d2.l＝0の時は全チャンネル検査を行なう

戻り値: 検査査定されたチャンネルのうちどれかひとつでも演奏中なら、d0.l＝1を返す。
	d2.l＝0で全チャンネルを検査対象にした場合は、演奏中のチャンネルに
	対応したビット＝1をd0.lに返す。

備考:   チャンネル番号とその対応デバイスはベースチャンネルモードによって
	変動する。
m_ch("FM")、(B0)の時
チャンネル番号  1～8    内蔵ＦＭ音源チャンネル1～8
		9       内蔵ＡＤＰＣＭ音源
		10～25  ＭＩＤＩチャンネル1～16
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)

m_ch("MIDI")、(B1)の時
チャンネル番号  1～16   ＭＩＤＩチャンネル1～16
		17～24  内蔵ＦＭ音源チャンネル1～8
		25      内蔵ＡＤＰＣＭ音源
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)
--------------------------------------------------------------------------------
ファンクション$0A       m_stop

機能:   演奏停止

引数:   トラック1～32がd2.lのビット0～31
	トラック33～64がd3.lのビット0～31
	トラック65～80がd4.wのビット0～15
	に対応し、ビット＝1で指定されたトラックの演奏を停止する。
	ただし、d2.l＝d3.l＝d4.w＝0の場合は全トラック演奏停止する。

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$0B       m_cont

機能:   演奏再開

引数:   トラック1～32がd2.lのビット0～31
	トラック33～64がd3.lのビット0～31
	トラック65～80がd4.wのビット0～15
	に対応し、ビット＝1で指定されたトラックの演奏を再開する。
	ただし、d2.l＝d3.l＝d4.w＝0の場合は全トラック演奏再開する。

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$0C       m_atoi

機能:   トラックバッファの先頭アドレスを得る

引数:   d2.l＝トラック番号（1～80）

戻り値: d0.l＝トラックバッファの先頭アドレス値
--------------------------------------------------------------------------------
ファンクション$0D       init_all

機能:   音源ドライバの初期設定

引数:   なし

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$0E       int_stop

機能:   演奏割り込みの中断

引数:   なし

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$0F       m_play2

機能:   前回に実行されたm_playをもう一度実行する

引数:   なし

戻り値: なし

備考:   前回のm_play実行時のパラメータでもう一度m_playを呼び出す。
	ファンクション$11で演奏を開始したあと、このファンクションを
	実行しても無意味。
--------------------------------------------------------------------------------
ファンクション$10	adpcm_read

機能    ＡＤＰＣＭデータの登録と加工

引数    a1.l＝ファイルネーム格納アドレス
	または
	(a1).l＝ソースデータナンバー(0～511)
	d2.l＝設定ノートナンバー(0～511)
	d3の上位16ビット＝ピッチシフトパラメータ
		( 0～11:ピッチダウン
		     12:ニュートラル
		 13～24:ピッチアップ)
	d3の下位16ビット＝ボリュームパラメータ
		(1%～300%)
	d3.l＝0でデータにノンタッチ
	d4の上位16ビット＝ディレイカウント(0～65535)
	d4の下位16ビット＝ミキシング元ノートナンバー(0～511)
	    ＝－1でミキシングは行わない
	d5の上位16ピット＝オフセットカウント(0～65535)
	d5の下位16ビット＝カットサイズ(0～65535)
	d5.l＝0でデータの切り出しを行わない
	d6.l≠0で逆転
	d6.l＝0で逆転なし
	d7の上位16ピット＝オフセットカウント(0～65535)
	d7のビット8～15＝モード(－1:フェード・イン,＋1:フェード・アウト)
	d7のビット0～7＝フェード・イン／アウト・レベル(0～127)

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$11       play_cnv_data

機能:   ＺＭＤの演奏

引数:   d2.l＝データ総サイズ
	d2.l＝0の場合はドライバ内にデータを転送せず即演奏(高速応答)
	a1.l＝演奏データ格納アドレス(備考参照)

戻り値: なし
	d0.l＝エラーコード

備考：  ＺＭＤの構造
Offset  ＋0    :$10(.b)               ←偶数アドレス}
	＋1～＋6:'ZmuSiC'                           }メモリ上に無くても構わない
	＋7    :Version Number(.b)    ←a1.lで指し示すべきアドレス(奇数アドレス)
	なお、内部フォーマットについての詳しい解説はMEASURE12参照
--------------------------------------------------------------------------------
ファンクション$12       se_play

機能:   効果音演奏

引数:   d2.l＝何トラックから割り込ませるか（1～32）
	a1.l＝演奏データ格納アドレス(備考参照)

戻り値: なし

備考：  効果音の構造
Offset  ＋0     :$10(.b)               ←偶数アドレス}
        ＋1～＋6:'ZmuSiC'                            }メモリ上に無くても構わない
	＋7     :Version Number(.b)                  }
	＋8～   :共通コマンド                        }
	＋?     :Number of tracks(.w)  ←a1.lで指し示すべきアドレス(偶数アドレス)
	なお、内部フォーマットについての詳しい解説はMEASURE12参照
--------------------------------------------------------------------------------
ファンクション$13  se_adpcm1

機能:   ＡＤＰＣＭの効果音演奏

引数:   a1.l＝ＡＤＰＣＭデータ格納アドレス
	d2.l＝ＡＤＰＣＭデータサイズ
	d3(bit00～07)＝PAN(0～3)
	d3(bit08～15)＝FRQ(0～4)
	d3(bit16～23)＝優先レベル(低0～255高)

戻り値: なし

備考:   優先レベルの例

  現在鳴っている音の      新しく鳴らそうとしている音の       結果
      優先レベル                  優先レベル
	  0                            0                新しいのが鳴る
	  0                            1                新しいのが鳴る
	  1                            0                新しいのが拒否される

通常は0(従来通り)で構わない。ゲーム等の面と面のつなぎのメッセージやイベントの
メッセージなどの爆発音等の効果音等に邪魔されたくない時に使用するとよい。
  優先レベルはＰＣＭ８独立チャンネルモード時は意味をなさない。
--------------------------------------------------------------------------------
ファンクション$14  se_adpcm2

機能:   ＺＭＵＳＩＣ内に登録済みのＡＤＰＣＭ音の効果音演奏

引数:   d2.l＝ノート番号(0～511)
	d3(bit00～07)＝PAN(0－3)
	d3(bit08～15)＝FRQ(0－4)
	d3(bit16～23)＝優先レベル(低0～255高)

戻り値: なし

備考：  優先レベルについてはファンクション$13と同様。
--------------------------------------------------------------------------------
ファンクション$15       set_ch_mode

機能:   ベースチャンネルモード指定

引数:   d2.l≠0 ＭＩＤＩチャンネル基準モード
	d2.l＝0 ＦＭチャンネル基準モード

戻り値: なし

備考:   このファンクションの設定内容によってチャンネル番号と対応デバイスが
	変化する。
d2.l＝0の時（m_ch("FM")、(B0)の時）
チャンネル番号  1～8    内蔵ＦＭ音源チャンネル1～8
		9       内蔵ＡＤＰＣＭ音源
		10～25  ＭＩＤＩチャンネル1～16
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)

d2.l≠0の時（m_ch("MIDI")、(B1)の時）
チャンネル番号  1～16   ＭＩＤＩチャンネル1～16
		17～24  内蔵ＦＭ音源チャンネル1～8
		25      内蔵ＡＤＰＣＭ音源
		26～32  ＡＤＰＣＭチャンネル2～8(ＰＣＭ８独立チャンネルモード時)
--------------------------------------------------------------------------------
ファンクション$16       midi_rec

機能:   ＭＩＤＩデータの記録

引数:   なし

戻り値: なし

備考:   ファンクション実行後、ＭＩＤＩインターフェースのＭＩＤＩ－ＩＮ端子より
	受信したデータをトラックバッファへ格納していく。バッファオーバーフローを
	起こすとビープ音が鳴る。この場合データ内容は意味をなさない。
--------------------------------------------------------------------------------
ファンクション$17       midi_rec_end

機能:   ＭＩＤＩデータ記録モード終了

引数:   d2.l＝0 文字列データへ変換
	d2.l≠0 データを加工しない

戻り値: d0.l＝データサイズ
	a0.l＝data address
	エラーの場合はd0.l＝エラーコード/a0.l＝0となる

備考:   ファンクション$16を終了する。文字列データ(d2.l＝0)へ変換する際、
	ワークエリアを使用する。文字列データ作成時にワークが不足していると
	ビーブ音が鳴る。この場合データ内容は意味をなさない。
--------------------------------------------------------------------------------
ファンクション$18       midi_trns

機能:   ＭＩＤＩデータの転送

引数:   d2.l＝0 アスキー文字列データ転送モード
	d2.l≠0 バイナリデータ転送モード(データサイズ)
	a1.l＝データ先頭アドレス

戻り値: なし
	d0.l＝エラーコード
--------------------------------------------------------------------------------
ファンクション$19       calc_total

機能:   各トラックの演奏データのステップタイムの合計値を求め
	演奏トラックワークのp_totalに格納する

引数:   d2≠0:計算してp_totalに格納する。
	d2＝0:計算してp_totalに格納して結果を画面に表示する。

戻り値: d0.L＝－1:演奏データにエラーが残存しているため、計算を行えなかった
	d0.L＝－2:どのトラックにも演奏データは存在しなかった
　　　　d0.L＝0:正常終了

備考:   トラックバッファに格納されている演奏データについて計算処理を行う。
	演奏中の場合は、演奏を停止して計算処理をする。
--------------------------------------------------------------------------------
ファンクション$1a       fade_out

機能:   演奏中の全トラックに対してフェード・イン／アウトを行う

引数:   d2.l＝－85～－1:フェード・イン
	d2.l＝0:フェード・アウト・モード解除
	d2.l＝1～85:フェード・アウト

戻り値: d0.l＝0:設定完了
	d0.l＝－1:設定失敗(すでにフェード・イン／アウト実行中)

備考:   d2.l＝0以外ではd2.lの絶対値は音量の増減スピードに相当し、絶対値が
	大きいほど増減スピードは速くなる。
	  d2.l＝0では単に各トラックの音量が下がるのを停止するのみ。通常音量には
	戻すことはしない。
	  演奏中のトラックのうち１トラックでもフェード・イン／アウトを実行中なら
	本ファンクションは拒絶される(戻り値:d0.l＝－1になる)。
--------------------------------------------------------------------------------
ファンクション$1b       m_vset2

機能:   ＦＭ音源音色の設定(AL/FB分離フォーマット形式)

引数:   d2.l＝音色番号(1～200)
	a1.l＝パラメータデータ格納アドレス(55バイト分)

戻り値: なし
	d0.l＝エラーコード

備考    0(a1)～54(a1)とパラメータの対応
        00(OP1),11(OP2),22(OP3),33(OP4):AR(ｱﾀｯｸﾚｰﾄ)        (0～31)
	01(OP1),12(OP2),23(OP3),34(OP4):1DR(1stﾃﾞｨｹｲﾚｰﾄ)   (0～31)
	02(OP1),13(OP2),24(OP3),35(OP4):2DR(2ndﾃﾞｨｹｲﾚｰﾄ)   (0～31)
	03(OP1),14(OP2),25(OP3),36(OP4):RR(ﾘﾘｰｽﾚｰﾄ)        (0～15)
	04(OP1),15(OP2),26(OP3),37(OP4):1DL(1stﾃﾞｨｹｲﾚﾍﾞﾙ)  (0～15)
	05(OP1),16(OP2),27(OP3),38(OP4):TL(ﾄｰﾀﾙﾚﾍﾞﾙ)       (0～127)
	06(OP1),17(OP2),28(OP3),39(OP4):KS(ｷｰｽｹｰﾘﾝｸﾞ)      (0～3)
	07(OP1),18(OP2),29(OP3),40(OP4):MUL(ﾌｪｰｽﾞﾏﾙﾁﾌﾟﾗｲ)  (0～15)
	08(OP1),19(OP2),30(OP3),41(OP4):DT1(ﾃﾞｨﾁｭｰﾝ1)      (0～7)
	09(OP1),20(OP2),31(OP3),42(OP4):DT2(ﾃﾞｨﾁｭｰﾝ2)      (0～3)
	10(OP1),21(OP2),32(OP3),43(OP4):AME(AMSｲﾈｰﾌﾞﾙ)     (0,1)
	44:AL(ｱﾙｺﾞﾘｽﾞﾑ)           (0～7)
	45:FB(ﾌｨｰﾄﾞﾊﾞｯｸ)          (0～7)
	46:OM(ｽﾛｯﾄﾏｽｸ)            (0～15)
	47:PAN                    (0～3)
	48:WF(ｳｪｰｳﾞﾌｫｰﾑ)          (0～3)
	49:SYC(ｼﾝｸﾛ)              (0,1)
	50:SPD(ｽﾋﾟｰﾄﾞ)            (0～255)
	51:PMD                    (0～127)
	52:AMD                    (0～127)
	53:PMS                    (0～7)
	54:AMS                    (0～3)

  パラメータの機能や詳しい解説は専門書や「Ｘ－ＢＡＳＩＣマニュアル」の
M_VSET()やM_VGET()の項を参照のこと。
--------------------------------------------------------------------------------
ファンクション$1c       send_rd_exc

機能:   ローランド・エクスクルーシブ・データの転送

引数:   d2.l＝データサイズ
	d3(bit16～31)＝デバイスＩＤ
	d3(bit0～15)＝モデルＩＤ
	a1.l＝データ格納アドレス

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$1d       send_exc

機能:   エクスクルーシブ・データの転送

引数:   d2.l＝データサイズ
	a1.l＝データ格納アドレス

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$1e       sc55_p_rsv

機能:   ローランドＳＣ５５のパーシャル(ボイス)リザーブ

引数:   d2.l＝データサイズ(d2.l＝16でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝パラメータデータ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 sc55_v_reserve()参照。
--------------------------------------------------------------------------------
ファンクション$1f       sc55_reverb

機能:   ローランドＳＣ５５のリバーブパラメータセット

引数:   d2.l＝データサイズ(1≦d2.l≦7でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝パラメータデータ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 sc55_reverb()参照。
--------------------------------------------------------------------------------
ファンクション$20       sc55_chorus

機能:   ローランドＳＣ５５のコーラスパラメータセット

引数:   d2.l＝データサイズ(1≦d2.l≦8でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝パラメータデータ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 sc55_chorus()参照。
--------------------------------------------------------------------------------
ファンクション$21       sc55_part_parameter

機能:   ローランドＳＣ５５のパートパラメータ

引数:   d2.l＝データサイズ(1≦d2.l≦119でないと楽器の状態は保証されず)
	d3(bit16～31)＝PART NUMBER(1～16)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝パラメータデータ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 sc55_part_setup()参照。
--------------------------------------------------------------------------------
ファンクション$22       sc55_drum_parameter

機能:   ローランドＳＣ５５のドラムパラメータ

引数:   d2.l＝データサイズ(1≦d2.l≦8でないと楽器の状態は保証されず)
	d3(bit24～31)＝Map Number(0～1)
	d3(bit16～23)＝Note Number(0～127)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 sc55_drum_setup()参照。
--------------------------------------------------------------------------------
ファンクション$23       sc55_print

機能:   ローランドＳＣ５５の画面に文字列を表示する

引数:   d2.l＝文字列サイズ(1≦d2.l≦32でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝文字列格納アドレス

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$24       sc55_display

機能:   ローランドＳＣ５５の画面にグラフィックを表示する

引数:   d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス(パラメータの個数は16個に固定)
	(必ず偶数。さもなくばアドレスエラーが発生する)

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 sc55_display()参照。
--------------------------------------------------------------------------------
ファンクション$25       mt32_p_rsv

機能:   ローランドＭＴ３２のパーシャルリザーブを行う

引数:   d2.l＝データサイズ(d2.l＝9でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 mt32_p_reserve()参照。
--------------------------------------------------------------------------------
ファンクション$26       mt32_reverb

機能:   ローランドＭＴ３２のリバーブパラメータの設定

引数:   d2.l＝データサイズ(1≦d2.l≦3でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 mt32_reverb()参照。
--------------------------------------------------------------------------------
ファンクション$27       mt32_setup

機能:   ローランドＭＴ３２のパートパラメータの設定

引数:   d2.l＝データサイズ(1≦d2.l≦9でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 mt32_part_setup()参照。
--------------------------------------------------------------------------------
ファンクション$28       mt32_drum

機能:   ローランドＭＴ３２のドラムパラメータの設定

引数:   d2.l＝データサイズ(1≦d2.l≦4でないと楽器の状態は保証されず)
	d3(bit16～31)＝NOTE NUMBER(0～127)
		       (ただし受信可能範囲(24～87)以外は無視される)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 mt32_drum_setup()参照。
--------------------------------------------------------------------------------
ファンクション$29       mt32_common

機能:   ローランドＭＴ３２の音色のコモンパラメータの設定

引数:   d2.l＝データサイズ(1≦d2.l≦15でないと楽器の状態は保証されず)
	d3(bit16～31)＝Program NUMBER(1～64)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   a1.lから格納されているパラメータデータは以下の書式に従う。
	Program Name(最大10文字),$00(.b),Param1(.b),Param2(.b),…,Param4(.b)
	パラメータフォーマットはMEASURE3 mt32_common()参照。
--------------------------------------------------------------------------------
ファンクション$2a       mt32_partial

機能:   ローランドＭＴ３２の音色のパーシャルパラメータの設定

引数:   d2.l＝データサイズ(1≦d2.l≦58でないと楽器の状態は保証されず)
	d3(bit24～31)＝PROG NUMBER(1～64)
	d3(bit16～23)＝PARTIAL NUMBER(1～4)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 mt32_partial()参照。
--------------------------------------------------------------------------------
ファンクション$2b       mt32_patch

機能:   ローランドＭＴ３２のパッチパラメータの設定

引数:   d2.l＝データサイズ(1≦d2.l≦7でないと楽器の状態は保証されず)
	d3(bit16～31)＝PATCH NUMBER(1～128)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 mt32_patch()参照。
--------------------------------------------------------------------------------
ファンクション$2c       mt32_print

機能:   ローランドＭＴ３２の画面に文字列を表示する

引数:   d2.l＝文字列サイズ(1≦d2.l≦20でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝文字列格納アドレス

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$2d       u220_setup

機能:   ローランドＵ２２０のセットアップパラメータの設定

引数:   d2.l＝データサイズ(d2.l＝7でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 u220_setup()参照。
--------------------------------------------------------------------------------
ファンクション$2e       u220_common

機能:   ローランドＵ２２０テンポラリパッチのコモンパラメータの設定

引数:   d2.l＝データサイズ(d2.l＝18でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 u220_setup()参照。
--------------------------------------------------------------------------------
ファンクション$2f       u220_d_setup

機能:   ローランドＵ２２０テンポラリパッチのドラムパラメータの設定

引数:   d2.l＝データサイズ(d2.l＝7でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 u220_drum_setup()参照。
--------------------------------------------------------------------------------
ファンクション$30       u220_p_setup

機能:   ローランドＵ２２０テンポラリパッチのパートパラメータの設定

引数:   d2.l＝データサイズ(d2.l＝13でないと楽器の状態は保証されず)
	d3(bit16～31)＝PART NUMBER(1～6)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 u220_part_setup()参照。
--------------------------------------------------------------------------------
ファンクション$31       u220_print

機能:   ローランドＵ２２０テンポラリパッチエリアにメッセージ表示

引数:   d2.l＝文字列サイズ(1≦d2.l≦12でないと楽器の状態は保証されず)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝文字列格納アドレス

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$32       u220_timbre

機能:   ローランドＵ２２０ティンバーパラメータの設定

引数:   d2.l＝データサイズ(27≦d2.l≦39でないと楽器の状態は保証されず)
	d3(bit16～31)＝PROGRAM NUMBER(1～128)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   a1.lから格納されているデータは以下の書式に従う。
	Timbre Name(12文字以内),$00(.b),Param1(.b),Param2(.b),…,param26(.b)
	パラメータフォーマットはMEASURE3 u220_timbre()参照。
--------------------------------------------------------------------------------
ファンクション$33       u220_drum

機能:   ローランドＵ２２０テンポラリエリアのリズムキットの書き換え

引数:   d2.l＝データサイズ(1≦d2.l≦20でないと楽器の状態は保証されず)
	d3(bit16～31)＝NOTE NUMBER(35～99)
	d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)
	a1.l＝データ格納アドレス

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 u220_drum_inst()参照。
--------------------------------------------------------------------------------
ファンクション$34       m1_midi_ch

機能:   ＫＯＲＧ  Ｍ１のシーケンサＳＯＮＧ０の受信ＭＩＤＩチャンネルの設定

引数:   a1.l＝データ格納アドレス

戻り値: なし

備考:   0(a1)＝パート１の受信ＭＩＤＩチャンネル(1～16)
	1(a1)＝パート２の受信ＭＩＤＩチャンネル(1～16)
			 :
	7(a1)＝パート８の受信ＭＩＤＩチャンネル(1～16)
--------------------------------------------------------------------------------
ファンクション$35       send_to_m1

機能:   ファンクション$34,$36,$37で設定したパラメータを
	ＫＯＲＧ  Ｍ１のシーケンサＳＯＮＧ０へ設定

引数:   d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$36       m1_p_setup

機能:   ＫＯＲＧ  Ｍ１のシーケンサＳＯＮＧ０のトラックパラメータの設定

引数:   a1.l＝データ格納アドレス(パラメータデータは必ず40個なければならない)


戻り値: なし

備考:   パラメータフォーマットはMEASURE3 m1_part_setup()参照。
--------------------------------------------------------------------------------
ファンクション$37       m1_e_setup

機能:   ＫＯＲＧ  Ｍ１のシーケンサＳＯＮＧ０のエフェクトパラメータの設定

引数:   a1.l＝データ格納アドレス(パラメータは必ず25個なければならない)

戻り値: なし

備考:   パラメータフォーマットはMEASURE3 m1_effect_setup()参照。
--------------------------------------------------------------------------------
ファンクション$38       m1_print

機能:   ＫＯＲＧ  Ｍ１のシーケンサＳＯＮＧ０のソングネームの設定

引数:   d2.l＝文字列サイズ(1≦d2.l≦10でないと楽器の状態は保証されず
	a1.l＝文字列格納アドレス

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$39       block_adpcm_data

機能:   ＺＰＤの登録

引数:   a1.l＝ＺＰＤ・ファイルのファイルネーム格納アドレス

戻り値: なし
	d0.l＝エラーコード

備考:   ファイルネームは
	文字列,$00(.B)
	の書式に従う。
--------------------------------------------------------------------------------
ファンクション$3a       get_trk_tbl

機能:   演奏トラックテーブル／絶対チャンネルテーブルのアドレス

引数:   なし

戻り値: d0.l＝絶対チャンネルテーブルのアドレス
	a0.l＝演奏トラックテーブルのアドレス

備考：
m_ch("FM"),(B0)のときはd0.lの指し示すアドレスから
  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
m_ch("MIDI"),(B1)のときはd0.lの指し示すアドレスから
  9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,0,1,2,3,4,5,6,7,8
a0.lの指し示すアドレスからは演奏すべきトラックナンバーが最大32個
格納されている。終端コードは$ff(.B)。
  例えばトラック1～9を演奏する(している)時は
0,1,2,3,4,5,6,7,8,$ff        (値はトラック番号－1)
のようになっている。
--------------------------------------------------------------------------------
ファンクション$3b  set_loop_time

機能:   全トラックがd2.b回以上ループしたらa1.lへBSRする

引数:   d2.b＝0  loop time(s) (0～255)
	a1.l＝飛び先アドレス(＝0で解除)

戻り値: なし
--------------------------------------------------------------------------------
ファンクション$3c       get_play_work

機能:   演奏トラックワークのアドレスを返す

引数:   d2.b＝trk number(1～80)

戻り値: a0.l＝演奏ワーク・アドレス
	d0.l＝コンパイル・ワーク・アドレス

備考:	具体的なワーク内容についてはMEASURE13を参照。
--------------------------------------------------------------------------------
ファンクション$3d       get_timer_mode

機能:   どのタイマで割り込みを実現しているかを返す

引数:   なし

戻り値: d0.l＝0  timer A
	d0.l＝1  timer B
--------------------------------------------------------------------------------
ファンクション$3e       set_fm_master_vol

機能:   ＦＭ音源のマスターボリュームを設定する

引数:   d2.l＝マスターボリューム値(0～255)

戻り値: なし

備考:   演奏中は無効。ＺＭＤ作成前にのみ有効。
--------------------------------------------------------------------------------
ファンクション$3f       set_timer_value

機能:   タイマーの値を設定する

引数:   d2.l＝タイマー値

戻り値: なし

備考:   設定した値は、現在テンポ源となっている割り込みタイマーに対して
	直接書き込まれる。
--------------------------------------------------------------------------------
ファンクション$40       release_support

機能:   ＺＭＵＳＩＣ．Ｘ用(またはＺＭＳＣ．Ｘ用)のサブプログラムの名前を登録する
	(あるいは登録したものを取り消す)

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
引数:   登録時
	a1.l＝filename address   (解除プログラムの名前を登録)

戻り値: d0.l＝0≦result code     正常登録されました。(ok)
	d0.l＝－1                既に４つ登録されており、これ以上の登録は出来ません。(error)

備考:   名前を登録しておくとＺＭＵＳＩＣ．Ｘ解除時に
	一緒に解除する。filename(100文字以内)は
	'a:\bin\zp -r',0
	のようなフォーマットとする。
	最大４つまで登録可能。
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
引数:   キャンセル時
	a1.l＝0
	d2.l＝登録終了時に返ってきたresult code

戻り値: d0.l＝0   キャンセル完了(ok)
	d0.l＝－1 エラー

備考:   result codeにより任意のプログラムの登録キャンセルが可能。
--------------------------------------------------------------------------------
ファンクション$41       jump_active

機能:   [!]/[@]/[end]コマンドの有効化／無効化スイッチ

引数:   d2.l＝0         無効
	d2.l≠0         有効

戻り値: なし

備考:   演奏中は無効。ＺＭＤ作成前にのみ有効。
--------------------------------------------------------------------------------
ファンクション$42       set_mclk

機能:   全音符の絶対音長を設定する

引数:   d2.l＝1～254

戻り値: なし

備考:   演奏中は無効。ＺＭＤ作成前にのみ有効。
--------------------------------------------------------------------------------
ファンクション$43       picture_sync

機能:   映像同期モードのオン／オフ

引数:   d2.l＝0  映像同期モードオフ
	    ≠0  映像同期モードオン
戻り値: 状態		設定しようとする状態	結果
	ＯＮ			ＯＦＦ		ＯＦＦ(正常終了:d0.l＝0)
	ＯＮ			ＯＮ		エラー(d0.l＝－1)
	ＯＦＦ			ＯＦＦ		エラー(d0.l＝－1)
	ＯＦＦ			ＯＮ		ＯＮ(正常終了:d0.l＝0)

備考:　 具体的な使用方法についてはMEASURE14を参照のこと。
--------------------------------------------------------------------------------
ファンクション$44  mask_channels

機能:   演奏チャンネルのマスクキングを行う

引数:   d2.l＝マスクしたいチャンネルのビットパターン
	bit＝1 mask ch
	bit＝0 enable ch

備考:   m_ch("fm")または(B0)のときはビット0～24がＦＭ1～8, ＡＤＰＣＭ1, ＭＩＤＩ1～16に対応し
	m_ch("midi")または(B1)のときはビット0～24がＭＩＤＩ1～16, ＦＭ1～8, ＡＤＰＣＭ1に
	対応する。
	'm_ch()',(Ｂn)によらずＰＣＭ８独立チャンネルモード時はビット25～31が
	ＡＤＰＣＭ2～8に対応する。
--------------------------------------------------------------------------------
ファンクション$45  buffer_info

機能:   各バッファのアドレス、サイズ、終了アドレスの情報を得る

引数:   なし

戻り値:  0(a0)＝トラックバッファの先頭アドレス   trk_top
	 4(a0)＝トラックバッファのサイズ         trk_buf_size
	 8(a0)＝トラックバッファ終了アドレス     trk_buf_end
	      ＝ＺＭＵＳＩＣの最終アドレス       (dev_end_adr)
	12(a0)＝ＡＤＰＣＭバッファ先頭アドレス   adpcm_buffer_top
	16(a0)＝ＡＤＰＣＭバッファサイズ         adpcm_buffer_size
	20(a0)＝ＡＤＰＣＭバッファ終了アドレス   adpcm_buffer_end
	24(a0)＝汎用ワークエリア先頭アドレス     adpcm_work_top
	28(a0)＝汎用ワークエリアサイズ           adpcm_work_size
	32(a0)＝汎用ワークエリア終了アドレス     adpcm_work_end

	36(a0)＝新規に登録される                 adpcm_buffer_next
	       ＡＤＰＣＭデータが
	       格納されるアドレス
	       adpcm_buffer_top≦adpcm_buffer_next≦adpcm_buffer_end

	40(a0)＝次にワークが使用される場合の     adpcm_work_now
	       汎用ワーク使用可能開始アドレス
	       adpcm_work_top≦adpcm_work_now≦adpcm_work_end

	44(a0)＝汎用ワークエリアの本当のサイズ   adpcm_work_true_size

	48(a0)＝演奏トラックワーク格納アドレス   seq_wk_tbl
	52(a0)＝効果音トラックワーク格納アドレス seq_wk_tbl2

	56(a0)＝ＡＤＰＣＭデータの管理テーブル   adpcm_tbl
	       格納アドレス

	60(a0)＝波形メモリの管理テーブル         wave_tbl
	       格納アドレス

	64(a0)＝ＦＭ音源音色バッファのアドレス   neiro

	68(a0)＝各トラックの先頭アドレス	 trk_po_tbl
		格納テーブルアドレス(1,2,3,...80)

	72(a0)＝m_allocで確保した各トラックの	 trk_len_tbl
		サイズ格納アドレス(1,2,3,...80)

備考:   各バッファのアドレスを書き替えることによって、バッファを外部のものに
	切り換えたりすることも可能となる。たとえばＡＤＰＣＭバッファを
	ＺＭＵＳＩＣ常駐時に確保しなかったとしても、あとで、別プログラムが
	用意した領域を指し示すようにadpcm_buffer_top等を書き替え、
	ポインタであるadpcm_buffer_nextをadpcm_buffer_next＝adpcm_buffer_top
	と初期化してやれば、その領域をＡＤＰＣＭバッファとして使用できるように
	なる。
	  汎用ワークエリアはＡＤＰＣＭコンフィギュレーションファイルの
	一時退避場所としてや、波形メモリのバッファ(ＺＭＳ時)、
	ＡＤＰＣＭデータ加工時のワークとして使用されておりデータ内容保守の
	関係で状況に応じてワークサイズ(adpcm_work_size)が伸縮する。よって
	汎用ワークエリアを外部プログラムで用意したものと差し換えるには
	adpcm_work_top,adpcm_work_size, adpcm_work_endを設定しさらに
	adpcm_work_now＝adpcm_work_top
	adpcm_work_true_size＝adpcm_work_size
	とする必要がある。
--------------------------------------------------------------------------------
ファンクション$46       set_zpd_tbl

機能:   ＺＰＤデータの情報を登録する

引数:   a1.l＝ＺＰＤ情報テーブルのアドレス
	(a1.l＝ＺＰＤファイルの先頭アドレス＋8に相当)

戻り値: なし

備考:   ＡＤＰＣＭデータの管理テーブルであるadpcm_tblの先頭からノート番号0から順番に
		ＡＤＰＣＭ データ格納アドレス(.L), ＡＤＰＣＭ データサイズ(.L)……
	のように格納されている。adpcm_tblのアドレスはファンクション$45で
	求めることができるので、まったく外部のプログラムから
	ＡＤＰＣＭデータの差し換えをすることも可能。
--------------------------------------------------------------------------------
ファンクション$47  set_output_level

機能:   演奏チャンネルの出力割合を設定する

引数:   d2.l＝変更したいチャンネルのビットパターン
	bit＝1 変更希望チャンネル
	bit＝0 変更しないチャンネル
	d3.b＝0～127     (出力レベル。0は消音)
	d3.b＝128以上    (通常に戻す)
備考:   m_ch("FM")または(B0)のときはビット0～24がＦＭ1～8, ＡＤＰＣＭ1, ＭＩＤＩ1～16に対応し
	m_ch("MIDI")または(B1)のときはビット0～24がＭＩＤＩ1～16, ＦＭ1～8, ＡＤＰＣＭ1に
        対応する。
	'm_ch()',(Ｂn)によらずＰＣＭ８独立チャンネルモード時はビット25～31が
	ＡＤＰＣＭ2～8に対応する。
	ＦＭ音源の場合は変化が指数関数的であるので注意
	(d3.b＝90付近でほとんど消音する)。
--------------------------------------------------------------------------------
ファンクション$48  eox_wait

機能:   ＥＯＸ($F7)送信後のウェイト時間を設定する

引数:   d2.l＝ウェイト値(0～65535)

備考:   d2.l＝0          ウェイトなし
	d2.l＝1          ウェイト最小(約0.017秒)
	d2.l＝65535      ウェイト最大(約1092秒)
--------------------------------------------------------------------------------
ファンクション$49  set_wave_form1

機能:   波形メモリの登録(その１)

引数:   a1.l＝波形データ先頭アドレス
	d2.l＝データサイズ(データ数ではなくてデータの物理サイズ)
	d3(bit16～23)＝波形番号(8～31)
	d3(bit24～31)＝ループ・タイプ(0～2)
	d3.w＝ループポイント(0～65535)

戻り値: なし
	d0.l＝エラーコード

備考:波形メモリの具体的な仕様についてはMEASURE5を参照。
--------------------------------------------------------------------------------
ファンクション$4a  set_wave_form2

機能    波形メモリの登録(その２)

引数    a1.l＝波形データ先頭アドレス
	d2.l＝データ数(データの物理サイズではなくてデータの個数)
	d3(bit16～23)＝波形番号(8～31)
	d3(bit24～31)＝ループ・タイプ(0～2)
	d3.w＝ループポイント(0～65535)

戻り値: なし
	d0.l＝エラーコード

備考:波形メモリの具体的な仕様についてはMEASURE5を参照。
--------------------------------------------------------------------------------
ファンクション$4b  mask_tracks

機能:   トラック単位のマスク

引数:   d2.l＝そのトラックのマスクを解除する(1～80)
	d2.l＝0(全トラックマスク解除)
	d2.l＝そのトラックをマスクする(－80～－1)

備考:   すでにファンクション$44のチャンネルマスクでマスクしてあると
	それらは以後トラックマスクとして処理される。つまり以後本ファンクションで
	制御可能となる。
--------------------------------------------------------------------------------
ファンクション$4c  set_output_level2

機能:   トラック単位の出力割合を設定する

引数:   d2.l＝変更したいトラック番号(1～80)
	d2.l＝0 (全トラックを操作対象とする)
	d3.b＝0～127     (出力レベル。0は消音)
	d3.b＝128以上    (通常に戻す)

備考:   すでにファンクション$44のチャンネルマスクでマスクしてあると
	それらは以後トラックマスクとして処理される。つまり以後本ファンクションで
	制御可能となる。
--------------------------------------------------------------------------------
ファンクション$4d  get_loop_time

機能:   演奏中の現在の繰り返し回数を得る

引数:   なし

戻り値: d0.l＝1～255(現在の繰り返し回数)
	d0.l＜0(演奏終了、または停止中)
--------------------------------------------------------------------------------
ファンクション$4e  get_1st_comment

機能:   演奏中の演奏データに登場した最初のコメント文を得る

引数:   なし

戻り値: a0.l＝文字列格納アドレス。文字列の終端は$00。
------------------------------------------------------------------------------
ファンクション$4f  int_start

機能:   ＺＭＵＳＩＣの割り込みを再開する

引数:   なし

戻り値: なし

備考:　 通常は用いる必要はない。ファンクション$0eで割り込みを停止／禁止した
　　　　あとで、割り込みを復帰する目的等で使う。
------------------------------------------------------------------------------
ファンクション$50       zm_status

機能:   ZMUSICの常駐状況の情報テーブルのアドレスを返す

ﾊﾟﾗﾒｰﾀ: なし

戻り値:	a0.l=情報テーブルの格納アドレス

備考:	情報テーブルの内容は以下のとおり。
	 0(a0).b=MIDIチャンネル有効か (ne=有効,0=無効)
	 1(a0).b=$FF	RS232C MIDI
		 $00	MIDI I/F(CZ6BM1相当品)
		 $01	POLYPHON MIDI
	 2(a0).b=強制MIDIチャンネル有効モードか (ne=YES,0=NO)
	 3(a0).b=ADPCMの発音にPCM8.Xを使用中か (ne=YES,0=NO)
	 4(a0).w=PCM8モード (minus=独立チャンネルモード,plus=ポリモード)
	 6(a0).bの第0ビット=1 ジュークボックス類が常駐している。
			   =0 常駐していない
	 6(a0).bの第1ビット=1 演奏制御を割り込みで行なうプログラムが
			      常駐している。(ZP /Dなど)
			   =0 常駐していない
	 7(a0).b=$01	演奏待機状態(ファンクション$54参照)
		=$FF	演奏開始
			(このエリアを外部アプリケーションで$00にしておけば
			 演奏開始や演奏待機状態になったことを知ることができる)
	 8(a0).b}
	：	} 直前に読んだファイルのファイル名(ZPD,MDD,CNFなど)
	98(a0).b}

	-$1(a0)} エラーが発生した場合、そのエラーコードが、このエリアに
	 :     } 格納される。-$8(a0)がいちばん新しく発生したエラーで、
	-$8(a0)} -$1(a0)がいちばん昔に発生したエラー。古い物はどんどん
		  切り捨てられていく。外部アプリケーション側でこの８バイトを
		 初期化($00に)しておけば、その時点から発生したエラーを
		 知ることができる。
	-$c(a0).l	ZMUSICの割り込みが発生されるたびにインクリメントされる
			ここをアプリケーション側でクリアしておけば
			その時点からのステップカウントが求められる
			(ＺＭＵＳＩＣの割り込みは１ステップカウントごとに
			発生する)。

注意	ワークの書き換えはZMUSICプログラム本体を十分理解してから行なうこと。
--------------------------------------------------------------------------------
ファンクション$51  sc55_init

機能:   ＳＣ５５の初期化を行なう

引数:   d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)

戻り値: なし
------------------------------------------------------------------------------
ファンクション$52  mt32_init

機能:   ＭＴ３２の初期化を行なう

引数:   d3.b＝デバイスＩＤ(d3.b＝－1で前回のを使用する)

戻り値: なし
------------------------------------------------------------------------------
ファンクション$53  リザーブ

機能:

引数:

戻り値:
------------------------------------------------------------------------------
ファンクション$54	intercept_play

機能:	演奏開始制御

引数:	d2.l＝-1 演奏させないモードに設定
	d2.l＝0  演奏させないモードを解除、
		 さらにトラックバッファ内の演奏データを演奏開始
	d2.l＝1  演奏させないモードを解除

戻り値:	なし

備考：	演奏させないモードに設定したあとは、あとで必ずモード解除
	(d2.l=0 か d2.l=1)を行なうこと
--------------------------------------------------------------------------------
ファンクション$55	m_inp1

機能:	１バイトＭＩＤＩ入力

引数:	d2.l＝0	入力データがない場合はエラーコードを持って帰還
	d2.l≠0	入力データがない場合は1/60×d2.l秒間データの受信を待つ

戻り値:	d0.b=入力データ
	ただし、d0.l=負の場合はエラー
--------------------------------------------------------------------------------
ファンクション$56	m_out1

機能:	１バイトＭＩＤＩ出力

引数:	d2.b＝出力データ

戻り値:	なし
--------------------------------------------------------------------------------
ファンクション$57	occupied_size

機能:	各バッファの実際の使用容量を返す

引数:	a1.l=戻り値の格納バッファアドレス(12バイト必要)

戻り値:	なし

備考:	0(a1).l	トラックバッファの使用容量
	4(a1).l	ＡＤＰＣＭバッファの使用容量
	8(a1).l	汎用ワークエリアの使用容量
--------------------------------------------------------------------------------
