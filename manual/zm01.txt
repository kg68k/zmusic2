
	    ＭＥＡＳＵＲＥ  １
		イントロダクション


  ここではＺＭＵＳＩＣシステムの概要を簡単に説明します。









１．１．  はじめに


  コンピュータミュージックを楽しむには幾つかの方法があります。

１．  実際に弾いたものをコンピュータ、シーケンサのメモリに記憶しておくもの

２．  コンピュータ、シーケンサのメモリに直接演奏データを書き込んでいくもの

３．  １． と２． の複合的な方法

などです。２．はコンピュータのキーボードを叩くことから「打ち込み」と

呼ばれます。３．はつまり、人間が弾いたものを後でコンピュータを用いて

修正するといったものです。

  ちょっと昔までは３．の方法が圧倒的にメジャーでしたが、音源の進歩と

ミュージック・ツールの進化により最近は２．の方法もメジャー化してきています。

最近は譜面も起こさずに直接「打ち込み」を始める作曲者も少なくないようですし、

スタジオのマニピュレータ(平たくいえば打ち込み人)の中には実際に弾いた

ものよりも人間臭さを表現する人もいるとききます。

  さて、本書でお話しするのは２．の方法です。２．の方法の魅力といえば、

自分が楽器の演奏が出来なくてもイメージ通りの演奏が可能という点でしょう。

さらに、一度仕上げた曲は、ディスクなどの記憶装置に保存しておけばいつでも

再現可能というのもこの方法の魅力です。

  打ち込みの方法にも実は色々な方法があります。一番原始的なものとしては

完全な数値入力です。音階、発音時間、など全てをこまごまと入力していくものです。

最近は「ステップ入力」と呼ばれます。数年前にＭＺやＰＣ８００１用に出ていた

ローランドＣＭＵ８００シリーズはこの方法でした。これを進化させものが

譜面入力による「打ち込み」です。要するに五線譜に音符を置いていくタイプの

ものですね。楽器の演奏はおろか譜面を読むことが出来ない人にでも簡単に音楽を

作ることが出来るため初心者層には圧倒的な人気を誇ります。また印刷機能が

充実していれば美しい譜面を得ることが出来ますので、プロでもこのタイプを

使っている人が多くいます。

  さて、「ＺＭＵＳＩＣ」では現在（注）ＭＭＬという「打ち込み」方式を

採用しています。これはいわば「音楽記述言語」というもので

「音楽をプログラム」するというイメージが正しいでしょう。完全な数値入力よりは

ずっとドキュメント性が高い上、入力する量も少ないのでパソコンを基盤として

音楽を楽しむ人にはピッタリのものといえます。欠点としては、小中学校程度の

音楽知識が必要なこと、ある程度コンピュータを扱える人（ＤＩＲやＣＯＰＹが

分かればＯＫ！）でないと駄目なこと、ドキュメント性が譜面入力よりは低いこと、

などです。まあ、ドレミが読めて、ディスクをフォーマットしたことが

あれば素質十分です。

  ＭＭＬの利点としては、慣れればあらゆる方式よりも高速に一曲を仕上げることが

出来ること、細かいニュアンスなどに凝ることが出来るなどが挙げられます。

また、移植性が高い点も見逃せません。殆ど方言のような感覚で他の機種の

演奏データや他の音楽ドライバ用のデータを、自分の使っているＭＭＬに

修正利用することが出来るのです。

  さあ、「ＺＭＵＳＩＣ」を懸け橋にしてあなたもコンピュータ・ミュージックの

世界に浸りませんか。

（注）今後、違った入力方式に対応した支援プログラムが発表されれば、

別の入力方式（例えば譜面入力方式）も可能です。


１．２．  ＺＭＵＳＩＣ．Ｘとは


  ＺＭＵＳＩＣ．ＸとはＸ６８ｋ本体付属のＯＰＭＤＲＶ．Ｘを改造したりするもの

ではなく、全く新しくゼロから開発されたミュージックプログラム開発言語です。

Ｘ６８ｋの内蔵音源であるＦＭ音源８声とＡＤＰＣＭ１声（PCM8.X  (C) H.ETOHを

使用すれば８声まで）、ＭＩＤＩインターフェースが接続されていれば

ＭＩＤＩ楽器も同時にコントロールする事が出来ます。

  一般の他のドライバでは１つのＭＩＤＩ楽器をＸ６８ｋの外部音源という感じで

扱っていましたが「ＺＭＵＳＩＣ．Ｘ」ではＸ６８ｋをホストに複数の

ＭＩＤＩ楽器をコントロールする事が出来るように設計されているのでどんどん

自分のＭＩＤＩシステムを広げていくことが可能です。

  ここでＺＭＵＳＩＣ．Ｘの特長を列挙してみます。

１．  ＯＰＭＤＲＶ．Ｘに上位コンパチ

２．  ＦＭ音源，ＡＤＰＣＭ，ＭＩＤＩ楽器を同時に演奏可能

３．  もちろんＭＩＤＩ楽器を持っていない人でも多彩なコマンドを内蔵音源に
      対して使用可能

４．  汎用トラックを80本持ち、その内最大32トラックを同時に演奏可能

５．  ＡＤＰＣＭを音階ＭＭＬでコントロール可能。独自のＡＤＰＣＭドライバ搭載

６．  ポルタメントやオートベンド、和音やＬＦＯなどの特殊コマンド系が
      ＦＭ／ＭＩＤＩの両方で使用可能

７．  ＡＤＰＣＭコンフィギュレーションファイルで、ＡＤＰＣＭデータの音程と
      ボリュームが変更可能。合成、エンベロープの変更も可能

８．  任意の時間に演奏中の任意のトラックに任意の演奏データを割り込ませて
      演奏することが可能（効果音モード）

９．  演奏処理がＯＰＭＤＲＶ．Ｘの平均３倍以上高速。さらにテンポずれが
      起こりにくい設計

１０．ＭＴ３２の他にＵ２２０／Ｍ１／ＳＣ５５等に対応した楽器個別の
      コマンドを装備

１１．ＭＩＤＩ楽器側の音色や設定をファイルに吸い出す機能を装備

１２，オブジェクトレベルの演奏データを得ることが可能（コンパイル機能）

１３．あらゆる命令が機械語レベルで操作可能。ゲーム等のＢＧＭドライバとして
      威力を発揮

１４．専用Ａ／Ｄコンバータによってサンプリングされた高音質のＡＤＰＣＭデータ
      ライブラリの標準装備

１５．全情報公開。ライセンスフリー

１６．ＰＣＭ８．Ｘ  (C)江藤  啓に完全対応。ＡＤＰＣＭ音を最大同時に８声まで
      シーケンス可能

１７．複数のX68000による同期演奏

とまあ、大袈裟なところもありますがこんな感じてす。

  同人ソフトなどの製作者やグループにとっては8, 9, 12, 13, 15辺りが

魅力でしょうか。



１．３．  著作権について


  法律上、日本では著作権の放棄ができませんので、著作権は作者西川善司に

保留されます。しかし、プログラムの性質上、「ＺＭＵＳＩＣ．Ｘ」のオリジナルを

開発した私西川善司は「ＺＭＵＳＩＣ．Ｘ」及びこれらを支援するプログラム

(サブルーチンを含む)全ての使用権に関するライセンス権を放棄します。

よってとくに断らずに商的利用が出来ます。つまり市販だろうが同人だろうが勝手に

「ＺＭＵＳＩＣ．Ｘ」を組み込んだソフトを売ってもいいということです。

  ただし、一つだけ守って欲しいことがあります。それは「ＺＭＵＳＩＣ．Ｘ」の

改造についてです。改造は勿論各自に自由で行って構わないのですが、

データの完全な互換性が保持されないような改造を施した際には

バージョンＩＤ番号を＄Ｆ０以上にして欲しいのです（オリジナルは＄２０です。

ソースリストZMSC.HAS参照）。また、オリジナルのＺＭＵＳＩＣ．Ｘで演奏できない

データフォーマットにした場合はファイルの拡張子も変更しておいて下さい。

これは混乱を防止するためです。今後のバージョンアップ版との兼ね合いも

ありますし、とにかく改造を施したものではオリジナルバージョン用のデータを

頭っからはじいて欲しいのです。是非ご協力下さい。

  移植に関しても自由に行って構いません（ただし、完全にコンパチでない場合は

バージョン番号をやはり＄Ｆ０以上にして下さい）。移植版をＯｈ！Ｘ編集部へ

送ってくれればＵＳＥＲ’Ｓ  ＷＯＲＫ等のコーナーで紹介したいと思います。


１．４．  ＺＭＵＳＩＣ．Ｘの概要(ＺＭＤ,ＺＭＳとは)


  ＺＭＵＳＩＣ．Ｘ上で演奏するデータを作るためには２通りの開発方法が

あります。

  １つは「ＭＵＳＩＣＺ．ＦＮＣ」を組み込んだＸ－ＢＡＳＩＣ上で

開発する方法です(MEASURE3参照)。基本的には「ＭＵＳＩＣＺ．ＦＮＣ」に

設けられたＺＭＵＳＩＣ．Ｘ制御命令を記述していくことにより演奏プログラムを

作成していきます。同じ処理を繰り返したい時は「for～next｣、条件分岐を

させたいなら「if ～ then ～」…‥というようにＸ－ＢＡＳＩＣに用意された

多彩な命令を折り混ぜて開発を行うことができます。また、文字変数などを

うまく使えば少ない手間で長い曲も作れそうです。さらに、曲データ以外の

音楽関係のツール、たとえば音色エディタ等も作ることができるでしょう。

  ２番目の方法はCOMMAND.X上からエディタを使ってＭＭＬファイルを作成する

方式です(MEASURE4参照)。ＺＭＵＳＩＣシステムではこのＭＭＬファイルを、

拡張子'.ZMS'を付けることを前提に特にＺＭＳファイルと呼ぶことにします。

この形式ではＺＭＳコマンド(MEASURE4参照)と呼ばれるＺＭＵＳＩＣ．Ｘ制御命令を

一行一行に記述していくことで演奏プログラムを作成していきます。

Ｘ－ＢＡＳＩＣのような制御文はないので一見開発が不便そうですが、

エディタに備えられたマクロ機能や複写機能を駆使すればＢＡＳＩＣ以上の

開発環境になりえます。また、Ｘ－ＢＡＳＩＣで作られた演奏プログラムも

このＺＭＳファイルに変換することができます。これには'm_switch()'命令を

使用します(MEASURE3参照)。

  実はＸ－ＢＡＳＩＣで記述された演奏プログラム、エディタによって記述された

ＺＭＳファイルがＺＭＵＳＩＣ．Ｘへ受け渡されるとＺＭＵＳＩＣ．Ｘは内部で

$47,$30,$30…のような16進数のデータ列で構成されたオブジェクトに変換しています。

演奏しながらいちいち命令語を認識していたのでは処理が追い付きませんから、演奏直前に

必要な計算を全て済ませてしまうわけです。Ｘ－ＢＡＳＩＣで記述された

演奏プログラム、エディタによって記述されたＺＭＳファイルを演奏する時、

ほんの一瞬ですが待たされますが、この時そのオブジェクト・データへ変換して

いるのです。ＺＭＵＳＩＣシステムではこのオブジェクト・データを特に

ＺＭＤデータと呼ぶことにします。

  通常はＺＭＤデータを意識する必要はないのですが、あえてこのＺＭＤデータを

取り出す方法があります。ＺＭＵＳＩＣ．Ｘに備わっているコンパイル機能がそれです。

具体的には

A>zmusic -c ＺＭＳファイル名

のようにします(ＺＭＵＳＩＣ．ＸはアセンブラやＣコンパイラのようにも機能します)。

するとＺＭＳファイルの主ファイル名に拡張子'.ZMD'を添付したファイルが

生成されます。これをＺＭＵＳＩＣシステムでは特にＺＭＤファイルと呼びます。

  このＺＭＤファイルも演奏可能で、その際は当然ＺＭＤデータに変換する作業が

ありませんので全く待たされずに演奏が開始されます。高速応答が要求される場合

(たとえば自作ゲームに曲を入れる場合など)は演奏データをＺＭＤデータで

管理した方がよいでしょう。ただし、データや環境の変更が困難ですので、

音楽データの配布を目的とした場合はＺＭＤデータ形式は避けるべきです。

