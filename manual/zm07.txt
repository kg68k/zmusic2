
	    ＭＥＡＳＵＲＥ７
	    プレイヤーＺＰ．Ｒ


  ここではＺＭＵＳＩＣ．Ｘ支援ツールのサンプルとして作成した

プレイヤー「ＺＰ．Ｒ」について解説します。









７．１．  ＺＰ．Ｒについて


  ＺＭＵＳＩＣ．Ｘは

A>copy  ファイルネーム  opm

とすることでコマンドラインから演奏データの演奏を行える。また、

A>copy con opm

としたあと、ＺＭＳコマンドを入力することによって演奏の停止や継続、

再演奏などの制御を行うことが出来る。これらの演奏制御をより快適に、

手軽に行えるようにするために開発されたのがＺＰ．Ｒである。

  ＺＰ．Ｒは演奏ツールとしての機能の他に「ジュークボックス機能」や

「トータルステップカウントの計算」「キーボードによるリアルタイム演奏制御機能

(デバッグツール)」などの機能が備わっている。


７．２．  コマンドスイッチについて


●演奏制御
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｐ 演奏データ・ファイルネーム,セットアップファイル１,…,セットアップファイル４


  演奏データをディスクから読み込んで演奏する。演奏データのファイル名の後ろに

','で区切って最高４つまでのセットアップファイルを演奏前に読み込み、実行が可能。

セットアップファイルとは、例えばＡＤＰＣＭデータのコンフィギュレーション・ファイル、

ＡＤＰＣＭのブロックデータ、ＭＩＤＩダンプデータ(ＭＤＤ)などのこと。（セットアップ

ファイルのＭＩＤＩダンプデータは拡張子'.MDD'の時のみ有効）

  セットアップファイルの拡張子は省略出来ないが演奏データの方は拡張子を省略でき、

その場合は'.ZMD'→'.ZMS'→'.OPM'の順で自動添付してファイルを検索する(見つから

なかった場合はエラー)。

例
  A>zp -p music.zms, drum.cnf, u220_seup.mdd
  A>zp -p etude

  スイッチ'－Ｐ'は省略することもでき、上の例は

  A>zp music.zms, drum.cnf, u220_seup.mdd
  A>zp etude

とすることも可能。

  さらに、演奏データを省略してＺＰＤやＭＤＤ、ＡＤＰＣＭコンフィギュレーション

ファイルといったセットアップファイルのみの実行も可能である(拡張子の省略は

できない)。ＺＰＤとＡＤＰＣＭコンフィギュレーション・ファイルは曲が演奏中で

あっても実行可能なので、演奏中の曲のＡＤＰＣＭのセットをリアルタイムに

変更することができる。

例
  A>zp list.cnf       (ＡＤＰＣＭコンフィギュレーション・ファイルlist.cnfを
		      実行する)
  A>zp drum_set.zpd   (ＺＰＤファイルdrum_set.zpdを登録する)
  A>zp M1preset.mdd   (ＭＤＤファイルM1preset.mddを楽器へ転送する)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｐn1,n2,n3,…ni


  演奏を開始する。コマンドスイッチの後ろにトラック番号(1≦ni≦80)を書くと

そのトラックのみ演奏を開始する。トラック番号は横につなげていくつでも

書くことが出来る。また、トラック番号を書かずにコマンドスイッチのみを

指定した場合は演奏可能な全てのトラックの演奏を開始する。

例
  A>zp -p            (全トラック演奏開始) 
  A>zp -s1, 2, 10    (トラック1, 2, 10の演奏を開始する)

  (MEASURE3 m_play(), MEASURE4 (P)コマンド参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｓn1,n2,n3,…ni
－Ｃn1,n2,n3,…ni


  それぞれ演奏の停止、再開を行う。

コマンドスイッチの後ろにトラック番号(1≦ni≦80)を書くとそのトラックに対して

機能する。トラック番号は横につなげていくつでも書くことができる。

  また、トラック番号を書かずにコマンドスイッチのみを指定した場合は演奏中の

全トラックに対して機能する。

例
  A>zp -s            (全トラック演奏停止)
  A>zp -c            (全トラック演奏再開) 
  A>zp -s1, 2, 10    (トラック1, 2, 10の演奏を停止する)
  A>zp -c1, 2, 10    (トラック1, 2, 10の演奏を再開する)

  (MEASURE3 m_stop(), m_cont(), MEASURE4 (S)コマンド, (C)コマンド参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●チャンネル・マスク
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｅn1,n2,n3,…,ni


  指定チャンネルのみを演奏しそれ以外のチャンネルの演奏をマスクする。

チャンネル番号はＰＣＭ８モードでない時は1≦ni≦25、ＰＣＭ８独立チャンネルモード

では1≦ni≦32となる。チャンネル番号をすべて省略した場合は、マスクを総て解除

(全チャンネル演奏可能に)する。実行はリアルタイムに行うことができ、

演奏中の曲の任意のチャンネルをマスクしたり解除したりすることが可能。

例
  A>zp -e1, 2, 3      (チャンネル1～3以外をマスクする)
  A>zp -e             (全チャンネルのマスクを解除する)

  チャンネル表現にFM1～8, ADPCM1～8, MIDI1～16といった表記もできる。

例
  A>zp -efm1, adpcm2, midi3

  (MEASURE3 m_solo(), MEASURE4 (E)コマンド参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｍn1,n2,n3,…,ni


  指定チャンネルの演奏をマスクする。それ以外のチャンネルは通常演奏を行う。

チャンネル番号はＰＣＭ８モードでない時は1≦ni≦25、ＰＣＭ８独立チャンネルモード

では1≦ni≦32となる。チャンネル番号をすべて省略した場合は、マスクを総て解除

(全チャンネル演奏可能に)する。実行はリアルタイムに行うことができ、

演奏中の曲の任意のチャンネルをマスクしたり解除したりすることが可能。

例
  A>zp -m1, 2, 3      (チャンネル1～3をマスクする)
  A>zp -m             (全チャンネルのマスクを解除する)

  チャンネル表現にFM1～8, ADPCM1～8, MIDI1～16といった表記もできる。

例
  A>zp -efm1, adpcm2, midi3

  (MEASURE3 m_mute()参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●出力レベルの変更
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｆn


  フェード・イン／アウトを行う。－85≦n≦－1のときフェード・イン、

1≦n≦85のときフェード・アウトの指定となり、数値の絶対値が大きいほど音量の

増減スピードは速くなる。n＝0はフェード・イン／アウトの停止。

  パラメータを省略した場合はデフォルト値のスピードでフェード・アウトを行う。

例
  A>zp -f20    (フェード・アウトをフェード・アウト・スピード20で行う)
  A>zp -f-16   (フェード・インをフェード・イン・スピード16で行う)
  A>zp -f0     (フェード・イン／アウトを中断する)
  A>zp -f      (デフォルトスピードでフェード・アウトを行う)

  (MEASURE3 m_fadeout(), MEASURE4 (F)コマンド参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｏlv,n1,n2,…,ni


  指定チャンネルの出力割合を設定する。

  lvは出力音量の割合で、設定範囲は0≦lv≦128。128が最大音量かつ基本状態。

lvの値が小さいほど音量も小さくなる。lvによって決定づけられる実際の音量は各楽器や

音源によって違うので注意(ＦＭ音源ではlv＝80付近でほとんど無音状態になる)。

  niは出力割合lvの設定を行うチャンネル番号。チャンネル番号は

ＰＣＭ８モードでない時は1≦ni≦25、ＰＣＭ８独立チャンネルモードでは1≦ni≦32

となる。lvのみを設定し、チャンネル番号をすべて省略した場合は、全チャンネル

が出力レベルlvに設定される。

  全パラメータを省略した場合は、全チャンネルの出力割合を基本状態(lv＝128)へ戻す。

  実行はリアルタイムに行うことができ、演奏中の曲の任意のチャンネルの出力割合を

変更することが可能。

例
  A>zp -o110, 1, 2, 3  (チャンネル1, 2, 3の出力割合を110/128に設定する)
  A>zp -o96            (全チャンネルの出力割合を96/128に設定する)
  A>zp -o              (全チャンネルの出力割合を通常状態(128/128)に戻す)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●初期化
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｉ


  ＺＭＵＳＩＣの演奏ワークやＦＭ音源やＭＩＤＩ楽器等を初期化する。曲が演奏中

であれば演奏を停止してから処理を行う。

例
  A>zp -i

（MEASURE3 m_init(), MEASURE4 (I)コマンド参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●トータルステップタイムの計算
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｑ
－Ｑ演奏データ・ファイルネーム


  '－Ｑ'で、演奏中やその時点でＺＭＵＳＩＣのトラックバッファに格納されている

演奏データのステップタイムの合計値を計算し表示する。ファイル名を後ろに付ければ

それを読み込みバッファに格納してから合計値を計算する。

  [do]～[loop]以外で(例えば[coda]～[tocoda]によって)無限ループを構成している

曲に対してこれを実行すると無限に計算を繰り返してしまう(NMIを押すしかない)。

  なお、

  トラック番号：ループ外の総カウント数  ループ内の総カウント数

というフォーマットで出力される（16進数）。

例
  A>zp -q
  A>zp -qmusic.zmd

 (MEASURE3 m_total(), MEASURE4 (Q)コマンド参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＭＩＤＩダンプデータ（ＭＤＤ）制御
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ａ


  ＭＩＤＩ楽器からのデータを受信するためにＺＭＵＳＩＣを待機状態にする。

 (MEASURE3 m_rec(), MEASURE4 (R)コマンド, MEASURE9参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ａファイルネーム


  '－Ａ'として取り込んだ楽器のデータをファイルにセーブする。拡張子省略時は

'.MDD'が自動的に添付される。ＺＭＵＳＩＣではこのファイルをＭＩＤＩダンプデータ

(ＭＤＤ)と呼ぶ。

 (MEASURE3 m_save(), MEASURE9参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｘファイルネーム


  '－Ａ'スイッチで作成したＭＩＤＩダンプデータを楽器へ転送する。拡張子を省略すると

'.MDD'が自動添付される。

例
  A>zp -xu220.mdd

 (MEASURE3 m_trans(), MEASURE4 .MIDI_DUMP命令, MEASURE9参照)
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ジュークボックス機能
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｊインデックスファイル,セットアップファイル１,…,セットアップファイル４


  '－Ｊ'を設定してその後ろにインデックスファイル(後述)の名前を書くとこれを読み込み

このファイルに書かれた演奏データを読み込み、これらを次々に演奏する(ジューク

ボックス機能)。インデックスファイルの拡張子を省略した場合は、拡張子'.JUK'が

自動添付される。

  演奏開始指定のスイッチ'－Ｐ'と同様に４つまでセットアップファイルを指定すれば、

ジュークボックス開始前に、これらをまず実行することが出来る。

例
  A>zp -jINDEX,MT32SOUND.MDD

  また、ジュークボックス機能実行中には以下のキー操作が可能となる。

	[SHIFT]＋[OPT.1]	次の曲へ
	[SHIFT]＋[OPT.2]	フェードアウトして次の曲へ
	[SHIFT]＋[CTRL]		演奏の一時停止／再開
	[SHIFT]＋[XF4]		再演奏
	[SHIFT]＋[XF5]		フェードアウトして再演奏
	[CTRL]＋[OPT.1]		前の曲へ
	[CTRL]＋[OPT.2]		フェードアウトして前の曲へ


●インデックスファイル

  インデックスファイルは

      繰り返し回数(1～255)，演奏データファイル名

の書式をとる。ＺＰ．Ｒのジュークボックス機能では最大６４曲までの演奏データの

登録ができる。

  演奏データはＺＭＤのみ有効。演奏データファイル名の拡張子は省略可能で、

省略時は'.ZMD'が自動添付される。

  繰り返し回数は省略可能で省略時は繰り返し回数＝１が自動設定される。

  インデックスファイルに書かれた最後の曲の演奏を完了すると最初の曲へ戻る。

例
  2,ETUDE
  3,PRELUDE
  FUGE
  ('ETUDE.ZMD'を２ループ演奏し、次に'PRELUDE.ZMD'を３ループ演奏し、最後に
  'FUGE.ZMD'を１ループ演奏して、これが終了すると初めの'ETUDE.ZMD'へ戻る)


  なお、ジュークボックス演奏させるＺＭＤには以下の条件がある。

１．無限ループは[do]～[loop]命令を使用している場合のみ有効。

２．ジュークボックスで演奏させる曲データには、ＺＰＤ指定('.adpcm_block_data')

    以外のＡＤＰＣＭデータ登録命令が存在してはならない(例えば'.adpcm_list'命令

    や'.Onk ファイルネーム,Pp,Vv,Mm,d,Cc,s,R,Ff,l'命令)。


●キー定義の変更

  キーと機能の対応は上記のようにデフォルトでは定められているが、これを環境変数

'zp_jukectrl'にキービットマップ値を列記することによってユーザーの好みに変更可能

である。

set zp_jukectrl=<次の曲へ#1, 次の曲へ#2>
		<フェードアウト&次の曲へ#1,フェードアウト&次の曲へ#2>
		<停止/再開#1, 停止/再開#2>
		<再生#1, 再生#2>
		<フェードアウト&再生#1,フェードアウト&再生#2>
		<前の曲へ#1, 前の曲へ#2>
		<フェードアウト&前の曲へ#1,フェードアウト&前の曲へ#2>

キー例

	[SHIFT]=$E0 [CTRL]=$E1 [OPT.1]=$E2 [OPT.1]=$E3
	[XF1]=$A5 [XF2]=$A6 [XF3]=$A7 [XF4]=$B0 [XF5]=$B1

設定例

set zp_keyctrl=$e2,$b1  $e3,$b1  $e3,$b1  $e3,$e0  $e2,$e0  $e3,$a7  $e0,$a6
		  ↑
	「次の曲へ」は[OPT.1]+[XF5]を意味する


●注意

・インデックスファイルに指定されている曲やその曲が使用するデータは

ジュークボックス機能開始前に読み込んでしまうため、多くのメモリを消費する。

しかし、ジュークボックス機能では、演奏データやその他の必要データを

先読みしてしまうため、ＺＭＵＳＩＣ．Ｘが確保した各バッファを一切使用しない。

よってＺＭＵＳＩＣ．Ｘ側の各バッファの大きさはいくらでも構わない。

A>zmusic -t0 -p0 -w0   (トラックバッファ、ＡＤＰＣＭバッファ、ワークエリア＝0)

として常駐しても問題なくジュークボックス機能は実行できる。

・処理の都合上、後述のデバッグ・ツールとの併用はできない(一度後述の

'-R'スイッチにて終了する必要がある)。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●デバッグ・ツール機能
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｄ


  ＺＰ．Ｒが常駐し以降、以下のキー操作が可能となる(デバッグ・ツール)。

	[SHIFT]＋[OPT.1]	一時停止
	[SHIFT]＋[OPT.2]	一時停止解除
	[SHIFT]＋[XF5]		早送り(押している間有効)
	[SHIFT]＋[XF4]		REPLAY
	[SHIFT]＋[XF3]		低速演奏(押している間有効)
	[SHIFT]＋[XF1]		フェードアウト
	[SHIFT]＋[XF2]		フェードイン

例
  A>zp -d


●キー定義の変更

  キーと機能の対応は上記のようにデフォルトでは定められているが、これを環境変数

'zp_keyctrl'にキービットマップ値を列記することによってユーザーの好みに変更可能

である。

set zp_keyctrl=<再生#1, 再生#2> <停止#1, 停止#2> <再開#1, 再開#2>
		<早送り#1, 早送り#2> <低速#1, 低速#2>
		<フェードアウト#1, フェードアウト#2>
		<フェードイン#1, フェードイン#2>

キー例

	[SHIFT]=$E0 [CTRL]=$E1 [OPT.1]=$E2 [OPT.1]=$E3
	[XF1]=$A5 [XF2]=$A6 [XF3]=$A7 [XF4]=$B0 [XF5]=$B1

設定例

set zp_keyctrl=$e2,$b1  $e3,$b1  $e3,$b1  $e3,$e0  $e2,$e0  $e3,$a7
		  ↑
	「再生」は[OPT.1]+[XF5]を意味する


●注意

  処理の都合上、ジュークボックスとの併用はできない(一度後述の'-R'スイッチにて

終了する必要がある)。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●常駐解除
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｒ


  '－Ｊ','－Ｄ'はＺＰ．Ｒがシステムに常駐するので、機能を停止するためには

常駐解除を行わなければならない。'－Ｒ'を設定するとＺＰ．Ｒがシステムに常駐

していた場合常駐解除の処理を行う。ただしＺＰ．Ｒが常駐していないのにこの

スイッチを設定するとエラーとなる。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●同期演奏機能
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
－Ｗ 演奏データ・ファイルネーム,セットアップファイル１,…,セットアップファイル４


　－Ｐと同じく演奏開始の機能で設定パラメメータ－Ｐと同様。セットアップファイルの

実行後、演奏は開始せず、ＭＩＤＩデータの$FA(スタートメッセージ)を受信するまで

待機状態になる。$FAを受信すると即座に演奏を開始する。

┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃			複数のＸ６８による同期演奏			      ┃
┃									      ┃
┃０．ＺＭＵＳＩＣを/Eオプションを設定して常駐する			      ┃
┃									      ┃
┃１．Ｘ６８－ＡのＭＩＤＩ　ＯＵＴからＸ６８－ＢのＭＩＤＩ　ＩＮへつなぐ      ┃
┃									      ┃
┃２．Ｘ６８－ＢのＭＩＤＩ　ＯＵＴを楽器１へつなぐ			      ┃
┃									      ┃
┃３．Ｘ６８－ＢのＭＩＤＩ　ＴＨＲＵを楽器２へつなぐ			      ┃
┃									      ┃
┃４．Ｘ６８－Ｂを							      ┃
┃									      ┃
┃	A>ZP /W filename						      ┃
┃									      ┃
┃　　として演奏待機状態にする						      ┃
┃									      ┃
┃５．Ｘ６８－Ａを							      ┃
┃									      ┃
┃	A>ZP filename							      ┃
┃									      ┃
┃    で演奏開始する。							      ┃
┃									      ┃
┃ ※２台以上の場合はＸ６８－xのMIDI OUTをＸ６８－(x+1)のMIDI INへつないで    ┃
┃									      ┃
┃   いくか、Ｘ６８－xのMIDI THRUをＸ６８－(x+1)のMIDI INへつないでく２通りが ┃
┃									      ┃
┃   考えられるが実用的には４台までが限界と思われる。			      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
