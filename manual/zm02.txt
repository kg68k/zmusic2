
	    ＭＥＡＳＵＲＥ  ２
     ＺＭＵＳＩＣ．Ｘのオプション・スイッチ解説


  ここではＺＭＵＳＩＣ．Ｘのコマンドオプションについて解説します。







２．１．  はじめに


  ＺＭＵＳＩＣ．Ｘというプログラムには大きく分けて２つの機能が

ある。１つはシステムに常駐して音楽演奏をする機能、もう１つは前章で

述べたＺＭＤファイルの生成機能である。よってＺＭＵＳＩＣ．Ｘの

コマンドオプション／コマンドスイッチも大きく２つの機能に分けられる。

１つは常駐する際のパラメータとしての機能、もう１つは演奏データを

コンパイルする際にこれを支援するものである。

  各スイッチは「／」「－」の後ろにこれから解説するコマンドスイッチの

アルファベットを記述し、さらに必要であればその直後に数値等のパラメータを

記述することによって指定する。具体的には

A>zmusic －または／[各スイッチの英数字][パラメータ]

のようになる。スイッチは(例外を除いて)順不同でいくつでも記述することが

できる。また、

A>zmusic -h  または  -?

でコマンドスイッチの簡単な説明を見ることができる。

  それではそれぞれのスイッチを解説することにする。


２．２．  ドライバ組み込み時のスイッチ


－Ａ

    割り込みにタイマＡを使用する。デフォルトではタイマＢを使用する。

  タイマＡはテンポ77から300までを有効範囲とし、かなり正確なテンポを

  キープ出来る。外部シーケンサ／リズムマシンとの同期演奏にはこちらの

  モードを勧める。

  よく分からない人は特に設定する必要はない。


－Ｂファイルネーム

    ＡＤＰＣＭブロックデータ（ＺＰＤデータ）をドライバ起動時に読み込む。

  後述の'－Ｐ'スイッチでＡＤＰＣＭバッファのサイズを指定していない場合は自動的に

  そのブロックデータのサイズがバッファサイズになる。ファイルネームの

  拡張子を省略すると自動的に'.ZPD'が添付される（MEASURE6参照）。


－Ｅ

    外部シーケンサ／リズムマシンとの同期演奏を行う。Ｘ６８ｋをホストにした

  ＭＵＳＩＣシステムならばこのスイッチは設定する必要はない。複数のＸ６８ｋを

　同期させて演奏させるにはこのスイッチを設定すること。

  具体的には、演奏開始時にスタートメッセージ$FA、演奏再開時にコンティニュー

  メッセージ$FB、演奏停止時にストップメッセージ$FCを送信するようになる。

  また、演奏データ中で指定したテンポに合わせてタイミングクロック$F8を

  送信する。


－Ｇ

    ＺＭＵＳＩＣ．Ｘ起動時にロゴや常駐を報告するメッセージを表示しない。


－Ｍ

    ＭＦＰの多重割り込み対応モードにする。ラスタースクロール等の処理を

  ジャマしない。高度な割り込みを駆使したアプリケーションと併用する場合には

  このスイッチを指定すると良いだろう。通常やよく意味の分からない人は

  設定する必要は全くない。


－Ｎ

    初期化なしモードにする。このスイッチを指定してＺＭＵＳＩＣ．Ｘを

  常駐させると以後、演奏データの変り目等で楽器等やワークの初期化を

  行わない。これはゲーム等のＢＧＭを機械語レベルで演奏する時に

  曲の変り目の処理を軽くするためのものである。通常は設定する必要は

  ない。


－Ｏn

    ＰＣＭ８．Ｘが先に組み込んであることが前提のスイッチ。従来の

  ＡＤＰＣＭ１声の曲データをＰＣＭ８．Ｘを用いてむりやりポリフォニックで

  鳴らしてしまおうというものである。ただし、本来のＰＣＭ８モードとは

  違うものなので注意すること(２．５．参照)。パラメータのnは音楽演奏に８声ある

  ＡＤＰＣＭチャンネルを何声音楽用に確保するかを設定するものである。

  nは1≦n≦8でn省略時は自動的にn＝8が採択される。余ったチャンネル数は

  効果音専用とみなして音楽演奏には使用しない。例えば

  A>zmusic -o6

  とした場合、ＢＧＭ演奏用にチャンネル1～6をＢＧＭ専用にし

  チャンネル７，８を効果音専用とする。


－Ｐn

    ＡＤＰＣＭデータバッファとしてnキロバイト確保する。'－Ｐ'スイッチを

  設定しないとＡＤＰＣＭバッファサイズは256となる。0と設定した場合は、

  ＡＤＰＣＭに関係するコマンドは無効になる（MEASURE6参照)。


－Ｒ

    常駐しているＺＭＵＳＩＣ．Ｘをシステムから削除する。コマンドラインから

  常駐させた場合のみ有効で'CONFIG.SYS'から'DEVICE＝'で組み込んだ場合は

  常駐解除はできない。


－Ｓファイルネーム

    ＭＩＤＩのダンプデータ、ＡＤＰＣＭデータのコンフィギュレーションファイル

  などのセットアップファイルを読み込みドライバ起動時に実行する。

  ＡＤＰＣＭコンフィギュレーションファイル中、データの加工を行うように

  設定してある場合には必要分のワークを確保しないといけない(MEASURE6参照)。

  ファイルネームは拡張子等の省略は認められず、さらにＭＩＤＩダンプデータは

  拡張子'.MDD'の時のみ有効である。

    さて、ここに演奏データのファイル名を書けばドライバ起動時に曲を演奏させる

  ことも可能。もちろんその際、ＡＤＰＣＭを使用していたりするならば

  それらに関係するバッファも確保しなければならない。

  例

  A>zmusic -bdrum.zpd -w30 -p100 -s music.zmd


－Ｔn
＃n

    トラックバッファをnキロバイト確保する。デフォルトでは128キロバイト確保する。

  サイズの大きいデータを演奏する際には状況に応じて設定すべきである。


－Ｗn

    ワークエリアとしてnキロバイト確保する。ワークエリアはＡＤＰＣＭデータの加工や

  コンフィギュレーションファイルのバッファ、ＭＩＤＩ楽器の設定の取り込み用

  バッファ、波形メモリバッファと多目的に使用されるため、作業内容に応じて

  設定すべきである。ＡＤＰＣＭのデータ加工用のワークとして設定する場合の目安は、

  加工するデータのうち最長のものの長さを４倍した大きさである。


－Ｘn

    ＥＯＸ（エンド・オブ・エクスクルーシブ）メッセージを送った後、

     ｎ  
    ──
     60  秒

  のウェイトを与える。デフォルトは3で通常は設定する必要はないが、

  極端に応答の遅いＭＩＤＩ楽器に対しては設定するとよい(U110/220,D70…など)。


２．３．  ＣＯＮＦＩＧ．ＳＹＳからの組み込み


  ＺＭＵＳＩＣ．Ｘはデバイスドライバでもあるので、もちろん

ＣＯＮＦＩＧ．ＳＹＳから組み込むことが出来る。書式は他のデバイスドライバ

同様に

DEVICE＝ZMUSIC.X  オプションスイッチ…

のようにする。

  また

DEVICE＝ZMUSIC.X -s曲ファイル名

  のようにすればデバイスドライバ組み込み時から曲を流すことが出来る。

もちろん演奏に必要なバッファは取る必要がある。


２．４．  コンパイル支援系


－Ｃ ファイルネーム１  ファイルネーム２

 
   ファイルネーム１をコンパイルし生成されるオブシェクトをファイルネーム２で

  セーブする。ファイルネーム２は省略可能で省略時はファイルネーム１に

  拡張子'.ZMD'を付けたファイルネームでセーブされる。

  例

  A>zmusic -c music.opm   →   music.ZMD

    この’－Ｃ’スイッチは必ずコマンドラインの最後に書かなければならない。

  '－Ｃ'スイッチの後ろに書かれたスイッチは無視される。

  例

  A>zmusic -c music.opm -w100  ←'-w100'は無視される。

  また、大文字の’Ｃ’でこのスイッチを設定した場合は最適化処理

  (空トラックの削除処理)を行なわずに動作を行なう。


－Ｑ ファイルネーム１  ファイルネーム２

    コンパイル後その演奏データのトータルステップカウントを計算する。

  ＭＭＬ命令[do]～[loop]以外(例えば[coda]～[tocoda]など)を用いて無限ループを

  構成していると半永久的に計算を繰り返してしまうので注意。チェックサム的な

  役割を果たすためＯｈ！Ｘなどの雑誌メディアに投稿する際はこのトータルステップ

  カウントを原稿等に添えること。


－Ｔn
＃n

    トラックバッファを確保する。デフォルトで128キロバイト確保するが

  コンパイル中'out of memory'が出た時設定すると良いだろう。常駐時と

  同じイメージでコンパイルが行えるよう敢えてこういう仕様にした。


－Ｗn

    コンパイルされたデータを整理する際にこのエリアを使用する。デフォルトで

  128キロバイト確保しているので殆どの場合は設定する必要はない。

  極端に長い曲をコンパイルする際には設定の必要がある。


２．５．  ＰＣＭ８．Ｘモードについて


  ＰＣＭ８．Ｘとは江藤  啓氏により作成されたＸ６８ｋ本体の改造をせずに

ＡＤＰＣＭ音を８和音までリアルタイムに発音できるアプリケーションである。

このＰＣＭ８．Ｘを事前に組み込んでからＺＭＵＳＩＣ．Ｘを組み込むと

ＺＭＵＳＩＣ．Ｘは自動的にＰＣＭ８．Ｘモードで動作する。

ＺＭＵＳＩＣ．Ｘを組み込んだ後にＰＣＭ８．Ｘを組み込むことはできない(

エラーが発生する)。

  さて、ＺＭＵＳＩＣ．ＸのＰＣＭ８モードには２通りある。

  １つはＡＤＰＣＭ音源を８つのほぼ独立したチャンネルとして使用する

モードである。このモードにするにはＺＭＵＳＩＣ．Ｘを組み込む時に特別な

スイッチ等を設定する必要はない。このモードを特にＰＣＭ８独立チャンネル

モードと呼ぶことにする。

  もう１つはＰＣＭ８．Ｘを組み込んだあと'－Ｏ'スイッチをつけて

ＺＭＵＳＩＣ．Ｘを組み込むと設定されるモードである。これは

ＰＣＭ８．Ｘ用ではない曲、つまりＡＤＰＣＭ１声用の曲データのＡＤＰＣＭ音を

むりやりポリフォニックに演奏するモードである。例えばシンバルを

叩いた後このシンバルが鳴り終らないうちにスネアを叩いたとすると、

ＡＤＰＣＭ１声の従来の曲ではシンバルの音がブツリと切れてスネアの音に

切り替わっていた。ここをブツ切りにしないで（ＰＣＭ８．Ｘを用いて）

ちゃんと前後の音を重ねて演奏してしまおうというのがこのモードである。

このモードはＰＣＭ８ポリモードと呼ぶことする。

  ＰＣＭ８独立チャンネルモード時の具体的な操作方法に関しては後述する。


２．６．  ３タイプのＺＭＵＳＩＣ．Ｘ


　ＺＭＵＳＩＣには

●シャープ純正(または互換)のＭＩＤＩインターフェースに対応した標準的な

ＵＮＩＶＥＲＳＡＬバージョン

●ＲＳ２３２Ｃポートを使ってＭＩＤＩ出力を行うＲＳ２３２Ｃバージョン

●ネオ・コンピュータ・システム(ＮＣＳ)製のサブボード、ポリフォンを使用して

ＭＩＤＩ出力を行うＰＯＬＹＰＨＯＮバージョン

の３つのタイプが存在する。

  ３タイプとも内蔵音源(ＦＭ音源、ＡＤＰＣＭ音源)の制御部分は、全く同じ

プログラムで構成されており、違うのはＭＩＤＩ出力に関する点のみである。

３タイプともＸ６８０００／Ｘ６８０３０の両方に対応している。

●ＲＳ２３２Ｃバージョン

  ＲＳ２３２ＣバージョンはＸ６８本体後面パネルのＲＳ２３２Ｃ端子に市販の

ＲＳ２３２Ｃ－ＭＩＤＩアダプタ(例：COME ON MUSIC製 MA01 ￥10,000)を装着し、

これを使用してＭＩＤＩ制御を行うＺＭＵＳＩＣである。標準のＵＮＩＶＥＲＳＡＬ

バージョンとは以下の相違点がある。

・ＭＩＤＩ出力の処理速度がＵＮＩＶＥＲＳＡＬバージョンと比べて少し遅い。

・純正ＭＩＤＩインターフェース・ボードを装着していてもＲＳ２３２Ｃ－ＭＩＤＩを

強制的に選択する。

・外部同期モード(オプション'-E')がない。

┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃			ＲＳ２３２Ｃ版の注意				      ┃
┃									      ┃
┃  ＲＳ２３２Ｃ版はＲＳ２３２Ｃ関連の割り込みベクタ等を占有する	      ┃
┃									      ┃
┃アプリケーションとは共存できません。(RSDRV.SYSなど)			      ┃
┃									      ┃
┃  ベクタが占有されている時は						      ┃
┃									      ┃
┃The interrupt-vector has already been occupied by some other applications.  ┃
┃									      ┃
┃というエラーメッセージが表示され、ＺＭＵＳＩＣは起動されません。	      ┃
┃									      ┃
┃ベクタを占有しているアプリケーションを一度解除してからもう一度	      ┃
┃									      ┃
┃ＺＭＵＳＩＣを起動してください。					      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

●ＰＯＬＹＰＨＯＮバージョン

  ＰＯＬＹＰＨＯＮバージョンはサブボード「ポリフォン」をポリフォンに同梱の

プログラム「PCM8SB.X」で制御し、ＭＩＤＩ出力を行うＺＭＵＳＩＣである。

ＺＭＵＳＩＣの組み込みよりも先にポリフォンに同梱のプログラム「PCM8SB.X」を

組み込まなくてはＭＩＤＩ制御が行えない。PCM8SB.Xを組み込まずにＺＭＵＳＩＣ

のみを組み込んだ場合は内蔵音源の制御のみ可能となる。標準のＵＮＩＶＥＲＳＡＬ

バージョンとは以下の相違点がある。

・ＭＩＤＩ出力の処理速度がＵＮＩＶＥＲＳＡＬバージョンと比べて少し遅い。

・ＭＩＤＩインターフェース・ボードを装着していてもＰＯＬＹＰＨＯＮ－ＭＩＤＩを

強制的に選択する。

・ポリフォン－ＭＩＤＩによるＭＩＤＩ－ＩＮはサポートされない。

・外部同期モード(オプション'-E')がない。


２．７．　機能縮小版ＺＭＳＣ．Ｘ


  ＭＭＬコンパイル処理部分などを省いたＺＭＤ再生専用のＺＭＵＳＩＣが、

ＺＭＳＣ．Ｘである。ＺＭＳを扱う機能は全く持っていないため、ＺＭＳファイルを

演奏したりすることはできない。しかし、常駐サイズはＺＭＵＳＩＣ．Ｘの半分程度で

済むため、ゲームやその他のアプリケーションから使用する場合には適している。

  ＺＭＵＳＩＣ．Ｘ同様にＵＮＩＶＥＲＳＡＬバージョン、ＲＳ２３２Ｃバージョン、

ＰＯＬＹＰＨＯＮバージョンの３タイプがある。

　以下にＺＭＵＳＩＣ．ＸとＺＭＳＣ．Ｘとの相違点を述べる。

・ファンクション$01 m_alloc
  ファンクション$02 m_assign
  ファンクション$03 m_vget
  ファンクション$06 m_trk
  ファンクション$07 m_free
  ファンクション$3e set_fm_master_vol

はなんの機能も実行しない(削除されている)。

  ファンクション$3c get_play_workは、戻り値のd0.lが意味をなさなくなる

(a0.lにはZMUSIC.X同様の正しい戻り値を返す)。

・ファイル名'OPM'への出力による制御も行なえるが、ＺＭＤまたはＺＰＤ以外を

出力した場合は何の機能も実行しない(ＺＭＳコマンドの使用もできない)。

・ファイル名'MIDI'によるＭＩＤＩ楽器のデータ吸い取り機能はそのまま使用できる。

ＭＤＤの転送も行なえる。

・IOCS	_OPMDRVによるコントロールはできない。TRAP #3でのみファンクション

コールを実行できる。

・ＺＭＤの演奏やＺＰＤの変更登録はＺＭＵＳＩＣ．Ｘ同様にZP.Rで行なえる。

ただし、ＺＭＳの再生は行なえない。

・ＭＵＳＩＣＺ．ＦＮＣは使用できるが

'm_alloc'
'm_assign'
'm_vget'
'm_trk'
'm_trk2'
'm_free'
'fm_master'
'm_debug'

は、なんの機能も実行しない(削除されている)。

・デフォルトでトラックバッファを３２キロバイト、ワークエリアを０キロバイト、

ＡＤＰＣＭバッファを２５６キロバイト確保して常駐する。ＺＭＵＳＩＣ．Ｘとは

デフォルトが違うので注意すること。
