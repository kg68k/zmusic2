
	    ＭＥＡＳＵＲＥ  ４
	     ＺＭＳコマンド


  ここではＣＯＭＭＡＮＤ．Ｘ上から音楽プログラムを書くための書式、

つまりＺＭＳファイル（ＯＰＭファイル）の文法について解説します。








４．１．  ＺＭＳファイルとは


  ＺＭＵＳＩＣ．ＸではエディタからＭＭＬやコマンドを記述したファイルを

演奏することが出来る。これをＺＭＵＳＩＣシステムでは「ＺＭＳファイル」と

呼ぶ。Ｘ６８ｋ本体に付属している「ＯＰＭＤＲＶ．Ｘ」用の「ＯＰＭファイル」と

概念的には、ほとんど同じである。

  ＺＭＳファイルはＥＤ．Ｘなどのスクリーンエディタを使って、ここで解説する

「ＺＭＳコマンド」を記述することによって作成していく。

（ＺＭＳコマンド(Ｔn)以外のトラックに依存しないＺＭＳコマンドを特に

「共通コマンド／コモンコマンド」と呼ぶ）。ＭＵＳＩＣＺ．ＦＮＣに

揃っているコマンドは、ほとんどＺＭＳコマンドで記述することができ、

ＢＡＳＩＣの時と同じ感覚で曲を作ることが出来る。

  Ｘ－ＢＡＳＩＣ上で記述した音楽プログラムをＭＵＳＩＣＺ．ＦＮＣの

'm_switch()'コマンドを使用してから実行するとＺＭＳファイルを自動生成する

ことが出来る（MEASURE3参照）。ＺＭＳファイル形式はＣＯＭＭＡＮＤ．Ｘ

レベルから手軽に演奏出来たり、コンパイルすることも出来て便利なので、

Ｘ－ＢＡＳＩＣで作った曲をＺＭＳファイルにコンバートして管理するのも

良いだろう。


４．２．  コマンド解説を読むにあたって


  略しても良いパラメータはその旨を記述してあるがそれ以外は省略不可である。

コマンドは大文字小文字どちらで記述しても構わないが、ここでは説明の都合上

コマンド名を大文字、パラメータを小文字で記述している。

  '＊'を付けたものはパラメータを複数行に渡って記述出来る。それ以外の

コマンドではその１行で全てのパラメータを記述しなければならない。

  ＭＵＳＩＣＺ．ＦＮＣの外部関数命令と対応するものはそのコマンド名を

挙げてある。詳しいパラメータ範囲等はそちらの説明を参照すること。


４．３．  ＺＭＳファイル用コマンド


●初期化
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｉ)

  各種音源やＺＭＵＳＩＣ．Ｘ本体の初期化を行う。

通常はＺＭＳの先頭に書く。

ＭＩＤＩ楽器に対して初期化メッセージを送出する

（具体的な送信メッセージ内容に関してはMEASURE3のm_init()の項を参照）。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_init()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｚn)

  全音符の絶対音長を設定する。設定範囲は1≦n≦254。

(Ｉ)コマンドでデフォルト値192が自動設定される。通常は設定する必要はない。

ゲーム等のＢＧＭを制作する際、割り込みを軽くする目的で使うと良い。

192, 144, 128, 96といった数値を設定するのが一般的である。

（MEASURE3 m_count()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●トラック確保／チャンネルアサイン
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｍtr,sz)

  トラックtrにバッファサイズszバイト確保する。1≦tr≦80, 100≦sz≦65535。

例
  (m2,3000)           トラック２を3000バイト確保する

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_alloc()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ａch,tr)

  チャンネルchをトラックtrへアサインする。1≦ch≦25, 1≦tr≦80。

ＰＣＭ８モード時は26～32が実用可能。

チャンネル番号はベースチャンネル変更コマンドによって、その対象デバイスが

変動する（(Ｂn)コマンド参照）。

  chの部分に規定の文字列を指定することによって(Ｂn)コマンドの影響を

受けずに絶対的に指定することも可能である。

  具体的には
	FM1～8          ＦＭ音源チャンネル1～8
	MIDI1～16       ＭＩＤＩチャンネル1～16
	ADPCM           ＡＤＰＣＭ音源
	ADPCM1～8       ＰＣＭ８モード時
例
  (a1,2)          チャンネル１をトラック２へ割り当てる
  (aFM1,3)        ＦＭ音源チャンネル１をトラック３へ割り当てる。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_assign(),m_assign2()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｂn)

  ベースチャンネルを設定する。

0＝ＦＭ基準    1＝ＭＩＤＩ基準

n＝0を設定するとチャンネル番号1～8がＦＭ音源,9がＡＤＰＣＭ,10～25がＭＩＤＩになる。

n＝1を設定するとチャンネル番号1～16がＭＩＤＩ,17～24がＦＭ音源,25がＡＤＰＣＭになる。

  ただしＰＣＭ８モードの時は(Ｂn)の値によらずチャンネル番号26～32が

ＡＤＰＣＭチャンネル2～8に対応する。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_ch()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●演奏制御
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｐn1,n2,…,ni)または(Ｐ)

  演奏を開始する。

n1～はトラック番号で、1≦ni≦80。全パラメータを省略して

(Ｐ)のみでは全トラックの演奏を開始する。

例
  (p1,2,3)

（ZMDデータ作成時には全く無視されるコマンド）
（MEASURE3 m_play()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｓn1,n2,…,ni)または(Ｓ)

  演奏を停止する。

n1～はトラック番号で、1≦ni≦80。全パラメータを省略して

(Ｓ)のみでは全トラックの演奏を停止する。

例
  (s1,2,3)

（ZMDデータ作成時には全く無視されるコマンド）
（MEASURE3 m_stop()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｃn1,n2,…,ni)または(Ｃ)

  演奏を再開する。

n1～はトラック番号で、1≦ni≦80。全パラメータを省略して

(Ｃ)のみでは全トラックの演奏を再開する。

例
  (c1,2,3)

（ZMDデータ作成時には全く無視されるコマンド）
（MEASURE3 m_cont()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｅch1,ch2,…,chi)

  演奏中のチャンネルをリアルタイムにマスク／解除することができる。任意の個数の

チャンネル番号を書くことによって指定以外のチャンネルをマスクできる。

チャンネル番号は1≦chi≦25、ただしＰＣＭ８モード時は1≦chi≦32となる。

(Ｂn),'m_ch()'によってチャンネル番号と対象デバイスは変動する点に注意。

  後述のＺＰ．Ｒのオプションスイッチ'－Ｅ'と全く同様の機能。

例
  (e1,2)          チャンネル１,２以外をマスク

  必ず(Ｍtr,size),(Ａch,tr),'m_alloc()','m_assign()'以降に書くこと。トラック確保、

チャンネルアサイン前に記述しても意味を持たない。(Ｐ)などの直前に書くのが

スタンダードな使い方。

  ZP -DとしてＺＰ．Ｒを常駐させたあとに使用できる再演奏機能([SHIFT]＋[XF4])を実行した

時にも影響を与えるので、１つのチャンネルの演奏チェックを何度も行う時には便利。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_solo()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｆn)

  正数でフェードアウト、負数でフェードインを行うことができる。この指定を

行った時点から演奏中の全トラックがフェードイン／アウトし始める。

ただし、１トラックでもすでにフェードイン／アウトしていた場合は無視される。

－85≦n≦－1  フェードイン指定、絶対値が大きいほど音量増加スピードが速い
n＝0         フェードイン／アウトの解除
1≦n≦85    フェードアウト指定、絶対値が大きいほど音量の減衰スピードが速い

（ZMDデータ作成時には全く無視されるコマンド）
（MEASURE3 m_fadeout()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●開発補助
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｄn)

  [@],[!],[end]コマンドの有効無効化スイッチ。

n＝0で無効、n＝1で有効となる。

  コンパイル時のみ有効で演奏中に指定しても無意味。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_debug()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｑ)

  各トラックにセットされたＭＭＬの総ステップタイム数を計算し画面に出力する。

（ZMDデータ作成時には全く無視されるコマンド）
（MEASURE3 m_total()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●テンポ
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｏn)

  テンポnを設定する。

  設定後、１分間にn個の４分音符を演奏するようになる。20≦n≦300。ただし、

タイマーＡモードの時は77以下は強制的に77となる。

例
  (o120)

（MEASURE3 m_tempo()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＭＭＬの書き込み
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｔn1,n2,…,n8) 

  ＭＭＬをトラックn1～n8へ書き込む。１≦ni≦80。n2以降は省略可能。

m_trk(10,"abcde")は(t10)abcdeに相当する。

（MEASURE3 m_trk()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＦＭ音源の音色設定
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｖn,0,v1,v2,…,v55)                      ＊

  ＦＭ音源の音色設定を行う。

  nは定義する音色番号で1≦n≦200。

例
  (v1,0
/        AF  OM  WF  SY  SP PMD AMD PMS AMS PAN
	 60, 15,  2,  0,210, 40,  0,  2,  0,  3,  0
/        AR  DR  SR  RR  SL  OL  KS  ML DT1 DT2 AME
	 31,  5,  0, 12,  2, 30,  1,  2,  7,  0,  0
	 31,  5,  0, 12,  8,  6,  1,  2,  5,  0,  0
	 31,  5,  0, 12,  8, 28,  1,  2,  3,  0,  0
	 31,  5,  0, 12,  8,  6,  1,  2,  5,  0,  0)

（MEASURE3 m_vset()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(＠n,v1,v2,…,v55)                    	＊

  AL/FB分離形式によるＦＭ音源の音色設定。

  nは定義する音色番号で1≦n≦200。

例
	/        AR  DR  SR  RR  SL  OL  KS  ML DT1 DT2 AME
  (@1,           31,  0,  2,  0,  0, 21,  0,  1,  0,  0,  0
		 31,  0,  0,  8,  0,  3,  0,  3,  0,  0,  0
		 31,  0,  0,  8,  0,  3,  0,  1,  0,  0,  0
		 31,  0,  0,  8,  0,  3,  0,  1,  0,  0,  0
	/        AL  FB  OM PAN  WF  SY  SP PMD AMD PMS AMS
		  5,  7, 15,  3   0,  0,  0,  0,  0,  0,  0)

（MEASURE3 m_fmvset()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.FM_VSETn {v1,v2,…,v55}                    ＊

  AL/FB分離形式によるＦＭ音源の音色設定。

  nは定義する音色番号で1≦n≦200。

  機能とデータフォーマットは全く(＠)コマンドと同じである。

例
	/        AR  DR  SR  RR  SL  OL  KS  ML DT1 DT2 AME
  fm_vset1 {     31,  0,  2,  0,  0, 21,  0,  1,  0,  0,  0
		 31,  0,  0,  8,  0,  3,  0,  3,  0,  0,  0
		 31,  0,  0,  8,  0,  3,  0,  1,  0,  0,  0
		 31,  0,  0,  8,  0,  3,  0,  1,  0,  0,  0
	/        AL  FB  OM PAN  WF  SY  SP PMD AMD PMS AMS
		  5,  7, 15,  3   0,  0,  0,  0,  0,  0,  0}

（MEASURE3 m_fmvset()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＡＤＰＣＭコンフィギュレーション
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
n＝ファイルネーム,Pp,Vv,Mm,d,Cc,s,R,Ff,l

  ＡＤＰＣＭ音の登録。

	n＝設定音色番号(0～511)
	p＝ピッチシフトパラメータ(－12～12)
	v＝ボリュームパラメータ(1～100(原音量)～300)
	m＝ミキシングノート番号(0～511)
	d＝ミキシングディレイパラメータ(0～65535)
	c＝カット・オフセットパラメータ(0～65535)
	s＝カット・サイズ(0～65535)
	f＝フェードイン／アウト・オフセット(0～65535)
	l＝フェードイン／アウト・レベル(0～127)

  ファイルネーム以降は省略可能。詳しい使い方とパラメータの意味はMEASURE6参照。

（MEASURE3 m_pcmset()，MEASURE6参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.ADPCM_BANK n

  ＡＤＰＣＭ音の登録先のバンクを指定する。

  n＝バンク番号。1≦n≦4。

  '(I)'命令でデフォルト値１が設定される

（MEASURE6参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.Onk＝ファイルネーム,Pp,Vv,Mm,d,Cc,s,R,Ff,l

  ＡＤＰＣＭ音の登録。

	n＝オクターブ値(－1～9)
	k＝音階MML(abcdefg,#,＋,－)
	p＝ピッチシフトパラメータ(－12～12)
	v＝ボリュームパラメータ(1～100(原音量)～300)
	m＝ミキシングノート番号(0～511)
	d＝ミキシングディレイパラメータ(0～65535)
	c＝カット・オフセットパラメータ(0～65535)
	s＝カット・サイズ(0～65535)
	f＝フェードイン／アウトオフセット(0～65535)
	l＝フェードイン／アウトレベル(0～127)

  ファイルネーム以降は省略可能。登録先ノート番号やミキシングノート番号は

'.ADPCM_BANK'命令のバンク番号が考慮される。

  詳しい使い方とパラメータの意味はMEASURE6参照。

（MEASURE3 m_pcmset()，MEASURE6参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.ERASE m　
または，
.ERASE .Onk　　　 (.Oの'.'はあってもなくてもいい)

　　　 m＝ノート番号(０～511)
       n＝オクターブ値(-1～９)
       k＝音階MML(abcdefg，#，+，-)

　不要なAD PCMノートを削除する。

　ZPCNV.R専用の命令で，ZMS中に実行してもなんの機能も果たさない。

（MEASURE6参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.ADPCM_LIST ファイルネーム

  ＡＤＰＣＭデータのコンフィギュレーションファイルを読み込み実行する。

（MEASURE3 m_pcmcnf()，MEASURE6参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.ADPCM_BLOCK_DATA ファイルネーム

  ＡＤＰＣＭブロックデータ「ＺＰＤデータ」の読み込み、登録を行う。

拡張子省略時には'.ZPD'が自動添付される。

（MEASURE3 m_adpcm_block()，MEASURE6参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＭＩＤＩデータ出力
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｘn1,n2,…,ni)                  ＊

  ＭＩＤＩの生データを送信。ＭＵＳＩＣＺ．ＦＮＣの'm_out()'と

ほぼ同様のコマンドだがパラメータをいくつでも書くことが出来る(複数行に渡っても可)。

データは0≦ni≦255。256以上はその値を７ビットごとに分けて下位から送信される。

例
  8192→$00,$40
  32700→$3C,$7F,$01

（MEASURE3 m_out(), MEASURE9参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MIDI_DATA {n1,n2,…ni}               ＊

  ＭＩＤＩの生データの送信。

データは0≦ni≦255。256以上はその値を７ビットごとに分けて下位から送信される。

例
  8192→$00,$40
  32700→$3C,$7F,$01

（MEASURE3 m_dirout(), MEASURE9参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.EXCLUSIVE {n1,n2,…,ni}               ＊

  エクスクルーシブデータの送信。

  データは0≦ni≦127。128以上はその値を7ビットごとに分けて下位から送信される。

例
  255→$01,$7F
  8192→$00,$40
  32700→$3C,$7F,$01

（MEASURE3 m_exc(), MEASURE9参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.ROLAND_EXCLUSIVE dev,mdl {n1,n2,…,ni}        ＊

  ローランド系の楽器へエクスクルーシブメッセージを送る。

  詳しい使い方はMEASURE9参照。

  dev＝デバイスＩＤ, mdl＝モデルＩＤ

  エクスクルーシブ・ヘッダやチェックサム・バイトは自動生成して送信してくれる。

  データは0≦ni≦127。128以上はその値を7ビットごとに分けて下位から送信される。

例
  255→$01,$7F
  8192→$00,$40
  32700→$3C,$7F,$01

（MEASURE3 m_roland(), MEASURE9参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MIDI_DUMP＝ファイルネーム

  ＭＩＤＩダンプデータ「ＭＤＤデータ」(MEASURE9参照)を楽器へ送信する。

拡張子省略時には'.MDD'が自動添付される。

（MEASURE3 m_trans(), MEASURE9参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＭＩＤＩデータ入力
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
(Ｒ)

  ＭＩＤＩの生データを取り込み待機状態にする。

ミュージックプログラム中に記述しても意味を持たない。

詳しい使い方はMEASURE9を参照。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 m_rec(), MEASURE9参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＳＣ５５／ＳＣ１５５／ＣＭ３００／ＣＭ５００のＧＳパート専用命令
  パラメータの意味などは楽器のマニュアルあるいはMEASURE3を参照のこと
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_INIT id

  ＳＣ５５の初期化を行なう

  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

（MEASURE3 sc55_init()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_V_RESERVE id  {n1,n2,…,n16}      ＊

  ＳＣ５５の各パートのボイスリザーブを行う。

  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

  パラメータは必ず16個設定しなくてはならない。パラメータ各値の総和は24以内。

また、10番目のパラメータはリズムパートに相当する。

（SC55マニュアルp79, またはMEASURE3 sc55_v_reserve()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_REVERB id  {n1,n2,…,n7}         ＊

  ＳＣ５５のリバーブパラメータの設定を行う。

  id:ＳＣ５５のデバイスＩＤ（省略可能、初期値$10)

  パラメータは7個まで。

（SC55マニュアルp79, またはMEASURE3 sc55_reverb()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_CHORUS id  {n1,n2,…,n8}         ＊

  ＳＣ５５のコーラスパラメータの設定を行う。

  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

  パラメータは8個まで。

（SC55マニュアルp79, またはMEASURE3 sc55_chorus()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_PART_SETUP pt,id  {n1,n2,…,n119}          ＊

  ＳＣ５５のパートのパラメータを設定する。

  pt:パートナンバー(1≦pt≦16)省略不可(パートナンバー＝10はリズムパート)
  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

  パラメータは119個まで。

（SC55マニュアルp79～80, またはMEASURE3 sc55_part_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_DRUM_SETUP map,key,id  {n1,n2,…,n8}             ＊

  ＳＣ５５のドラムキットの設定を変える。

  map:マップナンバー(0,1)
  key:ノートナンバー(0≦key≦127)
  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

  パラメータは8個まで。

（SC55マニュアルp82, またはMEASURE3 sc55_drum_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_PRINT id "文字列"

  ＳＣ５５のコンソールに文字列を表示する。

  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

  文字列は32文字以内。

（MEASURE3 sc55_print()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SC55_DISPLAY id  {n1,n2,…,n16}                ＊

  ＳＣ５５のグラフィックディスプレイにドットパターンを表示する。

  id:ＳＣ５５のデバイスＩＤ(省略可能、初期値$10)

  パラメータは必ず16個。

例
  /画面に'善'を出す
  .sc55_display$10 {      %0001000000010000
  			  %0000100000100000
			  %0111111111111100
			  %0000000100000000
			  %0011111111111000
			  %0000000100000000
			  %0111111111111100
			  %0001000100010000
			  %0000100100100000
			  %1111111111111110
			  %0000000000000000
			  %0011111111111000
			  %0010000000001000
			  %0010000000001000
			  %0011111111111000
			  %0010000000001000}

（MEASURE3 sc55_display()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●ＭＴ３２／ＣＭ３２Ｌ／（ＣＭ６４／ＣＭ５００のＬＡパート）専用命令
  パラメータの意味などは楽器のマニュアルあるいはMEASURE3を参照のこと
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_INIT id

  ＭＴ３２の初期化を行なう

  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

（MEASURE3 mt32_init()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_P_RESERVE id  {n1,n2,…,n9}              ＊

  ＭＴ３２の各パートのパーシャルリザーブを行う。

  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

  パラメータは必ず9個、パラメータ各値の総和は32以内。
  9番目はリズムパート。

（MEASURE3 mt32_p_reserve()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_REVERB id  {n1,n2,n3}                 ＊

  ＭＴ３２のリバーブパラメータを設定する。

  id:ＭＴ３２のデバイスＩＤ(省略可能、初期値$10)

  パラメータは3個まで。

（MT32マニュアルp35, CM64マニュアルp30, またはMEASURE3 mt32_reverb()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_PART_SETUP id  {n1,n2,…,n9}             ＊

  ＭＴ３２の各パートのＭＩＤＩチャンネルを設定する。

  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

  パラメータは9個まで、9番目はリズムパート。
(パラメータはＭＩＤＩチャンネルなので1～16まで有効。17以上はパートOFFとみなす。)

（MT32マニュアルp35, CM64マニュアルp30, またはMEASURE3 mt32_part_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_DRUM_SETUP n,id  {n1,n2,n3,n4}           ＊

  ＭＴ３２のリズムキットの設定を変更する。

  n:変更対象ノートナンバー(24≦n≦87)
  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

  パラメータは4個まで。

（MT32マニュアルp35, CM64マニュアルp30, またはMEASURE3 mt32_drum_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_COMMON n,id  {"名前",n1,n2,n3,n4}        ＊

  ＭＴ３２の音色のコモンパラメータを設定する。

  n:設定対象ティンバー番号(1≦n≦64)
  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)
  名前は10文字以内(省略不可)

  パラメータは4個まで。

（MT32マニュアルp34, CM64マニュアルp29, または MEASURE3 mt32_common()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_PATCH n,id  {n1,n2,…,n7}                ＊

  ＭＴ３２のパッチを設定する。

  n:設定対象パッチナンバー(1≦n≦128)
  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

  パラメータは7個まで。

（MT32マニュアルp35, CM64マニュアルp30, またはMEASURE3 mt32_patch()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_PARTIAL n,p,id  {n1,n2,…,n58}            ＊

  ＭＴ３２の音色のパーシャルパラメータを設定する。

  n:設定対象ティンバー番号(1≦n≦64)
  p:設定対象パーシャルナンバー(1≦p≦4)
  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

  パラメータは58個まで。

（MT32マニュアルp34, CM64マニュアルp29, またはMEASURE3 mt32_partial()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.MT32_PRINT id "文字列"

  ＭＴ３２のコンソールに文字列を表示する。

  id:ＭＴ３２のデバイスＩＤ（省略可能、初期値$10)

  文字列は20文字以内。

（MEASURE3 mt32_print()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●Ｕ２２０／Ｕ２０専用命令
  パラメータの意味などは楽器のマニュアルあるいはMEASURE3を参照のこと
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_SETUP id  {n1,n2,…,n7}                  ＊

  Ｕ２２０のセットアップパラメータを設定する。

  id:Ｕ２２０デバイスＩＤ（省略可能、初期値$10)

  パラメータは必ず7個。

（U220マニュアルp46,p146,p148, またはMEASURE3 u220_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_PART_SETUP pt,id  {n1,n2,…,n13}                  ＊

  Ｕ２２０のテンポラリ・パッチのパートパラメータを設定する。

  pt:パートナンバー(1≦pt≦6)
  id:Ｕ２２０のデバイスＩＤ（省略可能、初期値$10)

  パラメータは必ず13個。

（U220マニュアルp58,p149, またはMEASURE3 u220_part_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_COMMON id  {n1,n2,…,n18}                 ＊

  Ｕ２２０のテンポラリ・パッチのコモンパラメータを設定する。

  id:Ｕ２２０のデバイスＩＤ（省略可能、初期値$10)

  パラメータは必ず18個。

（U220マニュアルp54,p149, またはMEASURE3 u220_common()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_TIMBRE n,id  {"音色名",n1,n2,…,n12}              ＊

  Ｕ２２０に音色パラメータを設定する。

  n:セット先音色ナンバー(1≦n≦128)
  id:Ｕ２２０のデバイスＩＤ（省略可能、初期値$10)

  音色名は12文字以内。
  パラメータは必ず26個。

（U220マニュアルp72,p149, またはMEASURE3 u220_timbre()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_DRUM_SETUP id  {n1,n2,…,n7}              ＊

  Ｕ２２０のテンポラリ・パッチのドラム・パラメータを設定する。

  id＝Ｕ２２０のデバイスＩＤ（省略可能、初期値$10)

  パラメータは必ず7個。

（U220マニュアルp63,p149, またはMEASURE3 u220_drum_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_DRUM_INST n,id  {n1,n2,…,n20}            ＊

  Ｕ２２０のテンポラリ・ドラムキットの各ノートにおけるパラメータを設定する。

  n:ノートナンバー(35≦n≦99)
  id:Ｕ２２０のデバイスＩＤ（省略可能、初期値$10)

  パラメータは20個以内。

（U220マニュアルp72,p149, またはMEASURE3 u220_midi_inst()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.U220_PRINT id  {"文字列"}

  Ｕ２２０のテンポラリ・パッチの名前を設定する。

  id:Ｕ２２０のデバイスＩＤ（省略可能、初期値$10)

  文字列は12文字以内。

（MEASURE3 u220_print()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●Ｍ１専用命令
  Ｍ１専用命令は途中でＭ１関係以外の命令が入ると正常なデータが楽器側へ
　送信されないので注意
  パラメータの意味などは楽器のマニュアルあるいはMEASURE3を参照のこと
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.M1_MIDI_CH {ch1,ch2,…,ch8}

  Ｍ１のＳＥＱ０の各パートの受信チャンネルを設定する。

  パラメータは必ず8個(1≦chi≦16:MIDI CH,17≦chi:off)。

例
  .m1_midi_ch {1,2,3,4,5,6,17,10}
  (パート1～6をＭＩＤＩチャンネル1～6に設定し、パート7はOFF,
  パート8をＭＩＤＩチャンネル10に設定)

（MEASURE3 m1_midi_ch()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.M1_PART_SETUP {n1,n2,…,n40}                   ＊

  Ｍ１のＳＥＱ０の各パートのパラメータを設定する。

  パラメータは必ず5×8パート分＝40個。

（M1マニュアルp126, またはMEASURE3 m1_part_set_up()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.M1_EFFECT_SETUP {n1,n2,…,n25}                 ＊

  Ｍ１のＳＥＱ０のエフェクトパラメータの設定。

  パラメータは必ず25個。

（M1マニュアルp127, またはMEASURE3 m1_effect_setup()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.M1_PRINT "文字列"

  Ｍ１のＳＥＱ０のソングネームの設定。

  文字列は10文字以内。

（MEASURE3 m1_print()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.SEND_TO_M1 id

  '.M1_MIDI_CH', '.M1_PART_SEUP', '.M1_EFFECT_SETUP', '.M1_PRINT'で設定した
パラメータをＭ１へ送信する。

	id:Ｍ１のデバイスＩＤ（省略可能、初期値$30)

備考    デバイスＩＤは$30＋グローバルチャンネル(0～$f)で求められる。
	グローバルチャンネルとはGLOBALモードのF5－1で設定出来る。
	必ず'.M1_MIDI_CH'～'.M1_PRINT'を設定してからこの命令を実行すること。
	'.M1_EFFECT_SETUP'のみ省略が可能。この時はドライバのデフォルトデータが
	送信される。
	'.M1_MIDI_CH'～'.M1_PRINT'の間にＭ１関係以外のコマンドがあると正常なデータが
	送信されないので注意すること。

（MEASURE3 send_to_m1()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
●その他
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.WAVE_FORM wv,lt,lp {dt0,dt1,dt2,…,dt65535}

  波形メモリの登録。

  wv:波形番号(8≦wv≦31)
  lt:ループタイプ(0≦lt≦2)
  lp:ループポイント(0≦lp≦65535)
  dt0,dt1,dt2,…,dt65535:波形データ(－32768≦dti≦32767)

備考    波形番号8～31に登録できる(波形番号0～7はプリセット波形などが
	設定されておりリザーブ)。
	パラメータのループタイプとは波形を最後まで処理を終えたあと、
	どうループさせるかを設定するもの。
	0 →            ワンショット    (波形を一度実行したら最後の値を継続する)
	1 →→→→....  リピート        (波形の終点までいったならば
					ループポイントに戻る)
	2 →←→←....  オルタニティヴ  (波形のループポイントから終点まで
					交互に反復する)
	ループポイントは0～65535までが有効。これは何番目のデータを
	ループポイントに設定するかを決めるパラメータで省略すると
	ループポイントは0、すなわちデータの先頭がループポイントと見なされる。
	波形データは符号付き16ビット整数で構成する。
	(－32768～＋32767($8000～$7fff))データの個数は65535個まで。
	それ以上は設定できない。

例
  .wave_form 8,0,10 {0,5,－5,10,3,－300,10,6,80,10}

（MEASURE3 m_wave_form(), 詳しい使い方はMEASURE5参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.FM_MASTER_VOLUME n

  ＦＭ音源のマスターボリュームの設定。

  設定範囲は0≦n≦255で255が最大音量。通常は255。

  コンパイル時のみ有効で演奏中に指定しても無意味。

（ZMDデータとしては生成されないコマンド）
（MEASURE3 fm_master()参照）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
/  文字列

  '/'より後ろをコメントとして無視する。

例
  / ORGAN SOLO

（ZMDデータとしては生成されないコマンド）
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
.COMMENT 文字列

  後ろをコメントとして無視する。

  単なるコメント行だが'/'と違うのはコンパイルされたデータ（ＺＭＤデータ）にも

残るという点（ただし演奏には影響なし）。

  曲のタイトル、制作日時、自分の名前等をＺＭＳファイル先頭に記述するのが一般的。

例
  .comment STAGE 1 BGM VERSION 1.10 (c)1992/11 XVI
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
